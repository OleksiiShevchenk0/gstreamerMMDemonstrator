<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>Gst::AllocationParams</name>
    <filename>classGst_1_1AllocationParams.html</filename>
    <member kind="function">
      <type></type>
      <name>AllocationParams</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a6827a1f9deb14814e2cc3d175e7cdbd0</anchor>
      <arglist>(GstAllocationParams *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AllocationParams</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a130aa47fdbcb73c05013fdee2666af5a</anchor>
      <arglist>(const AllocationParams &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AllocationParams &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>af2adc806c6363413b993dc83d81d36ea</anchor>
      <arglist>(const AllocationParams &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AllocationParams</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a29436f7d75b78411de92242fac38a39d</anchor>
      <arglist>(AllocationParams &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AllocationParams &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>ab7aad591993498400452216cdd0741d5</anchor>
      <arglist>(AllocationParams &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AllocationParams</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a8e81eec3a688eb9598748cb04e2a45e1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a75ed406fcc34de777ddab3933ad0fc21</anchor>
      <arglist>(AllocationParams &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GstAllocationParams *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>affc4eee9f29c255d2cc71732681335d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAllocationParams *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a6dcba7add5013ea17f755cbc3316a815</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAllocationParams *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a7d429ab03402b1c238cb25df24130afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AllocationParams</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a32b24b05d02c1e49a27c8cd46f93698c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>ac62592ace57bc49aabbc3a3127ba899b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a2a0e8243354b52992cd284210ddc225e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a20473f212339250885e27bec8630b713</anchor>
      <arglist>(const MemoryFlags &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_align</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a1ccadab30d2b45f019907e5f944d21f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_align</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a518b71f0df13ddeb376b867c4a9fce90</anchor>
      <arglist>(const gsize &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_prefix</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a6ac34187b22e821704d5afb053151c56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_prefix</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>aed52289720e28b7e1b93798c457c0179</anchor>
      <arglist>(const gsize &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_padding</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a5f1bc3e3e4c688a089fbd45a1f61a9bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_padding</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a4ab23a380e3a78f8d37771884fdf0bea</anchor>
      <arglist>(const gsize &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a75ba5307277bd31759b6397010c8f865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstAllocationParams *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a8e88985e9ecfe5d1c03c8dcfe458e3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>aede406ac8b95d9a2edadce1f22230fad</anchor>
      <arglist>(AllocationParams &amp;lhs, AllocationParams &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gst::AllocationParams</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AllocationParams.html</anchorfile>
      <anchor>a0b3fe627079b2f8c2f8b02fbdff24f4c</anchor>
      <arglist>(GstAllocationParams *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Allocator</name>
    <filename>classGst_1_1Allocator.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ada87d630a2b20e3c7fb745ca8f3cf8d0</anchor>
      <arglist>(Allocator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Allocator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a8bf361dba391e0df810334f162b972ae</anchor>
      <arglist>(Allocator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Allocator</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>afb43dcd89764ddb97422ac1f3a799db9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAllocator *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>afa5587ae33320bb41bd3182b3098ff0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAllocator *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a7d9e9d6dd174dda3af23c06df04f369a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAllocator *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ad4f0e973bd95838c826eaed5deba58bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>aaaf3da640c4142e972211ab91b9fbe1d</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;memory)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>alloc</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a3c5f75a88f413f440503f1ce453b9515</anchor>
      <arglist>(gsize size, const Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>alloc</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a83695cb3b230ebc513e30b1109a2c52b</anchor>
      <arglist>(gsize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ad2a701df632565958414158b0e64e821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>alloc_vfunc</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>aece4f3784e7aeddabe7886aeffa7c1af</anchor>
      <arglist>(gsize size, const Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>free_vfunc</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ac3f01ba80bc586aa9a4157fd298a6287</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;memory)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a01d56480cc06e49825495d79e9dbef87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>find</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a16572861cb6812e7ca49c52984b63dbc</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>register_allocator</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ac27b967a62fb39041587eb3eae1b5849</anchor>
      <arglist>(const Glib::ustring &amp;name, Glib::RefPtr&lt; Gst::Allocator &gt; &amp;&amp;allocator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>get_default_allocator</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>ac1f34112e9a8d9fb45fe557308d53a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Allocator.html</anchorfile>
      <anchor>a13fecc8ab4eada44b0a1fd84dae17507</anchor>
      <arglist>(GstAllocator *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AtomicQueue</name>
    <filename>classGst_1_1AtomicQueue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a591cf58fdc72f0811b8ed631963ee814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a9e9d27b82f328bc2f4208fb9e0ed2990</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const GstAtomicQueue *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a62d2a7d6737a8877e69ab5215b52b5e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAtomicQueue *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>ae6d4a4a1d8fa52986103843545600dd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstAtomicQueue *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>adcaf5d46fc1b1b0e40db9d57c2af722c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>length</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a03d6101b41b36593fa3a6ac674b41385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>length</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a9e79cbc7644e632a90820163bdb4b305</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a291d7534f0afb0ee6ab1c55b8da1097b</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>peek</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a00eb18ebf8e854ed507d50c873371196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>pop</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>ad4a59310d6e95dcb28fb286b20cd9ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::AtomicQueue&lt; T &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>aeaf70d76fddd8a65284e39c4044e8f3e</anchor>
      <arglist>(guint initial_size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AtomicQueue</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a7979dc6ab35a530b53093ce08427b66e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>ad618e7431a5e63bb9f0efafff8a561ca</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AtomicQueue&lt; T &gt; &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AtomicQueue.html</anchorfile>
      <anchor>a447382e449ece11892f4aeb27050d832</anchor>
      <arglist>(GstAtomicQueue *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioBaseSink</name>
    <filename>classGst_1_1AudioBaseSink.html</filename>
    <base>Gst::BaseSink</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; Gst::AudioBaseSink &gt; &amp;, Gst::ClockTime, Gst::ClockTime, Gst::ClockTimeDiff &amp;, Gst::AudioBaseSinkDiscontReason &gt;</type>
      <name>SlotCustomSlaving</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a11072496955c11659c5897d879a9df1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioBaseSink</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>ace2edecd8e3a08ae7a37b5565ef6ec7c</anchor>
      <arglist>(AudioBaseSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioBaseSink &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a9b6c55eb72e8ab3cc49f74de95a79e0d</anchor>
      <arglist>(AudioBaseSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioBaseSink</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a4772f5e2d88fce12367eed5eea736260</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioBaseSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>af3bd71214e9b593c80485fbf4f21a3ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioBaseSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a834dcbd0f151740ffce1a27a4ee2914c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioBaseSink *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a8c1c9c22447fc1f30baf42f0e887e0ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_provided_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a6e47f1a549463eb36f6e49420bb96012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_provided_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a8158a020d91bcfa82798436fd0deccfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioRingBuffer &gt;</type>
      <name>create_ring_buffer</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>ad50520de4faae40cfd10356fb8571ff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a72fa949b15a12000c8aa76e8ae70136e</anchor>
      <arglist>(bool provide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a142a74eea7f7d457b166ba295378f0f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a447f5a07ee428d063fd823ca059771d2</anchor>
      <arglist>(Gst::AudioBaseSinkSlaveMethod method)</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioBaseSinkSlaveMethod</type>
      <name>get_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a18359625d9a9178fcd83ce35e0ffd5ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_drift_tolerance</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>abfe020a4cba58b29983c14fd4bb25dbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drift_tolerance</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a485cfb1c763e0d5fd91ed228877e93be</anchor>
      <arglist>(gint64 drift_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_discont_wait</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a0bd3a70d14016825f72255f81af37ea6</anchor>
      <arglist>(Gst::ClockTime discont_wait)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_discont_wait</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a584fe1e646f43041b81c66ad168996be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment_threshold</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a0a7208d40bf99f939c56cdec5e9e7ecd</anchor>
      <arglist>(Gst::ClockTime alignment_threshold)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_alignment_threshold</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>abf7edbdfdb81371df9c2e61487487aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report_device_failure</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>ade464e6f8eda7b348f28be94bb472f5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom_slaving_callback</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>adc1173f2f8a5ebc6f73df1dc2b62e5b3</anchor>
      <arglist>(const SlotCustomSlaving &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_alignment_threshold</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a386438fa1757e163a4c047bb5a9548c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_alignment_threshold</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>aa3d61ca0897b658974d1135b1a6790a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_buffer_time</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>af4627b6d1a163e64c83dda7a09d64814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_buffer_time</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a95efabd27baf83f0c0a3404d3ce7eb31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_activate_pull</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a1ce3906071581cd7ce3badc56ea1e00d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_activate_pull</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>af10552cfae1aab97449edf7579b2a907</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_discont_wait</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a168d66cbced32ae8306c28cb6d51e974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_discont_wait</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a4dcbccb4fc7ac61db00a3af88e881ff5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_drift_tolerance</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>aa0cbf3fa3a2c2efbcbd6a65122f14fa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_drift_tolerance</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>acef18be3bbff919b699420a2967addb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_latency_time</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>afce7a6c3ba509b35157b87619e38a76b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_latency_time</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a4fc5ef0d84ee6eecdeb4ea2117d2a062</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a6dea6cd0037dcb36ed339d641c99eda8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a02745fd361fcc4a0c15285b2fa51d4b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gst::AudioBaseSinkSlaveMethod &gt;</type>
      <name>property_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>abed5fef39caf05a7dba13271de2bb9af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gst::AudioBaseSinkSlaveMethod &gt;</type>
      <name>property_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a7c6a6a4bf291cc32123c902cad03da48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::AudioRingBuffer &gt;</type>
      <name>create_ring_buffer_vfunc</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a1b5be2cbc04b6f04da65317f1b8d4eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>payload_vfunc</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a5ab1e47ea0ca23ec4c5483fdffe900aa</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>a39e8ed24e069f63d0e534ed06a74da8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioBaseSink &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioBaseSink.html</anchorfile>
      <anchor>ab173fa91fa9c5c2581e07f2394f5cc1a</anchor>
      <arglist>(GstAudioBaseSink *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioBaseSrc</name>
    <filename>classGst_1_1AudioBaseSrc.html</filename>
    <base>Gst::PushSrc</base>
    <member kind="function">
      <type></type>
      <name>AudioBaseSrc</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ae267bfd5d147e7601ea4c3f6a1c1e581</anchor>
      <arglist>(AudioBaseSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioBaseSrc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a860596132493964d87958282aa14f7a9</anchor>
      <arglist>(AudioBaseSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioBaseSrc</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a6a11574cbf39002a0cbbe2bfbd0bfa41</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioBaseSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a6ee0619672806b37ffa1369a733b20ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioBaseSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a91ad2c494ae703928aa89ac1136f08e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioBaseSrc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ac34e8741b3550bd3d7ee83d55dd5e5ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ac3014a6273a5767f542017ba7d06b122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ad9427ca6edf670e22d90548114f7c32a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioRingBuffer &gt;</type>
      <name>create_ring_buffer</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>afa20b80d21d4fd2ec487ec93a9fb0554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ab0bf43ebf825e08c70b37a51596d5ac4</anchor>
      <arglist>(bool provide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a3eec00278e118711751e29b242414b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a0891074aad4a46faf3f6ac97a8996716</anchor>
      <arglist>(Gst::AudioBaseSrcSlaveMethod method)</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioBaseSrcSlaveMethod</type>
      <name>get_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a78561627c9162fa7f33116c0d4c2eaea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_actual_buffer_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>ac208a85353eb930a264aacb067f3fb62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_actual_latency_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a554919437dc79e6ca37596fc63860842</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_buffer_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a248f78c213b8ad33e7b443efec4b6c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_buffer_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a2f3dc3588935d173c3226494539fead1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_latency_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a26d7e196547d6783093e164cb8e7a395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_latency_time</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>aa9d0b306c7b5590598cb94e44c4adc64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a06558db68f2c1f0a2d3e45333beea811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_provide_clock</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>af79adb132b08894c2e4f878f39b2126b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; AudioBaseSrcSlaveMethod &gt;</type>
      <name>property_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a425711a5d6d0018bd710a5d2471cf1ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; AudioBaseSrcSlaveMethod &gt;</type>
      <name>property_slave_method</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a12e558fc3e1b4feafa5cbae2ca63df95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::AudioRingBuffer &gt;</type>
      <name>create_ring_buffer_vfunc</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>afee59d8ffa52cd79be10b30f47f3183d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a6f8ebe4efeab300e68b61bdbf26754df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioBaseSrc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioBaseSrc.html</anchorfile>
      <anchor>a5ca3e1d7e4e754229315d7e2b5e21606</anchor>
      <arglist>(GstAudioBaseSrc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioCdSrc</name>
    <filename>classGst_1_1AudioCdSrc.html</filename>
    <base>Gst::PushSrc</base>
    <member kind="function">
      <type></type>
      <name>AudioCdSrc</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>afc4720459b792d99fa354fd474bc2fa4</anchor>
      <arglist>(AudioCdSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioCdSrc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a4c515af661027e412ab4db5d266087a8</anchor>
      <arglist>(AudioCdSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioCdSrc</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a4fdb9c40eadc1106a49856e1692b63a3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioCdSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a60a5ad69c62db90a033d919eb6fbe404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioCdSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a9282c151e13b94b8e52c0e8a68406b1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioCdSrc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a7a73172ca985275f7bb432b1e0191a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_track</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a61256a015235b44d9b45903e0417ab8d</anchor>
      <arglist>(guint num, guint start, guint end, bool is_audio=true, const Gst::TagList &amp;tags=Gst::TagList())</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_device</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>ae957524c32502217bc3c354d915e7b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_device</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a236f67e8184421aecdb4b84f2f94d222</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; AudioCdSrcMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a56bd90ee0e071817dd641423e9c5f22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; AudioCdSrcMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>ae7e05d97faab96b4114a99492c2c5fa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_track</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a7c50a5ce90f5b7b3c6e97a9aaa03450f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_track</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>ab415c17cefd1e222c40a5e90ee518a6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open_vfunc</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>ade4e3ad60f3639cc71a87ce1d47a7508</anchor>
      <arglist>(const std::string &amp;device)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close_vfunc</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a54bde9e9a8084e6056226c5b77d063a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>read_sector_vfunc</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a71ebbf3b3c595a88753b8012c6d5aa3d</anchor>
      <arglist>(gint sector)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a924ba23792e3d34fc0eae094d2a933aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioCdSrc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioCdSrc.html</anchorfile>
      <anchor>a25784352ce37cd7ac3f2f231569d6313</anchor>
      <arglist>(GstAudioCdSrc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioClock</name>
    <filename>classGst_1_1AudioClock.html</filename>
    <base>Gst::SystemClock</base>
    <member kind="typedef">
      <type>sigc::slot&lt; Gst::ClockTime, const Glib::RefPtr&lt; Gst::Clock &gt; &amp;&gt;</type>
      <name>SlotGetTime</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>ab26fe1aec14a7b3b7bb34a87fc319e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioClock</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a044dd1783a2df1a4cec1c220a66305ec</anchor>
      <arglist>(AudioClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioClock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>aceec43f4c9fa38f89a2c33de0bc56104</anchor>
      <arglist>(AudioClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioClock</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a4bcc9288e27788f9284bf9345ce0952a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a3433b11a621ab898d05c36df2a331ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a1ad02b440c4975117c235e61f89549d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a89862916e87b4b7bb77c2a3fff64271d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>ae05a4bd5d35fe4b9c0dcecb0edcced4a</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>adjust</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a4339abdb151a0ee357156ca98acc91b0</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_time</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a1ee2b7765ce5b66f2b02448da15da11c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a19559c0069450250ca4ccc793d642891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a07c5e8c4bf01d1e3d0a89547fd5fe809</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AudioClock &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>ab565f6e1b1d2e934591608e81d04353e</anchor>
      <arglist>(const Glib::ustring &amp;name, const SlotGetTime &amp;time_slot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AudioClock</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a83be91211e5a6f3fe98188fa6801b8ac</anchor>
      <arglist>(const Glib::ustring &amp;name, const SlotGetTime &amp;time_slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioClock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioClock.html</anchorfile>
      <anchor>a6bf5b0951c7f33e9e58c34e2f2cd59f8</anchor>
      <arglist>(GstAudioClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioFilter</name>
    <filename>classGst_1_1AudioFilter.html</filename>
    <base>Gst::BaseTransform</base>
    <member kind="function">
      <type></type>
      <name>AudioFilter</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>ae8e2c7758856cd5f9b4c66c6c0a3f6e9</anchor>
      <arglist>(AudioFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a26b101672d8a90434028f1cebe3221d6</anchor>
      <arglist>(AudioFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFilter</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a59cf0f157a47e35bb481ce9546bf149c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioFilter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a28988bf8244ba124922d8537841ddc56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioFilter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a0e1abcca5a9eaa81b9352f9ceb322002</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>ac80e02c84b823382d9e3c6d37bd79da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setup_vfunc</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a92f03ed6224ee6a592315ba57d7320a9</anchor>
      <arglist>(const Gst::AudioInfo &amp;info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a560aa700e393824a77f5d97ab045477d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioFilter.html</anchorfile>
      <anchor>a0065a61e2c733f3912b38aafe5e800d2</anchor>
      <arglist>(GstAudioFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioFormatInfo</name>
    <filename>classGst_1_1AudioFormatInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFormatInfo</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ad16a9a9a017a01afdc9a4377f7a63bad</anchor>
      <arglist>(const GstAudioFormatInfo *m_info)</arglist>
    </member>
    <member kind="function">
      <type>GstAudioFormatInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a60943487bf9f5a042b2ff4f9f85a7dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioFormatInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aa9c77b986c1d648313677b09e5faba5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFormat</type>
      <name>get_format</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ac61ec967e8d946c4b839228b838549c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a514af2aec28d92d56e42b8520d12324f</anchor>
      <arglist>(const AudioFormat &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ae6524e7b31550585858e2b2387560994</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ae664316bf23f274c618c8c4b86a0e448</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_description</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aafb6cc29e85d87a0962d80f0753d5d63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_description</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ae707402507ebb88d16928879cfb05d7e</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a23300101775a095ceecce0fc28f0cb67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aa78a5da007afdb5a10f8b6d9716716f0</anchor>
      <arglist>(const AudioFormatFlags &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_endianness</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aa8c8573369e50921d99a36302a1048f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_endianness</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a9d0ccae08e06e63a21c8f96a0befa57e</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aaf5476717faa16f84366d16c6be47851</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>ab20b5bdfd4c9af1d2d6fb7d8fd1b2e5a</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_depth</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a1692ca49b54046c954032e4a78dc53ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_depth</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a3afe7e10c6af760580b5c9da9abd018d</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormat</type>
      <name>get_unpack_format</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>aa6e540b5927a93d795abc657772b03b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unpack_format</name>
      <anchorfile>classGst_1_1AudioFormatInfo.html</anchorfile>
      <anchor>a8a804db84899d311b051fe3de8c68aeb</anchor>
      <arglist>(const AudioFormat &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioInfo</name>
    <filename>classGst_1_1AudioInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ae607aa804ff4e45612bc83fcfb3cdf86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>af72dd3fccac8451cfd1ffd00982c6af8</anchor>
      <arglist>(GstAudioInfo *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a6a4a9feaed5803e693e3a6ae8f8ea77c</anchor>
      <arglist>(const AudioInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AudioInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>aafd7bbe6b1b27d20acd2fd5e49bd840d</anchor>
      <arglist>(const AudioInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a77ab64c7e9fe2f0718512b678a765f57</anchor>
      <arglist>(AudioInfo &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ace72e9d38f312018e2df8d4801c9412a</anchor>
      <arglist>(AudioInfo &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>acd67679aac4d73f766df4580c375faa2</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>aeb66d9ade66ece986558841626b63ff0</anchor>
      <arglist>(AudioInfo &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GstAudioInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a45072be258e64a7bd6c57e448fc9f751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>afc3eaeab3a5b7cb0fa451bcbbab573cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ae5310a10ff78a2253f6a1f59bae3f37b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioInfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>abaaa3df54eb79d73419ba1a31923a892</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a24cc7ef18c94b99362dcb9e29325e380</anchor>
      <arglist>(const Gst::AudioInfo &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ab678cc795a6a8b12f689a30bc6345714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>from_caps</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>afac3deefd1984a485176aa03eddf1b4c</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>to_caps</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ad59a8a5b88fa99eb397f096e75e4035e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convert</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a0e8f44eb90cb0544d3d40d751ed4d865</anchor>
      <arglist>(Gst::Format fmt, gint64 src_val, Gst::Format dest_fmt, gint64 &amp;dest_val) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a6a7a5c929d806feac482fe56c6726f50</anchor>
      <arglist>(Gst::AudioFormat format, int rate, int channels, const Gst::AudioChannelPosition *position)</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ae66053bb06470c4d8d6499b9e087fc28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ad9b72661e6b372164f880a70efbf09a2</anchor>
      <arglist>(const Gst::AudioFlags &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioLayout</type>
      <name>get_layout</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a3e376a86107310118fc9ffeebb1f79a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_layout</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a6b68a24d31f53cc20e61f9ca51def0fd</anchor>
      <arglist>(const Gst::AudioLayout &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_rate</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>afcfe4118f2356ce9ac7bd08f36d0de46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rate</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>aed8e7dca52667b398ddc48ccaf5f71d4</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_channels</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ac9c4ea2cb15be1670ad48cd40c2f4b92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_channels</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a6255f04b72a66447b303f7a93cfe10e5</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bpf</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a076866191f2e286b117605e4de3d3451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bpf</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a0c0a7617b511b57da383b5dc0b8bf2bf</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const Gst::AudioFormatInfo</type>
      <name>get_finfo</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>af7cb7676481e485943acc14d5c7c0ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a83adf0d87383309e9efeefb1f69dd51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstAudioInfo *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a37a0c6fb64a09d5eea2b4e7c9dbaa33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>ac64dfdd786850d8b544ff9fd6e7c5e9c</anchor>
      <arglist>(AudioInfo &amp;lhs, AudioInfo &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioInfo</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioInfo.html</anchorfile>
      <anchor>a43e47c6f787d817bce7234c2e66f28af</anchor>
      <arglist>(GstAudioInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioRingBuffer</name>
    <filename>classGst_1_1AudioRingBuffer.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::ArrayHandle&lt; guint8 &gt; &amp;, guint &gt;</type>
      <name>SlotFill</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>aaa0ca242cd41f85a70f8fb78d453adba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRingBuffer</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a5b27d1498155fc01bf0014b13ded039b</anchor>
      <arglist>(AudioRingBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioRingBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>af89f0e4003d630795ec1101939b490ab</anchor>
      <arglist>(AudioRingBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioRingBuffer</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>afb0d5e58a7b232536f1344197f920bca</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioRingBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a21bb70f6f5db9913ea3385291e94e7d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioRingBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a04e02623ca9cb424e23c9d12c4f8e459</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioRingBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a89d8db188f2f172fc322de3f61c10f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fill_slot</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a51a068d1eebb995f0cf3f5a730959fb6</anchor>
      <arglist>(const SlotFill &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>acquire</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ac618efba33a8e2034b93c9771dfd6b91</anchor>
      <arglist>(Gst::AudioRingBufferSpec &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>release</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a9d3d5481bf6ab8f702dc1eca08f571c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_acquired</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a5160cec00da1413213d84a9bac25fb8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a0baf3bc9bcfca1700cf2e5407427fe1e</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a44f21af9a67b9fea89c86f6299705c37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a464af003acd05738242d988569c84102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pause</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a76f48fc6ad4d9a864158f7c55451ab3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a09dd4f37b369fa9bb0ca92d47ab3ce75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_delay</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>af7d5c5e39e3509b78545d8ebd99715b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_samples_done</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a310d82be5e81f0acca51df8a8a8564e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sample</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ab32c0b90727e00e6a321c182da14678e</anchor>
      <arglist>(guint64 sample)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_channel_position</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a8f5c8742f117a243e91cdc03be12e584</anchor>
      <arglist>(const Gst::AudioChannelPosition &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>gboolean</type>
      <name>is_flushing</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ae8e6472fbdf7fdc88365e1fcd9ad73f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_timestamp</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a8ccc809532cb7bae42b53b11bcfdce4d</anchor>
      <arglist>(gint readseg, ClockTime timestamp)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>commit</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>aecdf885314df27f0adb6a66ce7e56ee1</anchor>
      <arglist>(guint64 &amp;sample, const std::vector&lt; guint8 &gt; &amp;data, int in_samples, int out_samples, int &amp;accum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convert</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>aa66bae340f74a4c322adf19e7f55d1fb</anchor>
      <arglist>(Gst::Format src_fmt, gint64 src_val, Gst::Format dest_fmt, gint64 &amp;dest_val) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prepare_read</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a02d30e2707149974d9739e9b2b3e9cdc</anchor>
      <arglist>(int &amp;segment, std::vector&lt; guint8 &gt; &amp;readptr, int &amp;len)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>read</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a627aa8c604f82071c1c5d63184831d7e</anchor>
      <arglist>(guint64 sample, const std::vector&lt; guint8 &gt; &amp;data, guint len, Gst::ClockTime &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a85f7701aa44de1c9c48f58785d8d4da6</anchor>
      <arglist>(int segment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_all</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a1b6454355fda1165bc907a953eebc6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advance</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>abd198d879eb086309713fe22885f1b53</anchor>
      <arglist>(guint advance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>close_device</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a3cd36fd0cbf89d35e26db01d76448cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open_device</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ac4e07cef2df19e9b253cf7eb68c98d69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>device_is_open</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a906c2f58d05766490bb7c5361ae66ad3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_may_start</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ace248b9997f15c1ce722e431b63c2691</anchor>
      <arglist>(bool allowed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flushing</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a709175c9b7d12db9a64e9a156c824c72</anchor>
      <arglist>(bool flushing)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open_device_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>aacf0125421f1e07b784a1ca1485f8f7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>acquire_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a8cc7a205c77f8ae87d5e79ebdc29b87a</anchor>
      <arglist>(Gst::AudioRingBufferSpec &amp;spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>release_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a46fc2e5fbf07cf574c6b46166b0029d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close_device_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>acccc02ba56510c351771b1afc0049095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>start_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ae04f27f43901ff0b9aabc0736da89be7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pause_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a90c262cf5c89ad34ba07e460c5120a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resume_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a05039572762db69dab0017392eb589c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>stop_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ace88bed8896343faedc04539148db3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>delay_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a3a5c10cab96ac41b951639973b42b925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a93b66a9bc7a1dc0b0e36e5545083f7c3</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>commit_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>ae8399e7a3ded1a25000e06e21801fee9</anchor>
      <arglist>(guint64 &amp;sample, const std::vector&lt; guint8 &gt; &amp;data, int in_samples, int out_samples, int &amp;accum)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear_all_vfunc</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a93df6ceb1322f68a39bdfc6c097ebbd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a4d6975fb0585879e104e3465eaabd109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parse_caps</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>a2e816288ce2579fae9c9e547a92fa64a</anchor>
      <arglist>(Gst::AudioRingBufferSpec &amp;p1, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioRingBuffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioRingBuffer.html</anchorfile>
      <anchor>aed23755f97735f7ecb82477e2b2d0fa4</anchor>
      <arglist>(GstAudioRingBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioRingBufferSpec</name>
    <filename>classGst_1_1AudioRingBufferSpec.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioRingBufferSpec</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>ab38935c8ee6a8b0caea86151024c5e8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRingBufferSpec</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>adb4d0bd2a7827d4a188266a62c32d62c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, Gst::AudioRingBufferFormatType type=Gst::AUDIO_RING_BUFFER_FORMAT_TYPE_RAW, guint64 latency_time=0, guint64 buffer_time=0, int segsize=0, int segtotal=0, int seglatency=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRingBufferSpec</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>abed36e741229c4783c296606c108c107</anchor>
      <arglist>(GstAudioRingBufferSpec &amp;castitem, bool take_ownership=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRingBufferSpec</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a316fe73638e77ffb2cf04a8ff97a6419</anchor>
      <arglist>(const AudioRingBufferSpec &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AudioRingBufferSpec &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>ae6f5019692d947b02da104645c37e782</anchor>
      <arglist>(const AudioRingBufferSpec &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AudioRingBufferSpec</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>abb3a1d1a05667c17ac3f367381722f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a65fce4e0a6dccd6a8d2116907aab521c</anchor>
      <arglist>(AudioRingBufferSpec &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>GstAudioRingBufferSpec *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a322997dba96da15441defd3f06476d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioRingBufferSpec *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>ac913aae14083d6bdd65ce9cd2a2bedde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a2182c9c60d961c116cef2cdfe626582e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a39738273cf98fca5c2a09bf2ae58aeea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_caps</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a98b6119ec28947ba750bd1a2f5e9d88a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::AudioRingBufferFormatType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>abec813eecfd2ed3fb8f0459530e59185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>aa4ce6e6d9a77814f72c52d4c9f75ae4d</anchor>
      <arglist>(const Gst::AudioRingBufferFormatType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_latency_time</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a6d7d3bd4a6926c4292297d0d1851fda2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_latency_time</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a64c5d632aee85e0174b8ded13e17b2f8</anchor>
      <arglist>(const guint64 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_buffer_time</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a760729741d8d92e14388ab586d8de9f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer_time</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a4a6baf1fd0b38189fbf413a93bde3ef8</anchor>
      <arglist>(const guint64 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_segsize</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a55678b603aacd04ce9756480317e04f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_segsize</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a8c5abf505247d1436801b8a6a5f4f031</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_segtotal</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a74293184a5bda71d7b5e7f71a3dc7a6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_segtotal</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a18893f5c7dee0f37a4b8dbc85f4a0f58</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_seglatency</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>a63d85fcc1016b010945b062eb536d79a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seglatency</name>
      <anchorfile>classGst_1_1AudioRingBufferSpec.html</anchorfile>
      <anchor>ad931dc804a724bef2d771d543c2a48d6</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioSink</name>
    <filename>classGst_1_1AudioSink.html</filename>
    <base>Gst::AudioBaseSink</base>
    <member kind="function">
      <type></type>
      <name>AudioSink</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a479522421d68484d47f84cf9e899e97b</anchor>
      <arglist>(AudioSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioSink &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>af5641629b991288388bf2282c9ee42ee</anchor>
      <arglist>(AudioSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioSink</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a531fbffdfd92280ea98702ef3cae11fc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>afe1a079581089501006066edc9ba31de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a082d7d79907beb8fb817e4aeaf767b79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioSink *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a7a5fd2477b8ff46e63f53405fb5dd6c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a2d22812097321ee4504b4172c96d6645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare_audiosink_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>ac1dec96dd10c6c7abd6fa781a4b43ff6</anchor>
      <arglist>(Gst::AudioRingBufferSpec &amp;spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unprepare_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a5261fed39498583780c36ff46c407da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a4dd9675c66e0fd8dffac54a844e167f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>write_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>ab32690ea9eff4ad899d37621482729e5</anchor>
      <arglist>(gpointer data, guint lenght)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>get_delay_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>a0931309b455743ea0d38647fe3e1105f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset_vfunc</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>abd80590065a9b907dd7f584b37d3a62a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>ade3d8fc0a0a510f75f31f508c5df7224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioSink &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioSink.html</anchorfile>
      <anchor>ac857f4ba5f28cbb9835f33d6fa6cc6aa</anchor>
      <arglist>(GstAudioSink *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::AudioSrc</name>
    <filename>classGst_1_1AudioSrc.html</filename>
    <base>Gst::AudioBaseSrc</base>
    <member kind="function">
      <type></type>
      <name>AudioSrc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a4efb8330ccd6b9a1550302ebd318ddc6</anchor>
      <arglist>(AudioSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioSrc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>afdb9a9a3f5557ee3fc2f3ce781c6c103</anchor>
      <arglist>(AudioSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioSrc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a1bd2ca4e508cd53ede2ee8965093710c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstAudioSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a16e3cea6516c9e9243d5e415d64e90a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstAudioSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a6c97b38b154e201b3a07fa07accc7fdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstAudioSrc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a57aec00291d765eacd4063b9902003e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>af6682dad830d680c65b3db83823c3940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a063fd2a69434e3ee2a74a158098b34c8</anchor>
      <arglist>(Gst::AudioRingBufferSpec &amp;spec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unprepare_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a121c5d78bacae85d9702e3d455cee801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>aaf8501a3a0353d2931fcb8a000a4d347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>read_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a620b31fd921e66e7aedc8e8c3ef9f661</anchor>
      <arglist>(const void *data, guint length, Gst::ClockTime &amp;timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>get_delay_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a1534afc59df1412be7bc5d72fbe0b3ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset_vfunc</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a9c5b5ee8ced6b076a65901c22fbd08df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>ab8e108120dcb7fc4abfad4c3db4b9da9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::AudioSrc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1AudioSrc.html</anchorfile>
      <anchor>a4f74635f4f608cd7e2f9b50bf19da05f</anchor>
      <arglist>(GstAudioSrc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::BaseSink</name>
    <filename>classGst_1_1BaseSink.html</filename>
    <base>Gst::Element</base>
    <member kind="function">
      <type></type>
      <name>BaseSink</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a0538e3500c926820f7ce672bb9f1839c</anchor>
      <arglist>(BaseSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BaseSink &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ac0743ea841c95fbe91516cb37b1f307f</anchor>
      <arglist>(BaseSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BaseSink</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a2b0918502db92af79640a216cc611f38</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstBaseSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a3d57005a386c93cc2d2fe034ac5d97a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBaseSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>af9961b8dfb59bc88db895e52ae290d64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBaseSink *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ae4422284b28d6fad3a3e890af118b102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_latency</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a633ba8a8ac536b4c680d65794803e835</anchor>
      <arglist>(bool &amp;live, bool &amp;upstream_live, Gst::ClockTime &amp;min_latency, Gst::ClockTime &amp;max_latency) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_latency</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a2067c475a3523fa0712da077ddac6168</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>do_preroll</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a2c78eee96949b6e0543a3983bfe331d6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::MiniObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>wait_preroll</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a7e3185372c85de840459ea63bd8ed67e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockReturn</type>
      <name>wait_clock</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a1835953e2b9ae0d7fee5ef6e5be0b683</anchor>
      <arglist>(Gst::ClockTime time, Gst::ClockTimeDiff &amp;jitter)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockReturn</type>
      <name>wait_clock</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>abb8e17449341a32d0ea604378650b22d</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>wait</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>af04507a889bb55e1159018a5f4111963</anchor>
      <arglist>(Gst::ClockTime time, Gst::ClockTimeDiff &amp;jitter)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>wait</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a92c4ae99bc14475b2b67e69080d57b9f</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sync</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aab16ff8cbc1478306cde9a5aff9668b6</anchor>
      <arglist>(bool sync)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sync</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a8f0385b20df41e953392f484233ec6e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_lateness</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a8eea6e666aac3e6bd83f0a298ac6be57</anchor>
      <arglist>(gint64 max_lateness)</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_max_lateness</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a50393c64800479241cda9159e60c2950</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_qos_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ad4bcb407e180b095dffed24652665a1b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_qos_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a166732743ad836ce3a2834e9eb67f421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_async_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aea3bcda6856f8fd1d90d8699b4960fcf</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_async_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ae8f775f3b5419746c1af3e8ecc7d8f00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ts_offset</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a5cd788d1d51d099b57c212da34b73f6f</anchor>
      <arglist>(Gst::ClockTimeDiff offset)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTimeDiff</type>
      <name>get_ts_offset</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a32eaa1a818d46c287070b8661ccdccf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_render_delay</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a070fda26048ee2a63038f1806cf0273f</anchor>
      <arglist>(Gst::ClockTime delay)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_render_delay</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a6f5ecf0879050909437e48f2c24460f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blocksize</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a0a89859a6c1ef01d87e8e544cdba131c</anchor>
      <arglist>(guint blocksize)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_blocksize</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a01986bbc19a3d85bf11e8dfe36c68bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_throttle_time</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ad875ac16bcdae6945cfe61e4c2121ef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_throttle_time</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>acdf16e4e9d9a9e3fb0ea5be8a4f0ffe3</anchor>
      <arglist>(guint64 throttle)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Sample &gt;</type>
      <name>get_last_sample</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a9ed72a7a168c6597436484178df20608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_bitrate</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a3aef29dff238a3494b22af9d5e8e3910</anchor>
      <arglist>(guint64 max_bitrate)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_max_bitrate</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a3bfbac08b02591503b1c9195928849e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_last_sample_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>af89d813ed0bb15b1eac400df3d3e69a8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_last_sample_enabled</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a392a603ecd3a2b010d8c0211ea1e3003</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_sink_pad</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a47e58e70d592f5aeb09a2cd510b1417f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_sink_pad</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a8cc2d0b078dc990ef228ddae5d5322f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_async</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a40a9222b3be4e190d8d4780a2caf6e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_async</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a222aaf701f4b350d92b85466c5194963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_max_lateness</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ae3ca242c3f525c54fabaf96d801d709e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_max_lateness</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a8fe3a614245dfb3458b2c0557c433543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_qos</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aff61d570f81210abcc7f7def2920265b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_qos</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>afa35474ac51ac2af0e69aac353ec4c7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sync</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a77214bfbc492ed4bedd2ebe370e1eef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sync</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>af7f1f107b022750c3d27088cabb0bd87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_ts_offset</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aa8f8a46293c7ed1b9d3b7405b3ed7518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_ts_offset</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a513d7911dfd567712174fd4a779abd43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_render_delay</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a1230862563fba76e40574c5178c003b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_render_delay</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ab3903d7df61bd7827176fe1eeb6ca82f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_throttle_time</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ad05b734740f79de7bfb9056afb8f3b89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_throttle_time</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>af1839bbe80a71e759d3badb9cadce2f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_blocksize</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a7bc1df87ae15e7ac594a90ba8f938025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_blocksize</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aeee065f63032625dfa9f874530b4829f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Sample &gt; &gt;</type>
      <name>property_last_sample</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ae4bf88db5485da20aa06218925b39f27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_last_sample</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a712b12d0e970c6b5aed6da65d21f63d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_last_sample</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a9eb793bdff7d1849d0c6b7648854b6ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_max_bitrate</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a9cd21ad0276ecfe9c9a42eb714b1b760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_max_bitrate</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a6594bfc20db039d74e8bce438a3e3a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a63a140275b8f5d35cce75f8e386a60dc</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a247f50dbd1df7a3dfc7e6ef9ed9a64c0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_times_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a920a91703c1222355b6e526203bc2c62</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer, Gst::ClockTime &amp;start, Gst::ClockTime &amp;end) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>start_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a286517350ca4c412d876a28c918d8fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>stop_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a2116f8ce9e77afed24064996b560e9c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unlock_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a3ae3e5b121cf2b46584bc6f0490b2c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>event_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a8f260974784b7a37d76527691c0e77fa</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>wait_event_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ab1f28ef2d88a7c28c0cd019fb0a7c41b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>preroll_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a50eca5151f380b0ef9eba824fc751ddd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>render_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a57ecad6239dc6d5774224648b7ee0593</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_pull_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ad0880f91eb4b88423604118ad25de7dc</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>fixate_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aec0a0e4d0151f4e985b79871584ad7b9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unlock_stop_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a89bfaaaf543713d3d0a5cb6e4c4d2dda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>render_list_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a33fef26ec48c03255fb04f09c16878a5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::BufferList &gt; &amp;buffer_list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>prepare_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ae2642456b87adedcee73e1fc1f047e05</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>prepare_list_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>ad56fe903a67f157d0830c45a02bd3806</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::BufferList &gt; &amp;buffer_list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>base_sink_query_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a5d2a8e479066e36fb0be35d242a9abda</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>propose_allocation_vfunc</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a35ebe215dd4b07ba234abd63817ab0af</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>a6c09c13b749625ec12062d1b0e8beaac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::BaseSink &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1BaseSink.html</anchorfile>
      <anchor>aee0abc6e5f32acc4654dcf7ae1f5bf80</anchor>
      <arglist>(GstBaseSink *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::BaseSrc</name>
    <filename>classGst_1_1BaseSrc.html</filename>
    <base>Gst::Element</base>
    <member kind="function">
      <type></type>
      <name>BaseSrc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ad94711cddba0f37909e22e72e682c7e3</anchor>
      <arglist>(BaseSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BaseSrc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a78ad938d22590c78534be09218f99beb</anchor>
      <arglist>(BaseSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BaseSrc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a7279699b3e8c6aeaae06489e377e5359</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstBaseSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>aa0d1e8459e0a69bbe494ef9d75011864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBaseSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ad172af86a85b456e93fa8088b67ea76c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBaseSrc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a444048c54a58c0714cf434f409140540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FlowReturn</type>
      <name>wait_playing</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a255cecb81ef93314894800537f180700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_live</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ad12fbf5a3351aad7b9dfac50c21c7fe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_live</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>aede8ba7bc51f56899bf6ed74eb845c69</anchor>
      <arglist>(bool live)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a87216c9d1d3b55b27c3c48bc969042dc</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_latency</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ada9997e6ee5cdb5127b75b7884da4103</anchor>
      <arglist>(bool &amp;live, Gst::ClockTime &amp;min_latency, Gst::ClockTime &amp;max_latency) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_blocksize</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ac94b9c0f29fa5fa64dba042bac9c7cae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blocksize</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a770baf5cf3dd1876392b07de9c32e320</anchor>
      <arglist>(guint blocksize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_do_timestamp</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a7cbf4dfd47fcbae692a08909f34e1677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_do_timestamp</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>af1c60e2100af5186bd44ff8c9205c146</anchor>
      <arglist>(bool timestamp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>new_seamless_segment</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ae1dde5ac52fb9a662d0989f1ff25cbb3</anchor>
      <arglist>(gint64 start, gint64 stop, gint64 position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_caps</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a81cf42f77da4e96ee53e0c0924c23e30</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>start_wait</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>abc605b75afd81da088f23ca91e186827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dynamic_size</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a27b1f2cdca66579259259b5e57cf0d2d</anchor>
      <arglist>(bool dynamic_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_async</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a44d4093120caf11a152d639b84ad2b1b</anchor>
      <arglist>(bool async)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_async</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a23f77c069e29ced564e6998cc2365e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_complete</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>aa68cef751221848ebc9db67b4269d94a</anchor>
      <arglist>(Gst::FlowReturn ret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_automatic_eos</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a88ed769a8bc6b8b4752a72f622c208da</anchor>
      <arglist>(bool automatic_eos)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>get_allocator</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a28771d598dbcd649bae52dbca2f3f7cc</anchor>
      <arglist>(Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_src_pad</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a556c9d4b835defb4a085821c7ca48bf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_src_pad</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>adf8b83c4f7ba9706f2136a06e3a459b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gulong &gt;</type>
      <name>property_blocksize</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ae1132b8a64dbcafad48fbe441cf334c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gulong &gt;</type>
      <name>property_blocksize</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ab6c041dbd6a37095f50d4045ae424e3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_do_timestamp</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a7e218122e0d3652f7ffd767eabe8b753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_do_timestamp</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a33af9d0f84775d90aed33f0ba09d922b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_num_buffers</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a38d1191f755b825e07f114916fc0b989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_num_buffers</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a46adcf01edd215486ba7a54039c8a7c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_typefind</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a6df3edc045c4a771209a7f89a7ee6025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_typefind</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a02902f29fb6fd9d7c6edaa8f877cc777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a258d3aaf685172a28285b8270c83758b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a8d82d4ddd1d87cad64812c094d6f8750</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>negotiate_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ace36e5cb3bb2390151b9a47aafce1ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>stop_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a48ab6056c9d03d59a27ec505a61780eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>start_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ae7a88a2b2f6a2041debd130601862368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>get_times_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>af015bbf6da5dddb9801867496fd5055a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer, Gst::ClockTime &amp;start, Gst::ClockTime &amp;end) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_size_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>aa39266e948edc5de8d18d0520b954124</anchor>
      <arglist>(guint64 &amp;size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_seekable_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a21f2bf5679cd5e66c72481ab75a3f17d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unlock_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a54465404212860bb5cd306bef84d7691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>event_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a346d692eec77d32940f95443b1dd3f20</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>create_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>ab7383dc046d4edb61baeb956e55ca06a</anchor>
      <arglist>(guint64 offset, guint size, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>do_seek_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a7be73624a60b7e658bbd24090446ded8</anchor>
      <arglist>(Gst::Segment &amp;segment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>base_src_query_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a4a1bd119b19602788cc599e102fe652f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>fixate_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a454dbf90828c21850f104a059654da4f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>unlock_stop_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>aca287d29147a9f84bbc68f5048a35a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepare_seek_segment_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a5ba0fdbf2013a29fa9bf9a11dfb2557f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;seek, Gst::Segment &amp;segment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>decide_allocation_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a2544f88a052e2838f647f3ad97d06249</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>alloc_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a290c1f0d8b646887ee12c3a34cc1ca75</anchor>
      <arglist>(guint64 offset, guint size, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::FlowReturn</type>
      <name>fill_vfunc</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a76f0f38d5b7dcd8cbfb053a8bfb9e2e7</anchor>
      <arglist>(guint64 offset, guint size, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>adc856c36e6ee3f19e922b8894c2cd2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::BaseSrc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1BaseSrc.html</anchorfile>
      <anchor>a5e52b4dc2b3893f15971869e0338455e</anchor>
      <arglist>(GstBaseSrc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::BaseTransform</name>
    <filename>classGst_1_1BaseTransform.html</filename>
    <base>Gst::Element</base>
    <member kind="function">
      <type></type>
      <name>BaseTransform</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a403884b860d7aeb4c089294b607b0f5c</anchor>
      <arglist>(BaseTransform &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BaseTransform &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a09a65bd2015a27cdfe7924613482215b</anchor>
      <arglist>(BaseTransform &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BaseTransform</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ae606cfce9469c5b9f01e1b7bd69a9d5e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstBaseTransform *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>abf1e264c0b2d081f39b77e960972371d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBaseTransform *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a2f31d9e6f50f9682d961681a59247c50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBaseTransform *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a7392449fc1cba1f07d5ba45349b4bb50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_passthrough</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a6e895593189eefd8381e226b044a997f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_passthrough</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a2cb3eba046537251c9a03ef84f326a31</anchor>
      <arglist>(bool passthrough)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_in_place</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a9f226e199d5ec77efca238d18a8fe50d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_in_place</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a3d346d07b9cb71826240845acbd73bf4</anchor>
      <arglist>(bool in_place)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_qos_enabled</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac101528b7a84d79db76f8272903cc558</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_qos_enabled</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a90a1f71eddef108a17bc15397b10256a</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_qos</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac30bdf6f5238219d3012cf7497baa7fd</anchor>
      <arglist>(double proportion, Gst::ClockTimeDiff diff, Gst::ClockTime timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gap_aware</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a2910596ef7abb4920a79fe0e4d9b8c37</anchor>
      <arglist>(bool gap_aware)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reconfigure_sink</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ae7d1cea4c1aeee6ddc1bad7c674c667d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reconfigure_src</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a7e971309557cdf85b53b9cf1339ece35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_prefer_passthrough</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a38fdaf6efa6db3328b3e05a81de11d86</anchor>
      <arglist>(bool prefer_passthrough)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_src_caps</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a6f9553c490879caa1e5fec909e3880ab</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;updated_caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>get_allocator</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>aa8f6be028aad2658ed9dc0b80cf9d8c3</anchor>
      <arglist>(Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_sink_pad</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a6780d6ded3bf0b54da665108557fa484</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_sink_pad</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac9f2c7f9ddbe5fcc7285e09441f49838</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_src_pad</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac5a3f1f49a1395618854da4cc37d6e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_src_pad</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a0c9121f24598611f161793dade52abba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_qos</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac301f3a02d5f52965016972d698530d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_qos</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ac12ac363aa2ab961853770b317bf02fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>transform_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ad33715b43ea61f00edfdcac689b55c8e</anchor>
      <arglist>(PadDirection direction, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;filter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>fixate_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a3ec3ff32eab50865a3eef88800b76a72</anchor>
      <arglist>(PadDirection direction, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;othercaps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_unit_size_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>aa22fbbe12d14b0bf92acbffbaa547cf4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, gsize &amp;size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a992ebfe824cf7e787c8898560a15abdd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;incaps, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;outcaps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>transform_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>acadc867ef1e06c339a608a9b24caf6a7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;inbuf, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;outbuf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>transform_ip_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a8323cea1bedce09b8c015c00470086ab</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FlowReturn</type>
      <name>prepare_output_buffer_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a0b5fe1f014a0cc4adbe57c248aef7083</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;input, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>src_event_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a03cf2e7d6fb5a2253d1698f40900d69f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sink_event_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a1c0e37ee50db48e37930a5495cd3ea61</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>before_transform_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ae0596f4ea16eb8883c005eb64bf73dce</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>accept_caps_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a8cd8847587014829631f93bfd0412da2</anchor>
      <arglist>(PadDirection direction, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>start_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a3cc6cc9c73c06c7120ac8e749eb1a8b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>stop_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a704947450f607a44d74056e629637b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>decide_allocation_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a57dfe3fb040141bcc0aa49059a35df2a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>filter_meta_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a8da46b0ea1a1121113c0012a14aba3ca</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query, GType api, const Gst::Structure &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>propose_allocation_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>ab6d0348a491cb6c2c334b506c8f72878</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;decide_query, const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::FlowReturn</type>
      <name>submit_input_buffer_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a8f1cce9e82269a6cd9ff2cb6c16444fd</anchor>
      <arglist>(bool is_discont, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;input)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::FlowReturn</type>
      <name>generate_output_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a5281a163d037117f6b5964982fd74f5a</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>copy_metadata_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>aa1714e809da562be4a412f4a6f58d3ce</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;input, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;outbuf)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>base_transform_query_vfunc</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>aa961928b140d75e1e7122f696197bcad</anchor>
      <arglist>(Gst::PadDirection direction, const Glib::RefPtr&lt; Gst::Query &gt; &amp;query)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a008efc0bdf571c93ea96af5a51c13ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>SINK_NAME</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a84514c3c792c054b0398e9120c963c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>SRC_NAME</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a6a2c38bb7069fcfa1d01e4646cb5045e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr Gst::FlowReturn</type>
      <name>FLOW_DROPPED</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>a0509eef9bc706254a1c0b7aaf3c1ad85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::BaseTransform &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1BaseTransform.html</anchorfile>
      <anchor>aac5c4f37d94d3db0956a9349e4066b67</anchor>
      <arglist>(GstBaseTransform *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Bin</name>
    <filename>classGst_1_1Bin.html</filename>
    <base>Gst::Element</base>
    <base>Gst::ChildProxy</base>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a5d2637adf6414463c1484b9de52804df</anchor>
      <arglist>(Bin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Bin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a982d870ce44339ee96f28e59bf0e7592</anchor>
      <arglist>(Bin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Bin</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>addca93ae1c2f87e58af27749ccf34fd6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstBin *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ac7f153dcb8876aeef9c65647d576f60b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBin *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a0725b2d5bf4e617ffc497f6940225591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBin *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ab53a89561c693b91fef6d9ae35e215f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bin &gt;</type>
      <name>add</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a70138b916b8cfbbcef9c2b6c5be03066</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bin &gt;</type>
      <name>remove</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a0c7aa2684baf7a7208431b91c307e990</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>get_element</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a51d81c3e6dde4bb1275e6723def18733</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Element &gt;</type>
      <name>get_element</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a6c939b008769b0c4652d7ad3eba2039b</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>get_element_recurse_up</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ac122f8fe444d3abb19f83085ae4c1b95</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Element &gt;</type>
      <name>get_element_recurse_up</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a490219f1c7432197645c0e3948dea52c</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>get_element</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a66f96d2620c94f8c4293d6399ad564ed</anchor>
      <arglist>(GType interface)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Element &gt;</type>
      <name>get_element</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a0d2099a49779831dd6d87f3765f9a54b</anchor>
      <arglist>(GType interface) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::GhostPad &gt;</type>
      <name>add_ghost_pad</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a906e835b277f5e81c0580350f00872c0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element, const Glib::ustring &amp;pad_name, const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>find_unlinked_pad</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a59a18d135f640d8fddf1267876d382bb</anchor>
      <arglist>(PadDirection dir)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>find_unlinked_pad</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a53535c87b3ec786a2bb050719eb61d36</anchor>
      <arglist>(PadDirection dir) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_elements</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ae92ec0fa64bc37257b92803e14238e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_elements</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a5e0d97e9a4a1d9ddfaec32eb65ba25fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_recurse</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>adab9ff714eb70a582293b2c41bd0fe2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_recurse</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a401885903446dd2eab641fddd9a62170</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_sorted</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a2fb47020198d6219cbef634d287d7031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_sorted</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>abd76b7aef56426d9de0db2ec0f33bc1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_sources</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>af19b363959b9de80590eb6d36c3b76f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_sources</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ab00a17a9fb1b90dde574ceca2fe277fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_sinks</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a705cb5a0ce87a194b7275295781f62bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_sinks</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a55ff0c7261809a4f7666ed29a2839aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Element &gt;</type>
      <name>iterate_by_interface</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a0718a15c4e774ed9e3a25ddcdb2f2d6f</anchor>
      <arglist>(GType iface)</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Element &gt;</type>
      <name>iterate_by_interface</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a616261b664ee2e3c44f8f9a38049a059</anchor>
      <arglist>(GType iface) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync_children_states</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>af5a4bef8e1c6c24c26d0d242ab9b54c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recalculate_latency</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a9eb81e20233675229028ff7ec52db7d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::Element &gt; &gt;</type>
      <name>get_children</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ad5fc4d217bc6c0fd4cb849aadbee8305</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_children_cookie</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>abb00acba48f0a0744669b27d76e375d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_num_children</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ab169fcb016d4e6a44dc03282218783a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bus &gt;</type>
      <name>get_child_bus</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>aae73ce7304a4925ffa7fd01192c7c170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Bus &gt;</type>
      <name>get_child_bus</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a9172e25c73740bdb18acb9a6a500aeb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::Message &gt; &gt;</type>
      <name>get_messages</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>acda86072cba6c8a299cd7300715db5e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_polling</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ac17f3321e813b376ca6b77629ced0e1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clock_dirty</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a7f42485ba51b88753a45ca6dbdf328dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_provided_clock</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a0be1b5ad2f4eb8ba52aed440f5e4c9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_provided_clock</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a2c15508b8f951fe1845fae2b59a2917a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>get_clock_provider</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a06a085e23ca9027fb3885b5ad841301a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Element &gt;</type>
      <name>get_clock_provider</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>abf2029a07b32475ac3ca9016c9c833aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_async_handling</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ac6d2da86acc2946fab9b1409f7a26a21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_async_handling</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ad80627d377fe2b3f72aa1c44cd959b8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_message_forward</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a05b14c9748d57dc4b9c7273551ab3a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_message_forward</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ac9f3d4fca516a6b9d840f0f4dee84c3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Element &gt; &amp;&gt;</type>
      <name>signal_element_added</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ab360fcff57e84a1e3815babd517097de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Element &gt; &amp;&gt;</type>
      <name>signal_element_removed</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>aa9d8e7ac8b3a269272f876f035021677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_do_latency</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a4ab6514672ee847bf9614d2c3717ec72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>add_element_vfunc</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>abc85bc4ba122aa5bc4458a1fa6699889</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remove_element_vfunc</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a6ee4aab3975729d363452018bf4a8bb7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handle_message_vfunc</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a14697e82569adc34f316dfe7c8d8b0c3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Message &gt; &amp;message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a7d69d40f8b871602ebacbb3cfab38b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Bin &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a184ee52813a2d34cb252c9c8ed853785</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Bin &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a9b71a16951807a36684e52cbbb354c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a9942767c14789bb411991db70686464f</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a85db6522eaac980a3a2783482b05ed1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_element_added</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>ae743e2b41d42029e0a29c5f54f69bd99</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_element_removed</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>afe156854b26e263e4f43d117b9fe46f3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;element)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_do_latency</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a5c0a1ff82d8aff9e151f4201ca9b3fab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bin &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Bin.html</anchorfile>
      <anchor>a8b9470b686d2085c5c7d4ae316422adf</anchor>
      <arglist>(GstBin *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Buffer</name>
    <filename>classGst_1_1Buffer.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>addd14cf47add19954519c466d12917ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a92c55af8e3586a719ac4fa7c4da4222c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a10e44e2e321065c59f7c71d7207014ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ad3aeb97e6ffa49c3590f5e8a1038eded</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a385ee61d1895d64706e7d738e0655687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ac8891ba9a1b33523da504480f13fb272</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Buffer</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a4702b4ecc9eb14976a68e01750ea0010</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Buffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>adb57c015099f74e9a35cb1f984b0569d</anchor>
      <arglist>(const Buffer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>adf5619286e52dfbfdda50a667b174420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>copy_deep</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aa6c48df4951f3e69125125eca831ffa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>copy_region</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a6423c4c589568bf262197322ca4e5481</anchor>
      <arglist>(Gst::BufferCopyFlags flags, gsize offset, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a48d6843caf65c5004c7258a9cd1fe315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>get_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a8df331ccc1050540db9535f07ef0be04</anchor>
      <arglist>(guint idx) const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_size</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a0c26f9280d838d66d5468586c7a95132</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_sizes</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a8dc33acd59707bead44db06ef047aeef</anchor>
      <arglist>(gsize &amp;offset, gsize &amp;max_size) const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_sizes_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a98343f6ab7c3f206e0623d22b76abcc3</anchor>
      <arglist>(guint idx, gint length, gsize &amp;offset, gsize &amp;max_size) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resize_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>afd27c79a11673bf839545e30a9638b97</anchor>
      <arglist>(guint idx, gint length, gssize offset, gssize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a83acf09aa6935e9256ce4bfe925f874e</anchor>
      <arglist>(gssize offset, gssize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a5f104848a3768dc7691365f27348d7df</anchor>
      <arglist>(gssize size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>peek_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ab99330eead323d11ab0bfe25159c5516</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>n_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aa6d6c4d67bc3fae4f75fc3f57bffe031</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a36e101592c09f6f85610efe35ae135dc</anchor>
      <arglist>(gint idx, Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>get_all_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a93cfbf0ddb5387c7520953fabb93ff76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>fill</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ac8009be726571e8a838a0ce84aa9169a</anchor>
      <arglist>(gsize offset, gconstpointer src, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace_memory_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>af34bb91d47e3b9b075baa50a20b4b09b</anchor>
      <arglist>(guint idx, gint length, Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>get_memory_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a515300292827fb0fd5bef6b537e3476b</anchor>
      <arglist>(guint idx, gint length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_memory_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>af20b730cdd88e9579251d72206c39060</anchor>
      <arglist>(guint idx, gint length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>find_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a8df906a0a0be7653dacc266d0f693ace</anchor>
      <arglist>(gsize offset, gsize size, guint &amp;idx, guint &amp;length, gsize &amp;skip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>adde8f2fb23be8f8f7b0a484b6ffe7e06</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a0fe56c931eb9face4c5e73d8caec4861</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a3a7e7b1569bd579acdbde51210daeb10</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a9781371ac007d3acca59c6af1a456ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>memset</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>adbf73d6d037ac8c26bec41f7c7be5f2a</anchor>
      <arglist>(gsize offset, guint8 val, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a7673024e0eb2c4894c25b6d42e38e90b</anchor>
      <arglist>(guint idx, Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace_all_memory</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a554104f8c3f6b035c535acc4e0dd375e</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Memory &gt; &amp;&amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>extract</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aa9fb45d143b3bed09fa0093834eb7e51</anchor>
      <arglist>(gsize offset, gpointer dest, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extract_dup</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aeb2846695bedec016fb699bad175eb5c</anchor>
      <arglist>(gsize offset, gsize size, gpointer &amp;dest, gsize &amp;dest_size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>memcmp</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a53f66bc8d81a55f921ef98790c6781bc</anchor>
      <arglist>(gsize offset, gconstpointer mem, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_all_memory_writable</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a8c8453c4c4e6f373005d87755f07cebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_memory_range_writable</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aaad0fb14369c767d759b1d587c66e42d</anchor>
      <arglist>(guint idx, gint length) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a771a79ce6fe578a7f09954efc49952c2</anchor>
      <arglist>(Gst::MapInfo &amp;info, Gst::MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map_range</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ab7ae697b909f67a4826289a5472770cd</anchor>
      <arglist>(guint idx, gint length, Gst::MapInfo &amp;info, MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a69344d4bf167824818e71b235eb6dec3</anchor>
      <arglist>(Gst::MapInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>append_region</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a42ad12ec9c0f460f4f49728dce966820</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&amp;buf, gssize offset, gssize size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>append</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a6eaed6c589650e08e5fe8dafc255eae9</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&amp;buf)</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_pts</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a4ca24c10c12f1a2641b6940f9c5c14f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pts</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a3bf4cefc82104ffe655ce4df00021f72</anchor>
      <arglist>(const ClockTime &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_dts</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a2f9d6ea9f3a75113c8ed830ffd3b2973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dts</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ae728c9b64ba55f991647c8a08e7db7fc</anchor>
      <arglist>(const ClockTime &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_duration</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a5cfb0fcb59c9b5547e36b84327e72963</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_duration</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>aac5c1274cfa257c776e0cb8a08895906</anchor>
      <arglist>(const ClockTime &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_offset</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a11d49624ccefe420bb964e0bd2c18465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_offset_end</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a4fbe9b7db2a997c6e7b4c94a76a47da8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Buffer &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a5b2694b0e0dfef39207ab92c72db5b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy_into</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a5569e221255dd90ebf695cedaac42c3b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;destination_buffer, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;source_buffer, BufferCopyFlags flags, gsize offset, gsize size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a5f12da926624f428498c0eeb8635dc70</anchor>
      <arglist>(guint size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static guint64</type>
      <name>offset_none</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>a04125d1215934f1533086ec72796d124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ac25859a92bf48bed96ddbbe486917301</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Buffer.html</anchorfile>
      <anchor>ad722f6e03ade143107241bfbe14e276a</anchor>
      <arglist>(GstBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::BufferList</name>
    <filename>classGst_1_1BufferList.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;, guint &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>aefe4fd86d9aa2562268ea32310799485</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a790d6662273ce7fbdcd0611887f86cb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a7b98764cb3ca09d4dd20e006d32c72ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBufferList *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a8e4299a32e61537d8ff4fd8cf0ae1a32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBufferList *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>adeab4bfcefe3d4a62f597392da26b580</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBufferList *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>ad8074c1da1d9321e35d2fcda4cdaf81a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferList</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a96c430a99e19f15098b08290260cd2d1</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferList</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>ae96b5bcfb0ba785a853bd0f5aa3a881d</anchor>
      <arglist>(const BufferList &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BufferList &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>abe8c651a8202fc78fcf6a5c278fabbd6</anchor>
      <arglist>(const BufferList &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a6dcf2e309c606d7b56a9a0b799b7edf4</anchor>
      <arglist>(guint idx, guint length)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>remove</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>aed1ee710866157470db8fce986965bdf</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>length</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>aa3ff39544f2f01c16e3015b0259d352e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a3de9bea1a5deccce2b231e475f9280aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_deep</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a589fa3576b417378f18486296bcdd30d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a288e4149e465c2520b3a5e9ebaaa9bad</anchor>
      <arglist>(gint idx, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>acc0ecbc22079e9c77f43a0af976c6cb6</anchor>
      <arglist>(gint idx, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>afef52b9f1b9ea55f47321062eb9700d5</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>get</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>a8faaf1cda4ec3476cc9a684339da6941</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Buffer &gt;</type>
      <name>get</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>abc9e61d9f183e0dd88f322657119429d</anchor>
      <arglist>(guint idx) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; BufferList &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>ae93fd964a8e422a3b40bc30363ffe4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>acfe5391647a0ce21d8de1ca0c9f7a90d</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::BufferList &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1BufferList.html</anchorfile>
      <anchor>ac255a6ae0f71e470cddcebe5d4d31081</anchor>
      <arglist>(GstBufferList *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Bus</name>
    <filename>classGst_1_1Bus.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Bus &gt; &amp;, const Glib::RefPtr&lt; Gst::Message &gt; &amp;&gt;</type>
      <name>SlotMessage</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a5561a29ccae4d5fc8d3e25bbd5213612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; BusSyncReply, const Glib::RefPtr&lt; Gst::Bus &gt; &amp;, const Glib::RefPtr&lt; Gst::Message &gt; &amp;&gt;</type>
      <name>SlotMessageSync</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a554b1271c366f020a741e9dc2517d60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bus</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>aecf47c2fb1425bc64cc2636acb5a8136</anchor>
      <arglist>(Bus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Bus &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ab5401c2dd342c2ebaf7f50d68370812b</anchor>
      <arglist>(Bus &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Bus</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a34f0afaa0bfe50530944235a16f2f80d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstBus *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a03b3feabd44ba84a953fa0340e778816</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstBus *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a73f02cb09100dbe4fbb4515eae10270b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstBus *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7528490c0d5f42300a4b0b588df3bf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>post</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a3b662a895e575e69402dfe0d8ee639a0</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Message &gt; &amp;&amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>have_pending</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ad4b4e6089b2ad7e6c6aa0302352977cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>peek</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7e1c9d9d8e656e646bfa7c75922313fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Message &gt;</type>
      <name>peek</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a4e925019bef3138ff00657392128a49d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>pop</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7ad0a942d63ce75a4e14fbaf45e68f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>pop</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ada0edd332783b2b5a1de73c60b9c621e</anchor>
      <arglist>(MessageType message_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>pop</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>afee2efa82585c1bf8477705ac9ed3daa</anchor>
      <arglist>(ClockTime timeout)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>pop</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ad8a5b535f84f41376fef170f085d2c2a</anchor>
      <arglist>(ClockTime timeout, MessageType message_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flushing</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a021e5534f0ff4c6984a3689f578ffaaa</anchor>
      <arglist>(bool flushing=true)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>add_watch</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a200decd7c59810def0433ea0483ee8ad</anchor>
      <arglist>(const SlotMessage &amp;slot, int priority=Glib::PRIORITY_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_watch</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ad4a0a824253b962fec6fc092d9fc8f12</anchor>
      <arglist>(guint watch_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sync_handler</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a03a30f0239ae86e3eff8a1a8cbcd8049</anchor>
      <arglist>(const SlotMessageSync &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable_sync_message_emission</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7165c9f28e900d5562cfc30dd5a22af5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_sync_message_emission</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>aa623c9d21b773bca8f256a349da82601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_signal_watch</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ab9241830bd40558cec8feab18da5c9ba</anchor>
      <arglist>(int priority=Glib::PRIORITY_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_signal_watch</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a40fa3f6509f69f5225c13f7cc9d7a065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>poll</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a05f8bae6fd360d4ff975380f9bdf4760</anchor>
      <arglist>(MessageType message_type, ClockTime timeout)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Message &gt; &amp;&gt;</type>
      <name>signal_message</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>acd9359c7b44a06050789bf2401dcd2cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Message &gt; &amp;&gt;</type>
      <name>signal_sync_message</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a08ea23aea22e834ea347bf6bb7bb7d9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>ab7235439f48ece2fd87f9bddee4c38a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Bus &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a5c1bf1d5a92ffe26769adebabe36879f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Bus</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a35f324e366ff7354ef313c8332e7813b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a6284c3e6ac2ec3baf0a3b4ba26d03a8f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Message &gt; &amp;message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sync_message</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7ca62cf437c977616ac38433eef28ad7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Message &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bus &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Bus.html</anchorfile>
      <anchor>a7e894d91c45c1d858aa85ae15506ce67</anchor>
      <arglist>(GstBus *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Caps</name>
    <filename>classGst_1_1Caps.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a89126e3d5923886e3869ee01bd7c8ee9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>af318bef46bc174a3e67de46a43f6b10f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstCaps *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>aa0ada44a53455d7a242c4002ea67fd76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstCaps *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ae9f8a66e235e58adfd40cb628a56fa98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstCaps *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a0fb27b4076d417d58305e4a6e7dd2e76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Caps</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a645f95d3664a506f0441f6781789ecc4</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Caps</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a1f683236f18082e7e7c0eec250afbbf4</anchor>
      <arglist>(const Caps &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Caps &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ace3eb696db1cd3af80f4ed3a70441b8f</anchor>
      <arglist>(const Caps &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>copy_nth</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a9d027c428da13b89299e4ad39e3ce6a5</anchor>
      <arglist>(guint nth) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a64f105740ae07de26162599bc3c4bed3</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; &amp;&amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>merge</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a3b437831262663c62eebd32f935f54ee</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; &amp;&amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>aea966b4bed66c828831cb89ff8ba9806</anchor>
      <arglist>(const Structure &amp;structure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ac79b6480a564bb47be530674ac6deea2</anchor>
      <arglist>(Gst::Structure &amp;&amp;structure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a3d4311f0a20d2767a7245e6987a94b29</anchor>
      <arglist>(const Structure &amp;structure, const CapsFeatures &amp;features)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>merge_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a5216b9fffdf6998d90e03dbcd3e72bca</anchor>
      <arglist>(const Structure &amp;structure)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>merge_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a0519c02c67a9a46a448eca226c1948bb</anchor>
      <arglist>(const Structure &amp;structure, const CapsFeatures &amp;features)</arglist>
    </member>
    <member kind="function">
      <type>const Structure</type>
      <name>get_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ae89e66574ccc19b8b10a2d5800aaba09</anchor>
      <arglist>(guint idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a11151061dc7486756d86fdaf007df54c</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>size</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a78a63cfbe67118a9e807145aea4c9256</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>steal_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>abe54761a7de55eae9ce99c8b47d17cf8</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_simple</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>aa24912f1f62022eebae78515414eace8</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_simple</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a5e23087fd40a5d1b0476a393856f0620</anchor>
      <arglist>(const Glib::ustring &amp;name, const DataType &amp;data, DataTypes ...further_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_simple</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a58c2a4942440e451a05ae6b45f1e6d03</anchor>
      <arglist>(const Glib::ustring &amp;name, const char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ab426d5057620f718c20d2958bc4d05cd</anchor>
      <arglist>(const Glib::ustring &amp;field, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>abd379d093548917ad7a97ba9bde4e73e</anchor>
      <arglist>(const Glib::ustring &amp;name, const DataType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_any</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>af309fdbb49097b8afee18d265d658166</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ade41d4c107c828e7efaddc60ce631f11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_fixed</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a9bf4d0ddd5e4344e8f5b7a04f889c87a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a022b8955965847281777d8088718a42c</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;other_caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals_fixed</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ad3a1d93e77ad2793537e5bf622073db0</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;other_caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_always_compatible</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a359d3d4ccc790c2527c4e8c8e94d737c</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;other_caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subset</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ad744271c325aef287cbe6821f8bcaf7e</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;superset_caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_intersect</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>affb79e5ad29f25634f7849e18580016a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps2) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>fixate</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a79761cebe0696bd8f66bb0958a392374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_strictly_equal</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ae0fdda8d4414c4299d4f902ce45fb049</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps2) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ad0d51d4d6bc77b2abe317a513b6c5169</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subset_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a84076c007cf1d3887cdca1a7f77b9864</anchor>
      <arglist>(const Gst::Structure &amp;structure) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subset_structure</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a4626d64de8ca0be5f2b738e68accf00e</anchor>
      <arglist>(const Gst::Structure &amp;structure, const Gst::CapsFeatures &amp;features) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_intersect</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a5bdf0a6a8a2d689e2840a737907ccf9a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;other_caps) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_intersect</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a0c808cada03e6eb8fca4b00885d6f27b</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;other_caps, CapsIntersectMode p2) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_normal</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a818d2c12dd1113753c9950740af646b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>simplify</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>aaad45961462818a19505354b838e7e17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ae271e651efe9053342d58004e35bc4e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_difference</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ac207c2a71781d889c6945c56616f09f1</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;subtrahend_caps) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a0b0edbf8fac1c64636fb553d2fd4d20e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>truncate</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a6efe30680548a5c88f8b494e20123e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CapsFeatures</type>
      <name>get_features</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a144132162cda297320a62a88e020dbb8</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_features</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a6aa116150386b11bd0549477135c31fb</anchor>
      <arglist>(guint index, const CapsFeatures &amp;features)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Caps &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a940bb302f8716745f642c6e9c900c3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>create_simple</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a9a728b2433e4910b8c83b4cb793e7222</anchor>
      <arglist>(const Glib::ustring &amp;media_type, DataTypes... further_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a1d8119d6db14ae56796c1700a1a5ec08</anchor>
      <arglist>(const Structure &amp;first_struct)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ab776bb666e1dab00a1dcd7c85f8e409e</anchor>
      <arglist>(const Glib::ustring &amp;string)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>create_any</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>ab2c8fe72e69b6d529e7a13918d36525f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a7a7ee7502e5adbc5540ceee2c8384eb9</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Caps.html</anchorfile>
      <anchor>a7acb22f978e8532fec76ff30780b3ab4</anchor>
      <arglist>(GstCaps *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::CapsFeatures</name>
    <filename>classGst_1_1CapsFeatures.html</filename>
    <member kind="function">
      <type></type>
      <name>CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>aae67361c2cc04f24ac94fac1c5c85080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a6ad7418a328ea5646c26c764631c428d</anchor>
      <arglist>(GstCapsFeatures *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a6740fa6b46da20bf6dc27d272a27c152</anchor>
      <arglist>(const CapsFeatures &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>CapsFeatures &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>aa6fa6b8b753864b243b9f90e5ec1527a</anchor>
      <arglist>(const CapsFeatures &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a56ca7959b8a839bb28eda6a0d53f276e</anchor>
      <arglist>(CapsFeatures &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CapsFeatures &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a602a32b0ae0b95040136ed8ba6607b65</anchor>
      <arglist>(CapsFeatures &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a661067c32a730ef4e644ce6cc740f163</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a31ae9bf39183c960216b4c291874d12e</anchor>
      <arglist>(CapsFeatures &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GstCapsFeatures *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>ab2e903791b51c50d3a0caea9f4af2db6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstCapsFeatures *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a24b3590706177c2bd994d3f68762f0d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstCapsFeatures *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a7f277422353b900b603907cfb612a2f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CapsFeatures</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>aa6e2419d04b1b0730260d6d93ca876f8</anchor>
      <arglist>(std::initializer_list&lt; Glib::ustring &gt; features)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a9900cf7624f322c9163f882fc0bbf6ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_parent_refcount</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a1fc7e7b468da85c7de138a71189e397e</anchor>
      <arglist>(gint *refcount)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>aacff0ca5180c15598a905bf13a2146ed</anchor>
      <arglist>(const Gst::CapsFeatures &amp;features2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_any</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a774430febfae2b4a07e9d36455505c7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a3ce18d01efac8ebf54960c78ed8c833a</anchor>
      <arglist>(const Glib::ustring &amp;feature) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a779f494584186739e4e00d24291c2542</anchor>
      <arglist>(GQuark feature) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_size</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>acbb946f6f211968f99b141ac153875b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_nth</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a96dc4e6b44948dbeeb7a1a1ba2f2d713</anchor>
      <arglist>(guint i) const</arglist>
    </member>
    <member kind="function">
      <type>GQuark</type>
      <name>get_nth_id</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a96f9422dd6af4ea8bf58647c606e1cfd</anchor>
      <arglist>(guint i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>af9e40d4381723344a305802c7ac30881</anchor>
      <arglist>(const Glib::ustring &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a44e9fa6b8b5fa798e10a95b506e0e8e2</anchor>
      <arglist>(GQuark feature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a396d1464bf55432a9a2d660d88a75b46</anchor>
      <arglist>(const Glib::ustring &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a3a6c3029a5f70bd2e868520c4421e5c7</anchor>
      <arglist>(GQuark feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a45e467bba148bac53d16f5b9aa296ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Gst::CapsFeatures</type>
      <name>create_any</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a24ca9a014116f217f93f9db774641536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Gst::CapsFeatures</type>
      <name>create_from_string</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>af4d1a4b2f43bb91b534d66f4d71bbde0</anchor>
      <arglist>(const Glib::ustring &amp;features)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>memory_system_memory</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a8f60baf0ff90d97ed8b42b9e18f894f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstCapsFeatures *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>ac7d9cb2d150d080ba56eb555ba9ced7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a204c29e54dc95290cf03f721b1131db4</anchor>
      <arglist>(CapsFeatures &amp;lhs, CapsFeatures &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gst::CapsFeatures</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1CapsFeatures.html</anchorfile>
      <anchor>a43a9da8cd05551cf5d1b25aaa9c246c7</anchor>
      <arglist>(GstCapsFeatures *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Check</name>
    <filename>classGst_1_1Check.html</filename>
    <member kind="function" static="yes">
      <type>static _Check &amp;</type>
      <name>Instance</name>
      <anchorfile>classGst_1_1Check.html</anchorfile>
      <anchor>a77acc00c4510abb72df5e1b6f984087f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ChildProxy</name>
    <filename>classGst_1_1ChildProxy.html</filename>
    <member kind="function">
      <type></type>
      <name>ChildProxy</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a8a2e995b073666e872f00a3799f6a224</anchor>
      <arglist>(ChildProxy &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ChildProxy &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ae5c18ad142a0f81bdc21391fe267c520</anchor>
      <arglist>(ChildProxy &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChildProxy</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a7e2c546953b058d045827d468e34f7d4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstChildProxy *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ac91448fdaffb51d494008331ada97cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstChildProxy *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>aaf2bdb333a5ba0a7b1c52a9db91ad89d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_children_count</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a1207d639715b340c04194b5613d13d2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Object &gt;</type>
      <name>get_child</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a8501618d9166fe3b9fbaa43a9d26f4da</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Object &gt;</type>
      <name>get_child</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a5ca8238a9a03c1693883a46fae4e2ce8</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_child</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a818483d260de931791036bfde125a044</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::Object &gt;</type>
      <name>get_child</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a4cc2484f0ea457031a9243ed4bd2af77</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a54333f19c570bc97a9ecc6997ea44d2b</anchor>
      <arglist>(const Glib::ustring &amp;name, Glib::RefPtr&lt; Glib::Object &gt; &amp;target, GParamSpec *&amp;pspec)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ChildProxy &gt;</type>
      <name>get_proxy_property</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>addfd14f633d4263139b513729b26d526</anchor>
      <arglist>(const Glib::ustring &amp;name, Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::ChildProxy &gt;</type>
      <name>get_proxy_property</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a003dd3a519fbf3d07f8afceb70504cdf</anchor>
      <arglist>(const Glib::ustring &amp;name, Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ChildProxy &gt;</type>
      <name>set_proxy_property</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a18e0a3e9f5588ebf8e25f7be43b1b7dc</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>child_added</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a292493b3257043a8e1f589693cac0dd1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;child, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>child_removed</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a4af5a4c297e6d47e4908ebecfb9ab935</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;child, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Object &gt; &amp;, const Glib::ustring &amp;&gt;</type>
      <name>signal_child_added</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ab71bd53cfc20b3a1e3d97c7d89b3357a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Object &gt; &amp;, const Glib::ustring &amp;&gt;</type>
      <name>signal_child_removed</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ace2730e4335268b73b2e3fe2ab97b57f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_child_by_name_vfunc</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a4d43f9b96344e879c4ac933010741075</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_child_by_index_vfunc</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a090e13968c00a0aab925adf0f15f3e1f</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual guint</type>
      <name>get_children_count_vfunc</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ad174a5179e6fc5e3743394dfb967fb9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>af4ced51af3eeb30abd76cbf341525802</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>afd7ac971eae78d98967f2ac4a9ccc646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ChildProxy</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ac6d5c4b28cbdc5615bd60e55a979f50a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_added</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ad5a5c1cb607885467851e1f4d793339e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;object, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_removed</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>ae47ff1c0c1360a8c772fd99d4ac4e63f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;object, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ChildProxy &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1ChildProxy.html</anchorfile>
      <anchor>a313ead48084985b4da700e10f8db2509</anchor>
      <arglist>(GstChildProxy *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Clock</name>
    <filename>classGst_1_1Clock.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>Clock</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a1b9f5dc210f002c6fb4a62b13cfcb0b8</anchor>
      <arglist>(Clock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a0149011f8e53ffdf3df0a6d0f2dc479c</anchor>
      <arglist>(Clock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clock</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ac9e465fc7ec0a9406fb8d9017ddbd67d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aa0459a0384c1e5432b82764c7810f05d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a2563d4c0429a9ed65e3712af76730f26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ae7273dacc028b733d43ebc92b4f2e6bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_observation</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aa76795d0374dc653b3b31d58652124be</anchor>
      <arglist>(Gst::ClockTime slave_time, Gst::ClockTime master_time, gdouble &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_observation</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ade716899bdeb33ee65b644f28d7b7c1e</anchor>
      <arglist>(Gst::ClockTime slave_time, Gst::ClockTime master_time, gdouble &amp;result, Gst::ClockTime &amp;internal, Gst::ClockTime &amp;external, Gst::ClockTime &amp;rate_num, Gst::ClockTime &amp;rate_denom)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_master</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ab85ebe6e289302d83738ccd55bbfe4b6</anchor>
      <arglist>(const Clock &amp;master_clock)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_master</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a305be78c4fdd5050463eb636feeb4c4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_master</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aabf6269b221411dd1be4d3a4a832ec90</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>set_resolution</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a2fb3ee60a15a29546a9ed805b15944bb</anchor>
      <arglist>(Gst::ClockTime resolution)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_resolution</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a35746a3b6a929aa7b62b1c4986a23a40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_time</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>af263ed436ab5f105f1e6cc71243ed65e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ClockID &gt;</type>
      <name>create_single_shot_id</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ae5d5e8edfe6254d46c9ae6a7063fa3cd</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ClockID &gt;</type>
      <name>create_periodic_id</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ad82c3164cea026acbc4b7bc797502ad9</anchor>
      <arglist>(Gst::ClockTime start_time, Gst::ClockTime intervals)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>single_shot_id_reinit</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a8e62295c4f51fd262caba789c4638cb3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;id, Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>periodic_id_reinit</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>acef159f9f299d14b275acc5d38ee52f7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;id, Gst::ClockTime start_time, Gst::ClockTime interval)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_internal_time</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a6e08883b37732a51b00940a8bcd52a49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>adjust_unlocked</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a9f72f5d84ce2735835a26cec51d21de4</anchor>
      <arglist>(Gst::ClockTime internal_time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>unadjust_unlocked</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a1557212b076a34b36502f87d0cd7c05c</anchor>
      <arglist>(Gst::ClockTime external_time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>adjust_with_calibration</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>af9d74523eb34b8702a27740c48239b39</anchor>
      <arglist>(Gst::ClockTime internal_target, Gst::ClockTime cinternal, Gst::ClockTime cexternal, Gst::ClockTime cnum, Gst::ClockTime cdenom)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>unadjust_with_calibration</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a57e31b2b74b01255ee4860e634d9180c</anchor>
      <arglist>(Gst::ClockTime external_target, Gst::ClockTime cinternal, Gst::ClockTime cexternal, Gst::ClockTime cnum, Gst::ClockTime cdenom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_calibration</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>af91b25e9735944f9004a58d278d7fbc9</anchor>
      <arglist>(Gst::ClockTime &amp;internal, Gst::ClockTime &amp;external, Gst::ClockTime &amp;rate_num, Gst::ClockTime &amp;rate_denom) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_calibration</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a12463def9152956a420fcebe24939f4f</anchor>
      <arglist>(Gst::ClockTime internal, Gst::ClockTime external, Gst::ClockTime rate_num, Gst::ClockTime rate_denom)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_sync</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ab25f2d5423c487e02248733b819b9cad</anchor>
      <arglist>(Gst::ClockTime timeout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_synced</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a56dd59f66db560843fb1bbcdf4177cf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_synced</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a585e591201ecd7f11f7a16ab5a549af8</anchor>
      <arglist>(bool synced)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_timeout</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a3384c43f37681ab6d5cb4a859f1665cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_timeout</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aa064dd76f12f488fea80e2f3350b2cf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_window_size</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a03273877de11001166d9594fec12b423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_window_size</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a959ee0d9e7d79ba793e860a57077c17d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_window_threshold</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ad405ca953c118dc54146d3d97a0d066f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_window_threshold</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aae2c7caf6770fea8e4d82f3ca1a54efb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::ClockTime</type>
      <name>change_resolution_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>add734cd91eba4da68639ebc4b80186ad</anchor>
      <arglist>(Gst::ClockTime old_resolution, Gst::ClockTime new_resolution)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::ClockTime</type>
      <name>get_resolution_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>a510a92b097c131fdbf516ce736dc14e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::ClockTime</type>
      <name>get_internal_time_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>af38e834ae74307bd2c3c399d7a2814ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClockReturn</type>
      <name>wait_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>add60e95e1f185910dfacfa17fc5a63a8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;id, Gst::ClockTimeDiff &amp;jitter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClockReturn</type>
      <name>wait_async_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ae5f4d706cab453f51c822f2abf4bde12</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unschedule_vfunc</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>abc41eb372e0f7b1ad9071f53ba668eeb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, bool &gt;</type>
      <name>signal_synced</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>af611b1720354f8c3c553e2d819cea002</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>ab84fc422b0572b71504a4646384b2b84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Clock.html</anchorfile>
      <anchor>aa055df9465a22ca8144c637617a3fea9</anchor>
      <arglist>(GstClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ClockID</name>
    <filename>classGst_1_1ClockID.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Clock &gt; &amp;, Gst::ClockTime, const Glib::RefPtr&lt; Gst::ClockID &gt; &amp;&gt;</type>
      <name>SlotClock</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>ad9c18df879ba91502cfbd67d961d3120</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a2bd2b770fd227e71c659016f143f762f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>ab084db1a5a1ee6790298a7430dbba210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstClockEntry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a3dfdddcd929a4bbbb0965367682fa39d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstClockEntry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a018638a2d488b849ebcccb621cfe002a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstClockEntry *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>afca793b378847c5e23a1ad2d5717c987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClockID</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a573547d0b9836b242b5aa701fc478a32</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClockID</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>ae490d05f1bc4d2099b9ccafb3baf0ee0</anchor>
      <arglist>(const ClockID &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ClockID &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a3b743082c3a84f21a6d0ee4c286171e8</anchor>
      <arglist>(const ClockID &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_time</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a06432382d29b7864cdf6981f33a88736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClockReturn</type>
      <name>wait</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a439f4f9c9af546146794c55bbb321036</anchor>
      <arglist>(Gst::ClockTimeDiff &amp;jitter)</arglist>
    </member>
    <member kind="function">
      <type>ClockReturn</type>
      <name>wait</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>ad11cfa71447a9365364ee3e63b3bcd4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClockReturn</type>
      <name>wait_async</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>a05351f52919ad9a36743f59848e74c28</anchor>
      <arglist>(const SlotClock &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unschedule</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>aac9b66d4c3632a5f2c7bc3a1975cfded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>aae4d634cedb72c85ce04a5667f1d1612</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ClockID &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1ClockID.html</anchorfile>
      <anchor>aba633ba6dde51e71c5e61d0555d836f2</anchor>
      <arglist>(GstClockEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ColorBalance</name>
    <filename>classGst_1_1ColorBalance.html</filename>
    <member kind="function">
      <type></type>
      <name>ColorBalance</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>ad703f7acb3f92f8bbff6bc89fe2a4a89</anchor>
      <arglist>(ColorBalance &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorBalance &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a8d828e8307fd96d2e2f6ba81cc3e2d24</anchor>
      <arglist>(ColorBalance &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorBalance</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a677fc2202efd667c658d3c928cb1f908</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstColorBalance *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a421ce4fda505849202e576f75c5c9af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstColorBalance *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a6287f6c7d069ab777dd293bdcb44566e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &gt;</type>
      <name>list_channels</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a93a820cce5d35cef28c2daa5be849fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::ColorBalanceChannel &gt; &gt;</type>
      <name>list_channels</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a40367eda1cd5b15bd4efbc7357c249f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a12f7c55efbb4f339b24889d9292afb69</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::ColorBalanceChannel &gt; &amp;channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a40e2493161fc86a2526aadd0d8f729c8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &amp;channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_changed</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>aad7daa28838f7378215331289eb90d78</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &amp;channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ColorBalanceType</type>
      <name>get_balance_type</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>acf6a28bec1c75a8b7bbaee8c6807353f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &amp;, int &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a010e532e675cc17ed12bbd4d6415eb07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &gt;</type>
      <name>list_channels_vfunc</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a0e5017dd39dc3c6950edfbc435bb5c2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value_vfunc</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a53ac2069c5ecae4cbe5fab967f226445</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &amp;channel, int value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>get_value_vfunc</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>ad1eac089b5e407d1d48375df3410e9e3</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::ColorBalanceChannel &gt; &amp;channel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Gst::ColorBalanceType</type>
      <name>get_balance_type_vfunc</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a96a76a5b5b7df62396b1d06ae2dc1a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>a010fbec51b9dfc37996469a5a1819a43</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>ad57e452f02f6aadd29cf687a50672d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ColorBalance</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>aafbecb3eb4f62977490fefdca8b17113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>ab2cbdfc35897ddc87ccd12dda59afb56</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt; &amp;channel, int value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ColorBalance &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1ColorBalance.html</anchorfile>
      <anchor>aa2577ae766fa785fd810282283cdc610</anchor>
      <arglist>(GstColorBalance *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ColorBalanceChannel</name>
    <filename>classGst_1_1ColorBalanceChannel.html</filename>
    <member kind="function">
      <type></type>
      <name>ColorBalanceChannel</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a36fa3e1fee85564161f85a32845a5c82</anchor>
      <arglist>(ColorBalanceChannel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorBalanceChannel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>ab40ca18f396bc76afc6e7097b2561250</anchor>
      <arglist>(ColorBalanceChannel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorBalanceChannel</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a0f816403d89eecadd5c55faf05d8b5f7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstColorBalanceChannel *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a083516d6916916b07e60662375ec81c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstColorBalanceChannel *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>ab3741ded276fbd09733b95fa3eb9a7be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstColorBalanceChannel *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a61da61b75066f44a7e1f39ab191afd6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a2552768beaa62e7c6bcc46c6708900ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_value</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>afc772a8377a43a1d0396caa8f6f1ec2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_value</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>abeb31159e071ac917458c7de4937d5fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>af7a5423637860fb26068cdd254251c88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>a2e767e1489b650aff4898a0bc01be1c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>ab1f7ee7a9fb5c347e879ce27beb8066c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ColorBalanceChannel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1ColorBalanceChannel.html</anchorfile>
      <anchor>add8fb5b43320fa8c467097ba00a83e17</anchor>
      <arglist>(GstColorBalanceChannel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Context</name>
    <filename>classGst_1_1Context.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>ad92c9b55e40da3f5a1c6f37c843ecef9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a37410a24ca79b4d703e6da735236e88b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstContext *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a58c0a6618dee4a97f22a1e80f2249819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstContext *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a348872cac72af96b68a6d00d7c213edf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>ae0f13d14f43e0852948d9f5ae087e89f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a7f015e076e3d2b7ba6e76cec5813b525</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a8f01d2b621d54244dd4cf46e59c73279</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Context &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a716c65d5f58435ab2b9ce70dc8ae88c1</anchor>
      <arglist>(const Context &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>aa535d5cd6222fb7cfbd9081e4f66ea76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_context_type</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a8b508c9486859e20b21e27dcf4b2b294</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_context_type</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a419c1699d6ba61b55e408c11a368c0fe</anchor>
      <arglist>(const Glib::ustring &amp;context_type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_persistent</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a29b78297399d9cdb9833b1e3b4ca9707</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>writable_structure</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a4d9a1589adc27b2a691ea9d7a7092f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>ae8d12392678b9c30f1e706b5780efdf9</anchor>
      <arglist>(const Glib::ustring &amp;context_type, bool persistent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>a4ee0bfaf7a4b2849c6eafe66b09ff8bc</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Context.html</anchorfile>
      <anchor>aee2d2684162420274929dbf03d66b717</anchor>
      <arglist>(GstContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::CoreError</name>
    <filename>classGst_1_1CoreError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa5884143c2e97da6f906d25eb99e374c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa0e045f127d99ee9bca09b6ff2015cbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_IMPLEMENTED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fae4240033005a3cfc62997ab478b34023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa8d50b0b9d917ab8b5750e33803359008</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa01135b76cf3b99fb0c058de4e73f2c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa7af8df1cf23611a1f4fa2ada000fd37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEGOTIATION</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa1de803c13d9280fb47ed5a29213414fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640faf3b5e741ae38d4d032290615abee19f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fae3a83f666729b6e4d25418af2892eeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa77e1ad0c1115528bd50c3c9939e0275e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640faaba0697ccc7b82aa62aaa7636616e9b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PLUGIN</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa501a95d1860bc9c0d5bd856a44395d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa37e54b660a4b190c923d022a960521fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISABLED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa24640b18298d33438965140ee57bf345</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa629428b522f5274e38ffad6f025caa38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa5884143c2e97da6f906d25eb99e374c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa0e045f127d99ee9bca09b6ff2015cbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_IMPLEMENTED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fae4240033005a3cfc62997ab478b34023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa8d50b0b9d917ab8b5750e33803359008</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa01135b76cf3b99fb0c058de4e73f2c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa7af8df1cf23611a1f4fa2ada000fd37f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEGOTIATION</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa1de803c13d9280fb47ed5a29213414fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640faf3b5e741ae38d4d032290615abee19f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fae3a83f666729b6e4d25418af2892eeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa77e1ad0c1115528bd50c3c9939e0275e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640faaba0697ccc7b82aa62aaa7636616e9b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PLUGIN</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa501a95d1860bc9c0d5bd856a44395d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa37e54b660a4b190c923d022a960521fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISABLED</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa24640b18298d33438965140ee57bf345</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>abfd91ec42c060fbc76c30f820eee640fa629428b522f5274e38ffad6f025caa38</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoreError</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>ad0a98e15ca3ec5e530715c0c3a8c461a</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoreError</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>a0bc9e73db323cf8022ce4a814a421d4a</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1CoreError.html</anchorfile>
      <anchor>ae5385601571c4a829f02e68b8ac3979c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Discoverer</name>
    <filename>classGst_1_1Discoverer.html</filename>
    <member kind="function">
      <type></type>
      <name>Discoverer</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a90c2412d27b4af7f6f768236b68ea357</anchor>
      <arglist>(Discoverer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Discoverer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ae65071c16f057de4f755587f378628aa</anchor>
      <arglist>(Discoverer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Discoverer</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>aaddf5eb9e93a7cce10a3ae04ef74227f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstDiscoverer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a4c7240ea0ca7cb706753cf504580d4ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscoverer *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a98db5252f65abbe46e0fe1c7b2d9184c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscoverer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>aac7682c71f0c78cbdf943aba8f73df73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>aa8189c409b7b23f0c198b63fd799a78c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ae68ceab8d17bec55ee2dbb4fc7345ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererInfo &gt;</type>
      <name>discover_uri</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a3f7dff58de56927c0227fc67385c78b2</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>discover_uri_async</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a1ed5cecd0c80b57287e84dca9bc4a609</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_timeout</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ab4e3423b8c137af551ec0a65db7274fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_timeout</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>af625cadb5a03ad7b3b8bac0f3d6963bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::DiscovererInfo &gt; &amp;, const Glib::Error &amp;&gt;</type>
      <name>signal_discovered</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a9c8a2f71d16a5b2afb13805f98de74bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_finished</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ab149458b3c09bf26ad850638dcd9f525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_starting</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a38ec23dc31b003c589f095e2bec5395d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Element &gt; &amp;&gt;</type>
      <name>signal_source_setup</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>aee17b9df56e6083e30c6cc2d25ea80a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a4d427007b30b88e43beed60598bb1a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Discoverer &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a024a51a27dc3edb6b42e2a199a629339</anchor>
      <arglist>(ClockTime timeout)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Discoverer</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>abc8c93b8e8dd49777c2dded444552e3c</anchor>
      <arglist>(ClockTime timeout)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_discovered</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a6cb2de99d73fe3c8432a51e9b3598323</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::DiscovererInfo &gt; &amp;info, const Glib::Error &amp;error)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_finished</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a88723c159442201c42edb70561029f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_starting</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>a2c219555aebff984f2a3b8ef06a0b360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_source_setup</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ab6902e118077fdcfee1bba1e5c44b642</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Discoverer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Discoverer.html</anchorfile>
      <anchor>ad9eb50edb24f76e6415c210a989b261c</anchor>
      <arglist>(GstDiscoverer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::DiscovererAudioInfo</name>
    <filename>classGst_1_1DiscovererAudioInfo.html</filename>
    <base>Gst::DiscovererStreamInfo</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>af100b503e25f6f8acab1985144b9a740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>ac294b627b9c844404de3f4f41c68114b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererAudioInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a3640fb82c8cf7f68aa5b1b1fff59763f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscovererAudioInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>ae8285f6364cd90fd7764d160c6f933be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererAudioInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a3d079982dba54b0e649434d75789bc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererAudioInfo</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a0577cf67b2734af70e640855e7820475</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererAudioInfo</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a3f33e9aba722b636d49cca9239220bf1</anchor>
      <arglist>(const DiscovererAudioInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DiscovererAudioInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>ad9715d7ea2285786b7e96aadff0b1a91</anchor>
      <arglist>(const DiscovererAudioInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_bitrate</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>af16b98e9f2c646ec6eee4fcfe0077bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_channels</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a91b0a5cab53ef085a55fb44e3356fb73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_depth</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a22379f023908f63baeb0e17d955f2763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_bitrate</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>accdd3eb1b13febe0c8c4cbb37a575834</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_sample_rate</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a1812877561a9b11504cbd60f7dd66f69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_language</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a8eb0a2c3c0aa58af3c409c62a6bfc05c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>ae5dd14efa90e49fa84d6e34e592770be</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererAudioInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1DiscovererAudioInfo.html</anchorfile>
      <anchor>a45130a7d371e435371fd3df05c17141a</anchor>
      <arglist>(GstDiscovererAudioInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::DiscovererContainerInfo</name>
    <filename>classGst_1_1DiscovererContainerInfo.html</filename>
    <base>Gst::DiscovererStreamInfo</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>ac5e7d6495719db3ab4bb995ec5ab20f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a49f13adcba5c5fc2427d5d70aff1d49f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererContainerInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a18558ae82e107cca9f956ed41b16cab7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscovererContainerInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a085b6e031c8e00b1e790e976f2a43264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererContainerInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a0e3f92436b39601d4c5733c3b4712e8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererContainerInfo</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>acdf0fd9d6f60889dcd82813406e2faaf</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererContainerInfo</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>ad45bdd6cb1886a1a37d70c0547ee1293</anchor>
      <arglist>(const DiscovererContainerInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DiscovererContainerInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>adf381dc1803234d4797df2f627b6b9eb</anchor>
      <arglist>(const DiscovererContainerInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_streams</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a75375440da823894597b1b5a00b1b457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_streams</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>ae824e7ef8b03b947dfa53da4d48a2a57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>ab01938921f02c248edf9fc143ff25928</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererContainerInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1DiscovererContainerInfo.html</anchorfile>
      <anchor>a87ce8f513209f69c05dd0058b7903708</anchor>
      <arglist>(GstDiscovererContainerInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::DiscovererInfo</name>
    <filename>classGst_1_1DiscovererInfo.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>aeb0d9d76f05c555ba5cdf18e03d6136e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a95bb3d146dd2d81b386627d94e7d07d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ae550b18d8179d519a4c283da581a012f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscovererInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a70271fbbce0a0e596e0d78a1539669d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>abcccc72a0dcf1f5d2910533ac4c85c7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererInfo</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ade366d1e17efe59053bc8ce91deeb246</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererInfo</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a74574c9f7f56cc96a7270e52ca6698bc</anchor>
      <arglist>(const DiscovererInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DiscovererInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a9977bf20b7a79e85c15a47dca7bc4d01</anchor>
      <arglist>(const DiscovererInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererInfo &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a842ad2a2e5c0dc3a1e4424bc664dfb1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_duration</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ab558b08a499ad3217c4fef19844d2486</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>get_misc</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a786c4bd2bcbda0d58a01c9f085c1036b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DiscovererResult</type>
      <name>get_result</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>acb973dda200e5238330e5bb1b44bf637</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt;</type>
      <name>get_stream_info</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a8e485cd54ad6ff00205b671054648107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt;</type>
      <name>get_stream_info</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>acc617dd1259f9e179694c6a1f35628a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_stream_list</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a77b5e3b5a4d6311a57758b775329aa24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_stream_list</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a1a64dd3938e8affed9a142b731192382</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>get_tags</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a3d51f95b5ddcaee1f8060529111c70a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ad96e298d03eab1d255f792b3b77c1a37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_seekable</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>aeb860750b9abeebfd1ca95a5e6ccfa6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_audio_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a5cebedffc97c6d878c49dbc39c4e2c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_audio_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ad04ebe23903d30ebd073e380a7fdd20a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_container_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ac11f8cec9a43c5462666856a3b6d341c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_container_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>ae7011c0d18f13bd6b7d4b7c0e1bb3c92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a99869d1c1c6cd02d8aaf47cd68226a25</anchor>
      <arglist>(GType streamtype)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a7a77e9df55f338e4280a153aab2880db</anchor>
      <arglist>(GType streamtype) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_video_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a936fb30bb410cf167609c38b83c91b8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_video_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>abae43dfbe733fc5764bce59fa1ea449e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_subtitle_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a526297e30f0f52512d431ae4bdf383d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt; &gt;</type>
      <name>get_subtitle_streams</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a20b4787f749b375ccca0719ecd40809e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_missing_elements_installer_details</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a34538ba424b444d459c1c07ffe144091</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Toc &gt;</type>
      <name>get_toc</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a7c5b7d78d04b5b063763c26a67a4b059</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DiscovererInfo &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a905b625e1c5014c320a6c8d42f7795e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a12026896cebc01445b335303563075b4</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1DiscovererInfo.html</anchorfile>
      <anchor>a5ef5eb797061ddab352c832e52aa8e81</anchor>
      <arglist>(GstDiscovererInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::DiscovererStreamInfo</name>
    <filename>classGst_1_1DiscovererStreamInfo.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a6a845a781a5b925b69f393051bae9e30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a6dab7ac3e458e67b0ffcc4fd020c72dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererStreamInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a41ce32a077dbf3ad37ddf8487160c838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscovererStreamInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a69a9881d8d8f65a651b06af782f5b8e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererStreamInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>ac1b5c83a0605a23126675b312c464cd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererStreamInfo</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a85bf9ca3a4cdc744c8e0d3743adcd0c9</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererStreamInfo</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a5a71bda879bb865f865f56451a0df209</anchor>
      <arglist>(const DiscovererStreamInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DiscovererStreamInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a72204923819459d2e431f72c3e3e5fd7</anchor>
      <arglist>(const DiscovererStreamInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a8ca420f42e39a13e08e4bad84ad5c45d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>aaae80e3af29d1e0dcde5026034217b57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Structure</type>
      <name>get_misc</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>af60479ac598b2cf82299290548979954</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt;</type>
      <name>get_next</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a7060f1712490c7bc9b97474262f7892d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::DiscovererStreamInfo &gt;</type>
      <name>get_next</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a506e24b841235ac9ff23c00863ed6ce0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt;</type>
      <name>get_previous</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a3f8b12e86ff1437fb36a502bac0f5ed2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt;</type>
      <name>get_previous</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a9c31ffaa57bc452a2553e948baeb63b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>get_tags</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a555a16551fa12246e2b536d3f74f7f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_stream_type_nick</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a188869af0f35ea6603da43608dcfd812</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_stream_id</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>aa22d054f1804b5a8d44241d6b927e17e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Toc &gt;</type>
      <name>get_toc</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>aca9d208c764a4027e3528a34cca6c270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a04ed28255fed962e9706b55960bd5183</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererStreamInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1DiscovererStreamInfo.html</anchorfile>
      <anchor>a333e5ea443882db7bf8e10a102b1087d</anchor>
      <arglist>(GstDiscovererStreamInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::DiscovererVideoInfo</name>
    <filename>classGst_1_1DiscovererVideoInfo.html</filename>
    <base>Gst::DiscovererStreamInfo</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>ae1e83ca6c73decd76c4ce827147c27cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a02e486518da61dedbf05f20eb0c71242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererVideoInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a34bd0ffed5a16795aabf64dc60deee3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstDiscovererVideoInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>ac4062d5282befd26b2832671d5b6a9dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstDiscovererVideoInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a299e74e5ff34bb2876417293d73d534e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererVideoInfo</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a3b484b0ec5e4a09b8fdae4560d6e812d</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscovererVideoInfo</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a79298cab4fc1222be6b975a734efc1e3</anchor>
      <arglist>(const DiscovererVideoInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DiscovererVideoInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a63d754a6ef6ed2713fcb6e17a963b89c</anchor>
      <arglist>(const DiscovererVideoInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_bitrate</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a8708ad8436e6b5873562b193f71e0920</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_depth</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a22063d7233f9644602d440a577c4a7c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_framerate_denom</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>abcaa064c4726677396332e072c66f813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_framerate_num</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a90e05dd02e9db9773f6fa4ae3a86d56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_height</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a0aa16f69f1d1c0fbb76baa0403466dfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_interlaced</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a237a24c24dcbb6477434e1043403453a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_image</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a38ac6b79e07d3500c6434357fdce0017</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_bitrate</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>ab70b949f3fbbe0cc6fec4095e30fab22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_par_denom</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a83bd21b8631593f10fe68ffa2aa62421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_par_num</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>a58295d64506ae7d86d150f1d4fa14fd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_width</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>aeb3f1d25554eec0d26248f9038960e24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>ab9ed2894420f7b1a093a75782a0472a1</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::DiscovererVideoInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1DiscovererVideoInfo.html</anchorfile>
      <anchor>af30f4cf54883a0f4aeb309e6c879fb1b</anchor>
      <arglist>(GstDiscovererVideoInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Element</name>
    <filename>classGst_1_1Element.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>Element</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a68bf7407277bbe872ad6900643f581e4</anchor>
      <arglist>(Element &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Element &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a4f6d05c3719a775b527186f1b0dad35d</anchor>
      <arglist>(Element &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Element</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a54a2f9a1318f4dfeaaecfb590601011c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstElement *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7385513759359ebfb349b824ab463dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstElement *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7fa5fccfc067ed5d651f13e20ca052f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstElement *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aaf406873b4b57582deff89ed621fb297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>link</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ab41115df14a718d340380c2d719a6ae4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a6f20a79f8c4f5e8503efe4a2a81f6dcb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;pad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_all_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>abb7cdeb640b7bee61540db8f39baa13d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>create_compatible_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>abd2707d6644b4713012e474050bbd9eb</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Pad &gt; &amp;pad, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PadTemplate &gt;</type>
      <name>get_compatible_pad_template</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a1e9331096e5f7f04c656ba8e7e09b77d</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;compattempl)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::PadTemplate &gt;</type>
      <name>get_compatible_pad_template</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a84168677c3acfe326e22e78fa9c7d09b</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;compattempl) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aea8e7821ecf7acdd24bb08b0e638caa7</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ad082533664f013db0c3e629a00142464</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a90acea759133eb20d42bc5ace1c2eff3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ae726bdf0cfd604bb612ab8aca76e8833</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ae53c76cd339a8d3b5a8bc676a577b578</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_static_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a71121475e7d509dfc1afb289ecb42dbc</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_static_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>afc250ffcde9c807734449702d2ab4c56</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>no_more_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ab2d2718fe5d4f400d91002edf683e8b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_request_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aa614a038b969d37f5db69999e6200c7a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;pad)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_pad</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a61b542aafbb389d69da3033725521d6d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;pad)</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a490d9605ec092f544df55a54f823637f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a27893ca54e7f043d420f69a50d1d26ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_sink_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a06d06d2217a48a8b136c62ae710681ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_sink_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a695c0edf63f81b41399b8112cc2212c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_src_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aadadabfccf8ec2ce71da3c8156ef9caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_src_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7987f54c0196073393da4b4d411a330f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlink</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a82f5083595abf391729cfa6085090dbd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_context</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aacb864fcef4a93fc45a9af3627db0c6b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Context &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aea27df909b82a7dbcf15d21fe4a6ae17</anchor>
      <arglist>(const Glib::ustring &amp;srcpadname, const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest, const Glib::ustring &amp;destpadname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlink_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ae9a9c3d2b226dfb6920f2e8152ffb5b3</anchor>
      <arglist>(const Glib::ustring &amp;srcpadname, const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest, const Glib::ustring &amp;destpadname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a4262d8dcba6c3b5ec95555fd1464902c</anchor>
      <arglist>(const Glib::ustring &amp;srcpadname, const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest, const Glib::ustring &amp;destpadname, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ac94167114b235db33bfc8b1b4ce638b8</anchor>
      <arglist>(const Glib::ustring &amp;srcpadname, const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest, const Glib::ustring &amp;destpadname, PadLinkCheck flags)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>link</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a8c7bfc955d8d0152e1af39d6bf0ab6ed</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;dest, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_base_time</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a0428a1c8126fc13c27c0df8e713b6aa7</anchor>
      <arglist>(ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_base_time</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>abe5138d41072cfc8c3af1805d44b1e54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start_time</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ad01eb1b7406d6bc80de1c5184b8388d2</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_start_time</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a015311b1871fa70ed8edb6a98fbd423d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bus</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a3db6b352dc7023246a1dd6592810cccb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Bus &gt; &amp;bus)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bus &gt;</type>
      <name>get_bus</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a80d48bb2aaf211c177d51d7f250334b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Bus &gt;</type>
      <name>get_bus</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aa6ea71674aa04e12781bded3abfe7354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ElementFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ad07256e0790d6781fc6c37c03a2e2d90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::ElementFactory &gt;</type>
      <name>get_factory</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a424089fb124677c5d5c28721fcdfc1c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_clock</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ad1a766827de41c955da267718c76db9a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a9d2e1731488360438dac236fb198e2a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a68bbad716c19226980e7189407c96740</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>provide_clock</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>af7d7f25e4d79771efe256ff6c40ecbb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>provide_clock</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ac805b52da039e1b6e21463ec08da6031</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StateChangeReturn</type>
      <name>set_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a9f99dbf420c0f34005662dac54fb16b7</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="function">
      <type>StateChangeReturn</type>
      <name>get_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a74b7e2811f2d7d4a5ae49e43eace975e</anchor>
      <arglist>(State &amp;state, State &amp;pending, ClockTime timeout) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_locked_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a806dffc144477f00ca9a2f34a5b0f8ca</anchor>
      <arglist>(gboolean locked_state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_locked_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a405e45fee201dee89ceb09a053bcc9e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abort_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aaff02239da99117648e17079a9443166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StateChangeReturn</type>
      <name>continue_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a8ad12d3eeb5b9842201675492cd19cb4</anchor>
      <arglist>(StateChangeReturn ret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lost_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a4ffbed46992421084ca770c1229c4ba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync_state_with_parent</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a6d198b8f460ccc16641d5a21b2975ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StateChangeReturn</type>
      <name>change_state</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ac014794d6dd75b9896d22682388c8581</anchor>
      <arglist>(StateChange transition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>post_message</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a45110cdd5580e6fc7415a90ab19df50d</anchor>
      <arglist>(int code, int line, MessageType type=Gst::MESSAGE_INFO, const Glib::QueryQuark &amp;domain=get_core_error_quark(), const Glib::ustring &amp;text=Glib::ustring(), const Glib::ustring &amp;debug=Glib::ustring(), const Glib::ustring &amp;file=Glib::ustring(), const Glib::ustring &amp;function=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>post_message</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a26bbcf496949abc2b8f9f59cf0965f30</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Message &gt; &amp;&amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a471ae2f5290f5035f1b7b4de091394d3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_convert</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a820d8c912ac5fd4473b8129024285c8c</anchor>
      <arglist>(Gst::Format src_format, gint64 src_val, Format dest_format, gint64 &amp;dest_val) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_position</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ab0224cc146c7e4fc0b57271f84803815</anchor>
      <arglist>(Gst::Format format, gint64 &amp;cur) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_position</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a9466ba6bbd8bb80d48383d78fe1ee835</anchor>
      <arglist>(Gst::Format format) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_duration</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ae34be7370445472f300450045f5bbddd</anchor>
      <arglist>(Gst::Format format, gint64 &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_duration</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a77c57f566c07abba61c3bfb5f67f3fe9</anchor>
      <arglist>(Gst::Format format) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seek</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a3341e4076fd02159a6fe9a2a042f42ae</anchor>
      <arglist>(Format format, SeekFlags seek_flags, gint64 seek_pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seek</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a430a01725519d8b2f6e8dd508284028f</anchor>
      <arglist>(double rate, Format format, SeekFlags flags, SeekType cur_type, gint64 cur, SeekType stop_type, gint64 stop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_event</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a01caf7800f24670bd3c152fb2b8f3a2a</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Event &gt; &amp;&amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_event</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a2dee29e72f60948351e91ef45c1cd3fb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>get_context</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a30d67deee57effb0283c67a5a21986d2</anchor>
      <arglist>(const Glib::ustring &amp;context_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>get_context_unlocked</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7572aa87101ac491c1c80e70c6cb5cb5</anchor>
      <arglist>(const Glib::ustring &amp;context_type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gst::Context &gt; &gt;</type>
      <name>get_contexts</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a563570e8ba23c4938accf87cff9b2c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_no_more_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a419abecd2a358f6157ba82dbb2f1e067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>signal_pad_added</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aaaf2d91e5aafe78141c3cf8c80724938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>signal_pad_removed</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a00f82141e3f402192b056fcb42aa24d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release_pad_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a17cc02bebfd099a1330a59467cef3f3b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;pad)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>request_new_pad_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ab459dfdb70ef2a61202e8ff467595763</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::PadTemplate &gt; templ, const Glib::ustring &amp;name, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StateChangeReturn</type>
      <name>get_state_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7c9be14c0792eae794d650ca486dfbe6</anchor>
      <arglist>(State &amp;state, State &amp;pending, ClockTime timeout) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StateChangeReturn</type>
      <name>set_state_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ab78ac5519d084e4d06c913c276f2d11b</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StateChangeReturn</type>
      <name>change_state_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a1a0c04186513d05eb90fa71001639bc7</anchor>
      <arglist>(StateChange transition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>state_changed_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ad784f418931639b085b3cf567c175e5c</anchor>
      <arglist>(Gst::State oldstate, Gst::State newstate, Gst::State pending)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_bus_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a404fa6688b0f042f1dc46d2e22fc7dbc</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Bus &gt; &amp;bus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>provide_clock_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>acbd6faca7b79fd358af5a6a0b91a8600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_clock_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a4e0baa09a835bdcef521b5f6aa0a387f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>send_event_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a2c6eb96eca5dbffe165cc7f8f00f0de6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>query_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ac79bb6d05740a2a3c1a0e79cad55e527</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_context_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a0a910b5a5812341da6a9568f59dc9d51</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Context &gt; &amp;context)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>post_message_vfunc</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>ac04bed52183cca8e02e6d6dfb99318b5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Message &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PadTemplate &gt;</type>
      <name>get_pad_template</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a58917308a93eb2029f850c34510e3ff3</anchor>
      <arglist>(const Glib::ustring &amp;factory_name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>property</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aa2c85c09f45a4af156b3da9b0aeb0492</anchor>
      <arglist>(const Glib::ustring &amp;name, const T &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a26c4c58db02fb60a08349360967532df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_no_more_pads</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a29b97cd7fdacb477b88ded24c57f4323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_pad_added</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a6e549a637bdd97fa4163fe89b0b79003</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;new_pad)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_pad_removed</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>aa846a7e69471cea3392518871c6b6d89</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;old_pad)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Element.html</anchorfile>
      <anchor>a7128ca440b26df3c7807db690b03e572</anchor>
      <arglist>(GstElement *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ElementClass</name>
    <filename>classGst_1_1ElementClass.html</filename>
    <templarg>DerivedCppType</templarg>
    <member kind="function">
      <type>void</type>
      <name>add_pad_template</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>aeedee9ca1ed4bc3fb9f3262813c58658</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;tpl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_metadata</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>a81c8ebd818783b5a8d369365260d4d49</anchor>
      <arglist>(const Glib::ustring &amp;longname, const Glib::ustring &amp;classification, const Glib::ustring &amp;description, const Glib::ustring &amp;author)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_metadata</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>a48e1818c1a698d4cf47ddae38c536acf</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const GstElementClass *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>aca85eb2fd09bfe8d67efcb2fa65e5924</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstElementClass *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>a31fda146384fdd5bf197820dbb3e540a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend GType</type>
      <name>register_mm_type</name>
      <anchorfile>classGst_1_1ElementClass.html</anchorfile>
      <anchor>a976afd4d98e3128082feb62bd8768ec5</anchor>
      <arglist>(const gchar *type_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ElementFactory</name>
    <filename>classGst_1_1ElementFactory.html</filename>
    <base>Gst::PluginFeature</base>
    <member kind="function">
      <type></type>
      <name>ElementFactory</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>aa243e132f932c561caa82a173e9014da</anchor>
      <arglist>(ElementFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a6b1845ff29caf623805d0e50746f7d4f</anchor>
      <arglist>(ElementFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ElementFactory</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a88184a8217f47bf780b89ff918aad361</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstElementFactory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a826834e965d2fb2080b53319a1d17e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstElementFactory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>ae3f2168e146078f5a74dfac342285f55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstElementFactory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a09f872528d14ad57a039fb992c1862dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a841fc73836ea635ac08c3ca71554cf2a</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a8c37f93a5d766777a8b3236c15088ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_sink_all_caps</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a26e9c9524e83969582b5c7532aab1661</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_src_all_caps</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a4c8e867c0c18efabf56b1278308cdd47</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_sink_any_caps</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a84badc3bf24cd1d09767978f702c634f</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_src_any_caps</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>ad28acde89ca136ee1aaf93d30601db56</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_element_type</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>ab4a7b6be6fb116ec2ef7af97f7157b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_metadata_keys</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>ab1b604a39d778d3642eeba50457c4484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_metadata</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a091cc99e9101d2137765ab5993c00db9</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_pad_templates</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a812076a653eac5d4aa63ca4069902a7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>URIType</type>
      <name>get_uri_type</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a4ecd92efba5f27b1beb4e960fdd6b4db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_uri_protocols</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>ae960450a6669173420cd3a7e523dec11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_interface</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a0455b73109ef4dd5920a5845079a833c</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gst::StaticPadTemplate &gt;</type>
      <name>get_static_pad_templates</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a82a88bfd944f753f3832544ce2bbe303</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_type</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>add5889173bb1c0eded531c7c73c0c7c8</anchor>
      <arglist>(ElementFactoryListType type) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>aca3f4d0a97d5bf54db238807f1ca5ced</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_element</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a2f82a4db301aa1fb5ad916d21a8f7cfd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin, const Glib::ustring &amp;name, guint rank, GType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::ElementFactory &gt;</type>
      <name>find</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a1d496258aabd0bb3408749ec9b1841f8</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>create_element</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a6a85a2a3c4f69383cad2686d381e10e9</anchor>
      <arglist>(const Glib::ustring &amp;factory_name, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>create_element</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a67261d3013b07734361c2b01ce98232d</anchor>
      <arglist>(const Glib::ustring &amp;factory_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Glib::RefPtr&lt; Gst::ElementFactory &gt; &gt;</type>
      <name>filter</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a38cff716e571928814e91eacbd61c61c</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; Gst::ElementFactory &gt; &gt; &amp;list, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps, PadDirection direction, bool subsetonly)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Glib::RefPtr&lt; Gst::ElementFactory &gt; &gt;</type>
      <name>get_elements</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>adec5791a3043c0647a85ceb032acac03</anchor>
      <arglist>(ElementFactoryListType type, Rank minrank)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::ElementFactory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1ElementFactory.html</anchorfile>
      <anchor>a52e380b14f9edac770470c813654997e</anchor>
      <arglist>(GstElementFactory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EncodingProfile</name>
    <filename>classGst_1_1EncodingProfile.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>EncodingProfile</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a5dd6b2304cc66fc22795fcfae56dd6a2</anchor>
      <arglist>(EncodingProfile &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EncodingProfile &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a02af7b7e199494599cc7c2f7829f196d</anchor>
      <arglist>(EncodingProfile &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EncodingProfile</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a64236769f2cd7ce8a4aad2f3a5b55da8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstEncodingProfile *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a270fdb2bf8abb4f5508c555755a53a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstEncodingProfile *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ab6260ca244772d1c6566e57bff1a644f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstEncodingProfile *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ae35a8b1f281d54217713a81df3e1b792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ac86c874805e43a6bffdcc25a45ad3739</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a675914b4ea593870b526bef0a2e08734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_format</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a06c4749d93e7db1feb898fafd2b06694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_format</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ace76f818a851137648d795b59e4ec92e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preset</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a12a50c461b58f24059626079abe56333</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preset_name</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a3b0eb480065ad541d641fc61101caaed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_presence</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a7f0b13119afe0d43fe4d1075bc976973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_restriction</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a66c6d8839f6cff404a637e56fac48585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_restriction</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a8172932859040f51fe4b7e1edb908266</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_file_extension</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a3409e63a89bbb391e494a0717a9527cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a14a57c65018cca538fd6044cc5508a17</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_description</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a84148f184b95e55576bb36c01e67c1b4</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enabled</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>aa4f699c857cde19f97e7d7eb69bfaa0f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ab83dab99e17bc3f10d59ff3e80d5458d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preset</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>af0e6b84df552c13585f37216ef55c4a9</anchor>
      <arglist>(const Glib::ustring &amp;preset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preset_name</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>adcc88ca0e7d8a7c629226d01e447b4e6</anchor>
      <arglist>(const Glib::ustring &amp;preset_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_restriction</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ae21447b38b66722e43ffa88fe27473f7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;restriction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_presence</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a4c198c6b267e2b2a1f081dfdcbf52d8a</anchor>
      <arglist>(guint presence)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a3de2ad646d23e98fd81325627172deb6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::EncodingProfile &gt; &amp;profile2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_enabled</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ab62e3ce05ead3c84ec9bb2f6df48d1b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_input_caps</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a366e069cdbbc1896ac19aa32f9d14c8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_type_nick</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a07a4902eb2b8684c75ba714a7bac5e2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_allow_dynamic_output</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a50ceb3d8c348d84cb61d95ec2a355069</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allow_dynamic_output</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a544cb92ba38f6ec9c82fb6ad3e6e2663</anchor>
      <arglist>(bool allow_dynamic_output)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>a58f217770762a3f9ed7deb872f544b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::EncodingProfile &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1EncodingProfile.html</anchorfile>
      <anchor>ab5d448685ab931ac04c868cd71afff3d</anchor>
      <arglist>(GstEncodingProfile *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Event</name>
    <filename>classGst_1_1Event.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>abc0239240234e41b14b0282b4ccf9854</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>aa0612cc7a2b0650c46dbc21bcfa7db5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstEvent *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a4184b14cf799d2e4a479d9d65d9607ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstEvent *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>af43cafd4101b4c7609ffffcd7dc5747d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstEvent *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>ad04d4637c5ed1a80fe5aafc5be563fae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a0316ae4524abbaa745f6eeca1dae5315</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a3e265ed8936fea4d0dec9588d5ea1554</anchor>
      <arglist>(const Event &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a9dcdd989ef2cbe6946bbedaff0d28caa</anchor>
      <arglist>(const Event &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>get_structure</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a14f35d22feb9a7c471b0d822d50b90ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_name</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>aae50e2409d68a696ba6635a3dbdf32c5</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_seqnum</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a6438e208b33154176d25663e8ea6d8c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seqnum</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>aea6f533dcef8ecc1ba6b29532bb4f72e</anchor>
      <arglist>(guint32 seqnum)</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_running_time_offset</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>ab8f0cfa1e7eb951db1110e134a5a4720</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_running_time_offset</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>ad621edb4b1b2acb9e7e47029b44303fb</anchor>
      <arglist>(gint64 offset)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a73ee6cce3ab21221ec02e3055bd75c37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>abc47c4c02acdb8128c196cc4b50603e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_downstream</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a2dfa5a79c0825961523b99632c97ecff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_serialized</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a28327e28077daecab43b297748ec6fe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_upstream</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>acb4ac25227d3da743b9455891574e663</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>get_event_type</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>ab66b79737d0e1b8740fd594481ffe854</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_timestamp</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>a75a0a1ac90874e0611bbdf56461e30ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>aedd3df09a755d8b7d6df2e6f724a0ea4</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Event.html</anchorfile>
      <anchor>aac36d3ecf7a485273d65e1d26e01f453</anchor>
      <arglist>(GstEvent *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventBufferSize</name>
    <filename>classGst_1_1EventBufferSize.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>a9274c451182eb26b4f0b4d74bd97d681</anchor>
      <arglist>(Format &amp;format, gint64 &amp;minsize, gint64 &amp;maxsize, bool &amp;async) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_min_size</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>a8c9754720f0e16bd6e7d092e1fb68286</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>a1b56d5e2c46ce0b0be32c956ea62a7d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_max_size</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>aa17eb7836c2bf9e875d8cc41d1e286dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_async</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>aa36af29808e826c3221346df2b877775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventBufferSize &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventBufferSize.html</anchorfile>
      <anchor>addca432dd494b0cb02929326f71a469f</anchor>
      <arglist>(Format format, gint64 minsize, gint64 maxsize, bool async)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventCaps</name>
    <filename>classGst_1_1EventCaps.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>parse_caps</name>
      <anchorfile>classGst_1_1EventCaps.html</anchorfile>
      <anchor>a32d0be01f7ae6139e2d835789e9ea4d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>parse_caps</name>
      <anchorfile>classGst_1_1EventCaps.html</anchorfile>
      <anchor>a7eb3df38f0893586ebd83e6b454dc372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventCaps &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventCaps.html</anchorfile>
      <anchor>aa224aebc95c183fabdd9b6a68538e626</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventEos</name>
    <filename>classGst_1_1EventEos.html</filename>
    <base>Gst::Event</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventEos &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventEos.html</anchorfile>
      <anchor>a628da9d48b0067bbf51bdcb7205392eb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventFlushStart</name>
    <filename>classGst_1_1EventFlushStart.html</filename>
    <base>Gst::Event</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventFlushStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventFlushStart.html</anchorfile>
      <anchor>afcbdb1ae54efae8089e84583d74ebb0a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventFlushStop</name>
    <filename>classGst_1_1EventFlushStop.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>bool</type>
      <name>parse_reset_time</name>
      <anchorfile>classGst_1_1EventFlushStop.html</anchorfile>
      <anchor>a4a4463175ed0184d039ed6910cf2c77e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventFlushStop &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventFlushStop.html</anchorfile>
      <anchor>aca471490fc1c115f96475389efb450e9</anchor>
      <arglist>(bool reset_time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventGap</name>
    <filename>classGst_1_1EventGap.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventGap.html</anchorfile>
      <anchor>ab7943da7d48e5979fba10ae15cfeb66c</anchor>
      <arglist>(Gst::ClockTime &amp;timestamp, Gst::ClockTime &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_timestamp</name>
      <anchorfile>classGst_1_1EventGap.html</anchorfile>
      <anchor>adf1d9e3c720afcb868b90b66bdaa6ce0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_duration</name>
      <anchorfile>classGst_1_1EventGap.html</anchorfile>
      <anchor>a3c5a6ea3e6b11ec729718adaa3cdefb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventGap &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventGap.html</anchorfile>
      <anchor>abe74281978f1af5ce7feac410274ebd5</anchor>
      <arglist>(Gst::ClockTime timestamp, Gst::ClockTime duration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventLatency</name>
    <filename>classGst_1_1EventLatency.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_latency</name>
      <anchorfile>classGst_1_1EventLatency.html</anchorfile>
      <anchor>af8be1e58ea33fd9db424bf41c531e240</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventLatency &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventLatency.html</anchorfile>
      <anchor>a1e20253679c36a146c765c5b9044d8b4</anchor>
      <arglist>(Gst::ClockTime latency)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventProtection</name>
    <filename>classGst_1_1EventProtection.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>a978e21ba793ba9131b0de57269781c0f</anchor>
      <arglist>(Glib::ustring &amp;system_id, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;data, Glib::ustring &amp;origin) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_system_id</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>a827c8b880b78ea765e3f1259c8cb9fef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>parse_data</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>aefe8242349a1b02f656374727a8cd8b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Buffer &gt;</type>
      <name>parse_data</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>a2c3754a0749527b619b1e69a372c6c0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_origin</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>a3ebf50d43e65c095a4d01e2e8eaef06c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventProtection &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventProtection.html</anchorfile>
      <anchor>a2c888a3a67887df9865dba0a1a6a3620</anchor>
      <arglist>(const Glib::ustring &amp;system_id, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;data, const Glib::ustring &amp;origin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventQos</name>
    <filename>classGst_1_1EventQos.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>a5cbe21f1498f9cf434b9e1ea81e65b71</anchor>
      <arglist>(QOSType &amp;type, double &amp;proportion, Gst::ClockTimeDiff &amp;diff, Gst::ClockTime &amp;timestamp) const</arglist>
    </member>
    <member kind="function">
      <type>QOSType</type>
      <name>parse_type</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>a80443445a48ce2d9c7c1f106b61670fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_proportion</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>af22e9ab960011387e6e37942c18c948c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTimeDiff</type>
      <name>parse_diff</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>aeee6667e93a37dcc701d7351d9ffc04e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_timestamp</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>a4291b016af9b9f9da7a6beec8bc1e50c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventQos &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventQos.html</anchorfile>
      <anchor>ae4e68bbd987c5ba367c38fef83b241e9</anchor>
      <arglist>(QOSType type, double proportion, Gst::ClockTimeDiff diff, Gst::ClockTime timestamp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventReconfigure</name>
    <filename>classGst_1_1EventReconfigure.html</filename>
    <base>Gst::Event</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventReconfigure &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventReconfigure.html</anchorfile>
      <anchor>a216dd7dadf1ff3f49a85e6ed24cc29a1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventSeek</name>
    <filename>classGst_1_1EventSeek.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>aa85bbdde0291bbc9f6fecb3fd747da7d</anchor>
      <arglist>(double &amp;rate, Format &amp;format, SeekFlags &amp;flags, SeekType &amp;start_type, gint64 &amp;start, SeekType &amp;stop_type, gint64 &amp;stop) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_start</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>a9492c9ae49be6162ac4db99eb4306855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_rate</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>abecf9bb5cedc8616c040f617488ce370</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>a449bd8f4b301418019ee92b9ef6c13d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>parse_flags</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>a68bb53b6d35ffa243aac5335768f8c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SeekType</type>
      <name>parse_start_type</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>ae0120a0ef36d51e847acd3c36d4e835a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SeekType</type>
      <name>parse_stop_type</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>aa0f763ca0c24afbb1c421e86b58bdba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_stop</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>af783bb193ec484d03bbd3977cb878404</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventSeek &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventSeek.html</anchorfile>
      <anchor>a38bbd10df5789646ff7cdfbe18601e69</anchor>
      <arglist>(double rate, Format format, SeekFlags flags, SeekType start_type, gint64 start, SeekType stop_type, gint64 stop)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventSegment</name>
    <filename>classGst_1_1EventSegment.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Gst::Segment</type>
      <name>copy_segment</name>
      <anchorfile>classGst_1_1EventSegment.html</anchorfile>
      <anchor>a52ed69299dd824faedc9a4f37a32837b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventSegment &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventSegment.html</anchorfile>
      <anchor>abc233a53cae60c9c9eef38f48855f7e4</anchor>
      <arglist>(const Gst::Segment &amp;segment)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventSegmentDone</name>
    <filename>classGst_1_1EventSegmentDone.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventSegmentDone.html</anchorfile>
      <anchor>a19e9278382e76d678a9715d73b170d43</anchor>
      <arglist>(Gst::Format &amp;format, gint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1EventSegmentDone.html</anchorfile>
      <anchor>a6966819d057747938f9cd716be486c2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_position</name>
      <anchorfile>classGst_1_1EventSegmentDone.html</anchorfile>
      <anchor>ae0deed98c6ecbd70b552efb89f75d7c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventSegmentDone &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventSegmentDone.html</anchorfile>
      <anchor>a36c31492886b1631fb78998106639ba5</anchor>
      <arglist>(Gst::Format p1, gint64 position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventSinkMessage</name>
    <filename>classGst_1_1EventSinkMessage.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>parse_message</name>
      <anchorfile>classGst_1_1EventSinkMessage.html</anchorfile>
      <anchor>a71bcaf1969aa2d4a7ed01650404a9afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Message &gt;</type>
      <name>parse_message</name>
      <anchorfile>classGst_1_1EventSinkMessage.html</anchorfile>
      <anchor>abbf81eae52111befd4ae4d587fdbd4f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventSinkMessage &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventSinkMessage.html</anchorfile>
      <anchor>a3bc11f9e9d4cb64c8d6a59beec5cf40b</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Gst::Message &gt; &amp;message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventStep</name>
    <filename>classGst_1_1EventStep.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>ae1ba4cfc4073cfac9f814bb86d21166e</anchor>
      <arglist>(Gst::Format &amp;format, guint64 &amp;amount, double &amp;rate, bool &amp;flush, bool &amp;intermediate) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>parse_amount</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>a0a6cffc323e422373b9848a4f4fe9c81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>a344338456ee99742acb07460a229d57a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_rate</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>a6afe93c1cd54d94f7c56443a7354866e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_flush</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>a9d2742c2b36e32de10095978bf4c4cf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_intermediate</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>ae26744f2b4fab4fa1e8b9376759d1165</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventStep &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventStep.html</anchorfile>
      <anchor>a351022131a1e6bf1382aa2598cfc990f</anchor>
      <arglist>(Gst::Format format, guint64 amount, double rate, bool flush, bool intermediate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventStreamStart</name>
    <filename>classGst_1_1EventStreamStart.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_stream_id</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>a3c5351f6fc185da448a94042d5148655</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stream_flags</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>a99f83df40e3dd38d96b2a1dcaa50ed85</anchor>
      <arglist>(Gst::StreamFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>Gst::StreamFlags</type>
      <name>parse_stream_flags</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>a24a17cf0f806a26ee9dc50250a9a0a9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_group_id</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>ac58deb1a2dc7aa6bf961573dd11256b4</anchor>
      <arglist>(guint &amp;group_id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group_id</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>a77579d27c5f4f448880f9be457d3eca1</anchor>
      <arglist>(guint group_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventStreamStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventStreamStart.html</anchorfile>
      <anchor>ae62f7269737f4105f46e3bf5ddd5a66a</anchor>
      <arglist>(const Glib::ustring &amp;stream_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventTag</name>
    <filename>classGst_1_1EventTag.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>parse_tag_list</name>
      <anchorfile>classGst_1_1EventTag.html</anchorfile>
      <anchor>a1829a9065091acdc322d08e48736d985</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventTag &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventTag.html</anchorfile>
      <anchor>a7684e8002e6e017a6465d62d701ae60b</anchor>
      <arglist>(const Gst::TagList &amp;taglist)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventToc</name>
    <filename>classGst_1_1EventToc.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>aaa18581f93c9c8eddedb67974ab706aa</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Toc &gt; &amp;toc, bool &amp;updated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>a22b18c89e1d4f99f3109d85d266b33c3</anchor>
      <arglist>(Glib::RefPtr&lt; const Gst::Toc &gt; &amp;toc, bool &amp;updated) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Toc &gt;</type>
      <name>parse_toc</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>a99885a692b009d8c781aeca3928900b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Toc &gt;</type>
      <name>parse_toc</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>adbff51107d0cb57a7fc37b921fe36b4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_updated</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>a46ce45fd3fd2c5911ed92fe9a60b3eb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventToc &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventToc.html</anchorfile>
      <anchor>aa1527b0fdadb8d1ccb2abc549e97151e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Toc &gt; &amp;toc, bool updated)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::EventTocSelect</name>
    <filename>classGst_1_1EventTocSelect.html</filename>
    <base>Gst::Event</base>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_uid</name>
      <anchorfile>classGst_1_1EventTocSelect.html</anchorfile>
      <anchor>afc9942d42b5b0ad4cef529f9631f6b9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::EventTocSelect &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1EventTocSelect.html</anchorfile>
      <anchor>a3e45f643e1a83d6765b197bcf810e1ac</anchor>
      <arglist>(const Glib::ustring &amp;uid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Exception</name>
    <filename>classGst_1_1Exception.html</filename>
    <base protection="private">std::runtime_error</base>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classGst_1_1Exception.html</anchorfile>
      <anchor>a526e6cb3216729faad59a98bd669e030</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::FormatDefinition</name>
    <filename>classGst_1_1FormatDefinition.html</filename>
    <member kind="function">
      <type></type>
      <name>FormatDefinition</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>aa19a35517ab9a2aee660b365b192fc15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FormatDefinition</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>a8e06adbf7abb9a45c0a239e67c45ce51</anchor>
      <arglist>(const GstFormatDefinition *castitem)</arglist>
    </member>
    <member kind="variable">
      <type>Gst::Format</type>
      <name>value</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>ad859e727b3376e4e6e4c26bab486a3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>nick</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>a06dcc58fb07498ac2f14eb7b6b51585e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>description</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>a84f9fe07a59118df1966344a4cafb201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::QueryQuark</type>
      <name>quark</name>
      <anchorfile>classGst_1_1FormatDefinition.html</anchorfile>
      <anchor>a54042579178c68c9838154e3df7f9982</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Fourcc</name>
    <filename>classGst_1_1Fourcc.html</filename>
    <member kind="function">
      <type></type>
      <name>Fourcc</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>ac3eac2efda2be568cd46f1cb4468f4f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fourcc</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>ac164a0e075cd379a06bff7a0e47a2f7b</anchor>
      <arglist>(const Fourcc &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fourcc</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>a97d9c1006470136c1b7fd162adf2064a</anchor>
      <arglist>(char first, char second, char third, char fourth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fourcc</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>aac37d6c0fd7cb700ab3b4d9a702ee3e9</anchor>
      <arglist>(const Glib::ustring &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fourcc</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>a1c3b2fed49d7e5f9145cd67ec2a47779</anchor>
      <arglist>(guint32 fourcc)</arglist>
    </member>
    <member kind="function">
      <type>Fourcc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>a502da2c00b3f876eb7f5d3036ec1f915</anchor>
      <arglist>(const Fourcc &amp;src)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>first</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>acf91fd838bcfcd893b4f930b6d38354e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>second</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>a60af43e4884da0f93e29099213bd274f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>third</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>a7da1b41af8b6b32a3cf6039ddf25d076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fourth</name>
      <anchorfile>classGst_1_1Fourcc.html</anchorfile>
      <anchor>aafd90f49ff0154813ab92dbf318dfb4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Fraction</name>
    <filename>classGst_1_1Fraction.html</filename>
    <member kind="function">
      <type></type>
      <name>Fraction</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>ac7a70a40bc5339600fea9d7e1c3903fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fraction</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>a820856a52ba35c4c4985f63188c9eeef</anchor>
      <arglist>(const Fraction &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fraction</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>a424532fdba4c30598261baac8f51d9c9</anchor>
      <arglist>(int num, int denom)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fraction</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>a0d571dbba0dfd882a389e29f1d11bfcf</anchor>
      <arglist>(const Glib::ValueBase &amp;gst_fraction_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fraction</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>ac3f39158aad8c335a1bd605419fe6ea9</anchor>
      <arglist>(const GValue &amp;gst_fraction_value)</arglist>
    </member>
    <member kind="function">
      <type>Fraction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>a8683046631d9c40d26da624c1c20d551</anchor>
      <arglist>(const Fraction &amp;src)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>a7ee5ad361bcf864da23f067abea1980a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>denom</name>
      <anchorfile>classGst_1_1Fraction.html</anchorfile>
      <anchor>ae2a9e0172a6a3cf89e97cfeefac5f7d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::GhostPad</name>
    <filename>classGst_1_1GhostPad.html</filename>
    <base>Gst::Pad</base>
    <member kind="function">
      <type></type>
      <name>GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>aa3f315aa7f685a2f3b062b681416bb72</anchor>
      <arglist>(GhostPad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GhostPad &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>ad29867547f51ff27d6ea46326421ecb8</anchor>
      <arglist>(GhostPad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a4ee0845df21613e2ed31205454edfbbf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstGhostPad *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a02fd1255a4987e19b6aa6404fbe0add9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstGhostPad *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a0b55432e337f0f9475d2ccf797cb5e78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstGhostPad *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>af7c5151ad0cc4c29bc6fb50cf53b89d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_target</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a0201c47aa00dade75f52aa31482c53d8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;newtarget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_target</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>acf336bd7b880b5b0ff8c461e0c59eb18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_target</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a53b9f312527ebac8b8f067fb96dd8e8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>ae56099566cca149b14bd15f26f3b9d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GhostPad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a899dea10363c93dffa37ab85ddc422e3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;target, const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GhostPad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a1ae06654027f26b6cd5f931e8541b34c</anchor>
      <arglist>(PadDirection dir, const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GhostPad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a458f5417c9635c3cd35f6f1203a62273</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;target, const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GhostPad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a97d07ade86baeeeb7856910af0bc67bc</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a1eab907cef19cde945a44676fb4381bd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;target, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>ae38e08e601ab25becfb0a887154b468f</anchor>
      <arglist>(PadDirection direction, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a24bafdcc4d42ae8609c16288e76f1431</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;target, const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GhostPad</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>a6780457ef07af6857487ab52bf0b94bb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::GhostPad &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1GhostPad.html</anchorfile>
      <anchor>adbb36343ed09e5d9eaecd9eb4433aa4d</anchor>
      <arglist>(GstGhostPad *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Iterator</name>
    <filename>classGst_1_1Iterator.html</filename>
    <templarg>CppType</templarg>
    <base>Gst::IteratorBasic</base>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>a9c6cca7d8f06724f33ec5c19575045b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>abd346b50b1aadb1e775fecf4f32868e0</anchor>
      <arglist>(GstIterator *castitem, bool take_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>IteratorResult</type>
      <name>next</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>a17fc516301072322628e88d76b89ade6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CppType &gt;</type>
      <name>operator*</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>ad0b6de557a7392470a4e02ec8eaa6bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CppType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>a8422f47f752f7dc6e623311db4dfdced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Iterator&lt; CppType &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>a93e1e817a263bfcaff5f99014c69faac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator&lt; CppType &gt;</type>
      <name>operator++</name>
      <anchorfile>classGst_1_1Iterator.html</anchorfile>
      <anchor>a813e537bedab2632891bb3f4e726cd49</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::IteratorBase</name>
    <filename>classGst_1_1IteratorBase.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual IteratorResult</type>
      <name>next</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>aa2bca1f8592562294ba286491630b31d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resync</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>ae8390c4f49d6037d84ac233a0ab8daf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_start</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a7b4051ee6045f16a493bfcc123da7872</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_end</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>ab192af5c541703c74dacd3d17b1684f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a18a324e39c6e13854e25043f51873130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstIterator *</type>
      <name>cobj</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a67d25cf962dd0e490774ed79c2581899</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstIterator *</type>
      <name>cobj</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a998168a188e622b6e547b4ab6bcf9a11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IteratorBase</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>ac793f2db9ecd32335f01da6212a0aa73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IteratorBase</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>aafee32a42e9897b1b4e56524fb6abe66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IteratorBase</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a6f3fa0b874f6c34748297581e3d7f3a5</anchor>
      <arglist>(const IteratorBase&lt; CppType &gt; &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IteratorBase</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a2036381b52e5e434b9f2c766af6e8d5e</anchor>
      <arglist>(GstIterator *castitem, bool take_ownership=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IteratorBase&lt; CppType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1IteratorBase.html</anchorfile>
      <anchor>a408eab39e8a946bc33a84f65fb2c9288</anchor>
      <arglist>(const IteratorBase&lt; CppType &gt; &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::IteratorBasic</name>
    <filename>classGst_1_1IteratorBasic.html</filename>
    <templarg></templarg>
    <base>Gst::IteratorBase</base>
    <member kind="function">
      <type></type>
      <name>IteratorBasic</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a0184c2b5fa5daf9daa0a07a83e9090b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratorBasic</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a6aadeccece219bef52fba9a5226c2d46</anchor>
      <arglist>(GstIterator *castitem, bool take_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a5eccf13f0aa9ead6171df622a7781e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>operator*</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a83f5fabd1b7828dccc63bb09277c9a3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CppType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>aaf30fc2a0b6f76708a9455d1111a739b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IteratorBasic&lt; CppType &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a0ea47943ed3c4237fc100fd792baaabe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IteratorBasic&lt; CppType &gt;</type>
      <name>operator++</name>
      <anchorfile>classGst_1_1IteratorBasic.html</anchorfile>
      <anchor>a998fde0a40d43cc5f2429ba08c0a13bc</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::LibraryError</name>
    <filename>classGst_1_1LibraryError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eae12b739516c56a69c7c4843bf14b4ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eaa2dfe32788715d3dc11d7b76056414b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea370b2c19891691e41dda55cbcb3ad9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTDOWN</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eac971a98dd4b5e14c115a63a17728fb70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTINGS</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea6bea3ce6c59ceae21631d063ee4d7deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODE</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eacefe90547c7bcbfe4cfdaacf923b8dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea168e3bdea4c28b8a7030d93defebd41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eae12b739516c56a69c7c4843bf14b4ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eaa2dfe32788715d3dc11d7b76056414b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INIT</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea370b2c19891691e41dda55cbcb3ad9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTDOWN</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eac971a98dd4b5e14c115a63a17728fb70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTINGS</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea6bea3ce6c59ceae21631d063ee4d7deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODE</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748eacefe90547c7bcbfe4cfdaacf923b8dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>af3ca6652fe52cf619ce7d47672f8748ea168e3bdea4c28b8a7030d93defebd41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LibraryError</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>a1d91da50b1cce509dceab17e6c240225</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LibraryError</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>a970c1e462ea44ea71a3bf37f532b6f26</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1LibraryError.html</anchorfile>
      <anchor>a8e3507398efc2a1206371d85c8fa3288</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MapInfo</name>
    <filename>classGst_1_1MapInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>MapInfo</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a9e5db2db68746aabedced448c761409e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapInfo</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a04bdf0a5a69dd2d7ec696995fe2613f6</anchor>
      <arglist>(const GstMapInfo &amp;castitem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapInfo</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a2855dd9675909fa71d3a3d812923a0e6</anchor>
      <arglist>(MapInfo &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MapInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a657ec95400d772babd4b03e6084a6ff5</anchor>
      <arglist>(MapInfo &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a6e7551c4e5c4d50195f84919ed894268</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint8 *</type>
      <name>get_data</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a09ebcc7d5ca8c98e472f1decfdd74ac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const guint8 *</type>
      <name>get_data</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a7abc9e41ccfa7b489bc6ef47fdaf2c69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_maxsize</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a2e6ea37e342f1b27a225c4124191d928</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_size</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a44a1220c1834e9e30149291b7f73a7ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>get_memory</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a223c8857c9b1849a230e6353615d7636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Memory &gt;</type>
      <name>get_memory</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a71d6e3db8208f94431ced8caae7e2dee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMapInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a823c0859312efd510c331ba7dd793759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstMapInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1MapInfo.html</anchorfile>
      <anchor>a67efb0d8ab2a0b7046946e1d5615a283</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Memory</name>
    <filename>classGst_1_1Memory.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a844a84d24cbd3c8b04839ac7b445804e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a7a85df63f90c25f56a1637514e58d300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMemory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a9c78518e7da6648f73575d7e498a8fe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstMemory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>ae0cbfcc866e490cf2b0d2bef2ffc984b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMemory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>ac4c5ebb0d6e71dcf78829e9b9dc759ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Memory</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>aa3fa1bbe5d2b38b424907b52591293a0</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Memory</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a54ff9001a525582ac258ef673d6569d3</anchor>
      <arglist>(const Memory &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Memory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a514c4f5cd4c36006720e021a18c9c1c8</anchor>
      <arglist>(const Memory &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_maxsize</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a63a743b4f48fe24b386c042d9a210348</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_align</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a1723e6b95a7de37226281ad89239b222</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_offset</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a281bd714022dfd1456e311e7637257b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_size</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a20eb445628da613bb7d7ec9d88d1759c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a3d68c237c61476f679e61bd2c64779cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Memory &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a1da4192fb60a0e23364092cd60d90d8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Allocator &gt;</type>
      <name>get_allocator</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a57c85e41f63373f3bd694b934e0c1d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Allocator &gt;</type>
      <name>get_allocator</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a29c989f1e3bfac65d501e5d1a911ad65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_type</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>aa3a281369457f6481efad556126e9f8d</anchor>
      <arglist>(const Glib::ustring &amp;mem_type) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>share</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>aea71b2358059d521ec4d87dd1c97ad80</anchor>
      <arglist>(gssize offset, gssize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>add28b4e1ee5d83b8295a398248b456c4</anchor>
      <arglist>(gssize offset, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_span</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a5a36786e3dd0da76c86e55361d489ece</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Memory &gt; &amp;mem2, gsize &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a4841fccd47f96aa59a0f4245699cbaca</anchor>
      <arglist>(Gst::MapInfo &amp;info, Gst::MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>aafaca123c4e8f40dbb89248ebcbc5eb4</anchor>
      <arglist>(Gst::MapInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a0b9f275849a2d2bb1a2d6d8f11d64b81</anchor>
      <arglist>(gssize offset, gssize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a6e96417c35ee980f879df8c3bf94f7c2</anchor>
      <arglist>(Gst::MemoryFlags flags, const Glib::RefPtr&lt; Gst::Allocator &gt; &amp;allocator, const Glib::RefPtr&lt; Gst::Memory &gt; &amp;parent, gsize maxsize, gsize align, gsize offset, gsize size)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_sizes</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a43a6eb16452c0f2b2c2ec32d97d0ba91</anchor>
      <arglist>(gsize &amp;offset, gsize &amp;maxsize)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>make_mapped</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>afc72f8eedd5621272a214781e31f870f</anchor>
      <arglist>(Gst::MapInfo &amp;info, Gst::MapFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Memory &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a9829c5e885aeff906ccf1f655c9956da</anchor>
      <arglist>(Gst::MemoryFlags flags, gpointer data, gsize maxsize, gsize offset, gsize size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a250f4c42247a0f029709fa8235a782b4</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Memory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Memory.html</anchorfile>
      <anchor>a4bd421b7b249c47471421f52509a0447</anchor>
      <arglist>(GstMemory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Message</name>
    <filename>classGst_1_1Message.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a2099a4607a2a0a99b505cf93ae98b119</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a5004567f1a590766f568b49969704d82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMessage *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a8248f9cc16be7563206c51537509c17c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstMessage *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>af3fe9955e98cca87b33fd5b81c99c94d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMessage *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a592bb202c83f0ecf9fd61f5470f406bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a56d79e13d30772238429e2359607a225</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Message</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>af5331ae29329d3231b3c42e8f29d0682</anchor>
      <arglist>(const Message &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Message &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a8e6fcde0a19ccac0e92bb9d078f082bf</anchor>
      <arglist>(const Message &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>get_structure</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a2dc80e40445e1b7c26878fd1c28f5cd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>ad46991a9d4c733c7b78bd29f2b23e861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_seqnum</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a098b2a7a73657f86f22807d8108e3641</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seqnum</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a1b4c39f3df4d60a7479a04c4eac4f655</anchor>
      <arglist>(guint32 seqnum)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a79f4b86503197f81ac286d8ef43271f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>get_message_type</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a56ac3c85e67889669ce416a6026e8030</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_timestamp</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>acbefe2a6c8924456d17db5880c36b9d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Object &gt;</type>
      <name>get_source</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a89fd6db00c77256bf63e4c066af2313e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Object &gt;</type>
      <name>get_source</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a335af95da5709caaf1376cc4dfb7c7ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_name</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a480f1e5a63c61e2f03d7d3a3c21185e9</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a489240a36ee59f33a60cf262063ffc08</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Message &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Message.html</anchorfile>
      <anchor>a1163c59222c7736771783bdb2fb02693</anchor>
      <arglist>(GstMessage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageApplication</name>
    <filename>classGst_1_1MessageApplication.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageApplication &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageApplication.html</anchorfile>
      <anchor>a93830bc2d318960dde15fb965cfd13a2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::Structure &amp;&amp;structure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageApplication &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageApplication.html</anchorfile>
      <anchor>abff9c9184a4923a9b297fb43fc619531</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Gst::Structure &amp;structure)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageAsyncDone</name>
    <filename>classGst_1_1MessageAsyncDone.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_running_time</name>
      <anchorfile>classGst_1_1MessageAsyncDone.html</anchorfile>
      <anchor>a63b12281175501078f9ec09b34fccd05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageAsyncDone &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageAsyncDone.html</anchorfile>
      <anchor>a329f36f97bd2e29ebd2e538ac0e9a72d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::ClockTime running_time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageAsyncStart</name>
    <filename>classGst_1_1MessageAsyncStart.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageAsyncStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageAsyncStart.html</anchorfile>
      <anchor>a8a16fd7b06cc6d477958a5ba21b7eecb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageBuffering</name>
    <filename>classGst_1_1MessageBuffering.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>int</type>
      <name>parse_buffering</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>ac0071105110ebca5856c7422e8e8ef09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stats</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>af82b40beb44dcf1e0d575ac7566466f8</anchor>
      <arglist>(BufferingMode mode, int avg_in, int avg_out, gint64 buffering_left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse_stats</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>af99d562e94c6752b23f2c43308e81324</anchor>
      <arglist>(BufferingMode &amp;mode, int &amp;avg_in, int &amp;avg_out, gint64 &amp;buffering_left) const</arglist>
    </member>
    <member kind="function">
      <type>BufferingMode</type>
      <name>parse_stats_buffering_mode</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>a654a21b114ffb4db2f35790fcfe59ab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_stats_avg_in</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>ac482b0b3ebad8bdb662a86704591b376</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_stats_avg_out</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>ac1fbd7cd03b9b6ff782433a905804869</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_stats_buffering_left</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>afbe3998b27f9dc90b9e8365a4f981af1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageBuffering &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageBuffering.html</anchorfile>
      <anchor>a764f300a3cbe481f067806b22b95b451</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, int percent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageClockLost</name>
    <filename>classGst_1_1MessageClockLost.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>parse_clock_lost</name>
      <anchorfile>classGst_1_1MessageClockLost.html</anchorfile>
      <anchor>a6f095b26c45d54ddc0a6151c5acc4fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>parse_clock_lost</name>
      <anchorfile>classGst_1_1MessageClockLost.html</anchorfile>
      <anchor>adfba916c547474cc30e2d60327ae0484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageClockLost &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageClockLost.html</anchorfile>
      <anchor>a2d34de5cd98b6bb47dbbc6969fa1ffe3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageClockProvide</name>
    <filename>classGst_1_1MessageClockProvide.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageClockProvide.html</anchorfile>
      <anchor>a55bad024477084f5763b466d90781c20</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock, bool &amp;ready) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>parse_clock_provide</name>
      <anchorfile>classGst_1_1MessageClockProvide.html</anchorfile>
      <anchor>a8469edd58db987a353bca2118917a42f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>parse_clock_provide</name>
      <anchorfile>classGst_1_1MessageClockProvide.html</anchorfile>
      <anchor>a708fe2b17aa1ac2710c66e616cbdb6d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_ready</name>
      <anchorfile>classGst_1_1MessageClockProvide.html</anchorfile>
      <anchor>a88b72c49ad071d34baf99b33db42af35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageClockProvide &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageClockProvide.html</anchorfile>
      <anchor>aad0ea26c12b35447afe6e86ad00660bd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock, bool ready)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageCustom</name>
    <filename>classGst_1_1MessageCustom.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageCustom &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageCustom.html</anchorfile>
      <anchor>a65aa036bfc131217d4bbd298f5551b50</anchor>
      <arglist>(MessageType type, const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::Structure &amp;structure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageCustom &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageCustom.html</anchorfile>
      <anchor>a089f1d0ff7008c9e48b4eb6cbde9e74f</anchor>
      <arglist>(MessageType type, const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageDurationChanged</name>
    <filename>classGst_1_1MessageDurationChanged.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageDurationChanged &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageDurationChanged.html</anchorfile>
      <anchor>a29b01ebffad15e21b03bbb8fa2ee0329</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageElement</name>
    <filename>classGst_1_1MessageElement.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageElement &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageElement.html</anchorfile>
      <anchor>ae2db31534d56891565a0f78ea92f9367</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::Structure &amp;&amp;structure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageElement &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageElement.html</anchorfile>
      <anchor>aaa60afaa5946a511e30c2f4ed32c8500</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageElement &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageElement.html</anchorfile>
      <anchor>a5d4f2c2e5c5f257153638589962b097b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Gst::Structure &amp;structure)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageEos</name>
    <filename>classGst_1_1MessageEos.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageEos &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageEos.html</anchorfile>
      <anchor>add199609fc3b85598d82364021a9911d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageError</name>
    <filename>classGst_1_1MessageError.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageError.html</anchorfile>
      <anchor>a4b016baf233b1b34f58fbf0e89b84a6a</anchor>
      <arglist>(Glib::Error &amp;error, std::string &amp;debug) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::Error</type>
      <name>parse_error</name>
      <anchorfile>classGst_1_1MessageError.html</anchorfile>
      <anchor>a404166b3dfddff9f533ac277ca71454f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parse_debug</name>
      <anchorfile>classGst_1_1MessageError.html</anchorfile>
      <anchor>af72a3e15afe80fa3a6c262959a5c1c18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageError &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageError.html</anchorfile>
      <anchor>a332a4a040459123bdaa5b79621a983f4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::Error &amp;error, const std::string &amp;debug)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageHaveContext</name>
    <filename>classGst_1_1MessageHaveContext.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Context &gt;</type>
      <name>parse_have_context</name>
      <anchorfile>classGst_1_1MessageHaveContext.html</anchorfile>
      <anchor>adbe5d85adb78dbac5b49c7e215daeead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Context &gt;</type>
      <name>parse_have_context</name>
      <anchorfile>classGst_1_1MessageHaveContext.html</anchorfile>
      <anchor>ad1852b5eb30fd88058f4e888f5cf5c08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageHaveContext &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageHaveContext.html</anchorfile>
      <anchor>ae24ee511d0958c9f057613ab2fc5ce95</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::RefPtr&lt; Gst::Context &gt; &amp;context)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageInfo</name>
    <filename>classGst_1_1MessageInfo.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageInfo.html</anchorfile>
      <anchor>a0da9abf5563fe77135fc676624c337c0</anchor>
      <arglist>(Glib::Error &amp;error, std::string &amp;debug) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::Error</type>
      <name>parse_error</name>
      <anchorfile>classGst_1_1MessageInfo.html</anchorfile>
      <anchor>a30eea20fa53966ca8b418218d8fdbaf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parse_debug</name>
      <anchorfile>classGst_1_1MessageInfo.html</anchorfile>
      <anchor>a58d3f980d3f4bd309e63872cd28708dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageInfo &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageInfo.html</anchorfile>
      <anchor>a3c834e87599cd5b7e9ce43e1caaf999a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::Error &amp;error, const std::string &amp;debug)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageLatency</name>
    <filename>classGst_1_1MessageLatency.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageLatency &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageLatency.html</anchorfile>
      <anchor>a188929a3c7cfa78f0281fbe5224a140d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageNeedContext</name>
    <filename>classGst_1_1MessageNeedContext.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageNeedContext.html</anchorfile>
      <anchor>a01e08321b01cd663e43c51b601983442</anchor>
      <arglist>(Glib::ustring &amp;context_type) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageNeedContext &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageNeedContext.html</anchorfile>
      <anchor>a9bf315650e27132904a4468b88ebb868</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::ustring &amp;context_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageNewClock</name>
    <filename>classGst_1_1MessageNewClock.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>parse_new_clock</name>
      <anchorfile>classGst_1_1MessageNewClock.html</anchorfile>
      <anchor>a878124994644725fb8de6066b4b90875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>parse_new_clock</name>
      <anchorfile>classGst_1_1MessageNewClock.html</anchorfile>
      <anchor>a78f85ca213754c47dc5d5bda57ff8028</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageNewClock &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageNewClock.html</anchorfile>
      <anchor>a2329821e559d086abf3bfc19171cc96c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageProgress</name>
    <filename>classGst_1_1MessageProgress.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageProgress.html</anchorfile>
      <anchor>a30d780d971c795edd6f55942f3092606</anchor>
      <arglist>(Gst::ProgressType &amp;type, Glib::ustring &amp;code, Glib::ustring &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ProgressType</type>
      <name>parse_type</name>
      <anchorfile>classGst_1_1MessageProgress.html</anchorfile>
      <anchor>a45d33d03ad7c88ad0df68737164f185a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_code</name>
      <anchorfile>classGst_1_1MessageProgress.html</anchorfile>
      <anchor>a986b04917c751882a2e79b2e257778a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_text</name>
      <anchorfile>classGst_1_1MessageProgress.html</anchorfile>
      <anchor>a55cff17c90e9309f17b3f6e705f885b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageProgress &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageProgress.html</anchorfile>
      <anchor>ae8a69a3dbf0649057899cca247695ff3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::ProgressType type, const Glib::ustring &amp;code, const Glib::ustring &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageQos</name>
    <filename>classGst_1_1MessageQos.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>set_values</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>ad78bcb6f69975aeed201bf4574ae5be4</anchor>
      <arglist>(gint64 jitter, double proportion, gint quality)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stats</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>af82cc06a25553eee0eb793ab00696d62</anchor>
      <arglist>(Gst::Format format, guint64 processed, guint64 dropped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>ab3014ebe869e2c19647a101aae319b9d</anchor>
      <arglist>(bool &amp;live, guint64 &amp;running_time, guint64 &amp;stream_time, guint64 &amp;timestamp, guint64 &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse_values</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>ae6ebcfd7e70e9e3dc728d0322e362259</anchor>
      <arglist>(gint64 &amp;jitter, double &amp;proportion, gint &amp;quality) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse_stats</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>a5f871fab32be38fc10a1ea49d98a3f51</anchor>
      <arglist>(Gst::Format &amp;format, guint64 &amp;processed, guint64 &amp;dropped) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageQos &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageQos.html</anchorfile>
      <anchor>aacc4dc705fe31dca92cc6e64d6c0c52a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, bool live, guint64 running_time, guint64 stream_time, guint64 timestamp, guint64 duration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageRequestState</name>
    <filename>classGst_1_1MessageRequestState.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Gst::State</type>
      <name>parse_state</name>
      <anchorfile>classGst_1_1MessageRequestState.html</anchorfile>
      <anchor>ae46549f1da68e0682fe5bbe81e72c8ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageRequestState &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageRequestState.html</anchorfile>
      <anchor>a2421a527b9ffe0891f7bbcca30448fea</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::State state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageResetTime</name>
    <filename>classGst_1_1MessageResetTime.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>parse_running_time</name>
      <anchorfile>classGst_1_1MessageResetTime.html</anchorfile>
      <anchor>ac211dc4306b04dd8dbf180cea955259c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageResetTime &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageResetTime.html</anchorfile>
      <anchor>a09de263c68a0ab99e8cbf3d20403d29d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::ClockTime running_time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageSegmentDone</name>
    <filename>classGst_1_1MessageSegmentDone.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageSegmentDone.html</anchorfile>
      <anchor>a6057db78448fb7f7dda11ca95a954cb3</anchor>
      <arglist>(Format &amp;format, gint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_position</name>
      <anchorfile>classGst_1_1MessageSegmentDone.html</anchorfile>
      <anchor>a4311a82702e4158afa6b2b6dc5e23162</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1MessageSegmentDone.html</anchorfile>
      <anchor>ae58d00802e97d02fa187da6ad873e6b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageSegmentDone &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageSegmentDone.html</anchorfile>
      <anchor>a51c5381fd3c54f8e9ee3cddee5997ebe</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Format format, gint64 position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageSegmentStart</name>
    <filename>classGst_1_1MessageSegmentStart.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageSegmentStart.html</anchorfile>
      <anchor>a65a81301d3c8eac3a8879ca72ad705dd</anchor>
      <arglist>(Format &amp;format, gint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_position</name>
      <anchorfile>classGst_1_1MessageSegmentStart.html</anchorfile>
      <anchor>a5a176c4106146a86c5b185635ed63510</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1MessageSegmentStart.html</anchorfile>
      <anchor>aba48cdaed6b5d7135986533756f59321</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageSegmentStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageSegmentStart.html</anchorfile>
      <anchor>adb37e7fb2b57da4b32e523185a40b658</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Format format, gint64 position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStateChanged</name>
    <filename>classGst_1_1MessageStateChanged.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageStateChanged.html</anchorfile>
      <anchor>ab0783b598daa1dc567faccceada32d02</anchor>
      <arglist>(State &amp;oldstate, State &amp;newstate, State &amp;pending) const</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>parse_new_state</name>
      <anchorfile>classGst_1_1MessageStateChanged.html</anchorfile>
      <anchor>aaf8ad6699c882b8375b77a46f43e9698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>parse_old_state</name>
      <anchorfile>classGst_1_1MessageStateChanged.html</anchorfile>
      <anchor>a019638bc9702114ff025ea89dd09e906</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>parse_pending_state</name>
      <anchorfile>classGst_1_1MessageStateChanged.html</anchorfile>
      <anchor>af6fb5dfb61a53ab544501750010533af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStateChanged &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStateChanged.html</anchorfile>
      <anchor>ac7e5a3c941c69107fee7154ec1a680e1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, State oldstate, State newstate, State pending)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStateDirty</name>
    <filename>classGst_1_1MessageStateDirty.html</filename>
    <base>Gst::Message</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStateDirty &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStateDirty.html</anchorfile>
      <anchor>a9a4a28fbe360690214f2e373ac99744d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStepDone</name>
    <filename>classGst_1_1MessageStepDone.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a25b1f2cf1bfb406ca0bdea2eead60617</anchor>
      <arglist>(Gst::Format &amp;format, guint64 &amp;amount, double &amp;rate, bool &amp;flush, bool &amp;intermediate, guint64 &amp;duration, bool &amp;eos) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>parse_duration</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>ac2217741c1195b9f70ff21263539ed40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a2c5c14f9bb8a571fce9a7fde8fd34354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>parse_amount</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>aec1f5e5d14a4baa46a7e15e824a733de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_rate</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>ae55a90f025a66e8e42595a2752c0a8f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_flush</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a08dcd8bfb53884e0d6c5a1dbaeb57e01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_intermediate</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a6bda9309f68f780b806ac2cad327b01f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_eos</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a10f4e3503ab647a2518542d6f63d88e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStepDone &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStepDone.html</anchorfile>
      <anchor>a3cbf1a5bac6351fe551cc55b4c1e58c8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::Format format, guint64 amount, double rate, bool flush, bool intermediate, guint64 duration, bool eos)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStepStart</name>
    <filename>classGst_1_1MessageStepStart.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a92696256029b22086b7253a78f6f65d2</anchor>
      <arglist>(bool &amp;active, Gst::Format &amp;format, guint64 &amp;amount, double &amp;rate, bool &amp;flush, bool &amp;intermediate) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>parse_amount</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a09d3531ad75e66326c29ecef03a4e097</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_active</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a28b8231e5a1a1bd1d2656216248ab80e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a86e05528c52b5ce79f311f721bb2c238</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_rate</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a926c556c4fe6c5cc0158d77e269e9113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_flush</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>aafd42c408972dc111f161d82d8daa43f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_intermediate</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>ad0072b36f89d2d048f642f32f2060751</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStepStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStepStart.html</anchorfile>
      <anchor>a85bd066cbd71f952c8fcc9d316ae81ec</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, bool active, Gst::Format format, guint64 amount, double rate, bool flush, bool intermediate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStreamStart</name>
    <filename>classGst_1_1MessageStreamStart.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>set_group_id</name>
      <anchorfile>classGst_1_1MessageStreamStart.html</anchorfile>
      <anchor>a6842dd55fa3307f5e88ce493f91db9f8</anchor>
      <arglist>(guint group_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_group_id</name>
      <anchorfile>classGst_1_1MessageStreamStart.html</anchorfile>
      <anchor>a5d247b9b4bda6908a3885406c264ae24</anchor>
      <arglist>(guint &amp;group_id) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStreamStart &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStreamStart.html</anchorfile>
      <anchor>a34ba6a4384ed91d8370d7ea50c4ebd2e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStreamStatus</name>
    <filename>classGst_1_1MessageStreamStatus.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>set_object</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>af98a94ce3a021d0462c5f43d2e6027db</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>af4aacc88bf2235395af74c9a646a928d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>a2e3e894e54d8e6e961bdffd5c62b1ad5</anchor>
      <arglist>(Gst::StreamStatusType &amp;type, Glib::RefPtr&lt; Gst::Element &gt; &amp;owner) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::StreamStatusType</type>
      <name>parse_type</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>a5aefc8184bd6f729cd13032e56a32a02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>parse_owner</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>ae3a5c5e64a7fcaa764e30ac390f09bae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStreamStatus &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStreamStatus.html</anchorfile>
      <anchor>a3aae2bfc6e279a773f3d2d43e1d7e8bf</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::StreamStatusType type, const Glib::RefPtr&lt; Gst::Element &gt; &amp;owner)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageStructureChange</name>
    <filename>classGst_1_1MessageStructureChange.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageStructureChange.html</anchorfile>
      <anchor>ac6e7a28303887bd054b521a327379edf</anchor>
      <arglist>(Gst::StructureChangeType &amp;type, Glib::RefPtr&lt; Gst::Element &gt; &amp;owner, bool &amp;busy) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::StructureChangeType</type>
      <name>parse_type</name>
      <anchorfile>classGst_1_1MessageStructureChange.html</anchorfile>
      <anchor>a8b37868bb7532be2e70ce5066abce445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>parse_owner</name>
      <anchorfile>classGst_1_1MessageStructureChange.html</anchorfile>
      <anchor>a311ad3f2d10fb2d9966b91afe64bc130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_busy</name>
      <anchorfile>classGst_1_1MessageStructureChange.html</anchorfile>
      <anchor>a9d1f1ab06c7e3631962ce7a5977865e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageStructureChange &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageStructureChange.html</anchorfile>
      <anchor>aff3165ff7f0e014d0791912aec7c461b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, Gst::StructureChangeType type, const Glib::RefPtr&lt; Gst::Element &gt; &amp;owner, bool busy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageTag</name>
    <filename>classGst_1_1MessageTag.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>parse_tag_list</name>
      <anchorfile>classGst_1_1MessageTag.html</anchorfile>
      <anchor>a6cbe62dc839b3dfa74c88d3db3aa80d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageTag &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageTag.html</anchorfile>
      <anchor>a54183c97b1c2947bc877f32639a70f1f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Gst::TagList &amp;taglist)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageToc</name>
    <filename>classGst_1_1MessageToc.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageToc.html</anchorfile>
      <anchor>a961c45982412e8dc6b45e8558bf0ec95</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Toc &gt; &amp;toc, bool &amp;updated) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageToc &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageToc.html</anchorfile>
      <anchor>adaf201cf7eedaf81ecc7a2ad1daf4c99</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::RefPtr&lt; Gst::Toc &gt; &amp;toc, bool updated)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MessageWarning</name>
    <filename>classGst_1_1MessageWarning.html</filename>
    <base>Gst::Message</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1MessageWarning.html</anchorfile>
      <anchor>a75293fa17f8fa07a3f0b4d6687c24d06</anchor>
      <arglist>(Glib::Error &amp;error, std::string &amp;debug) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::Error</type>
      <name>parse_error</name>
      <anchorfile>classGst_1_1MessageWarning.html</anchorfile>
      <anchor>a9e1544714fe5b7fbe5efa3c94487d131</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>parse_debug</name>
      <anchorfile>classGst_1_1MessageWarning.html</anchorfile>
      <anchor>aa0a54998c947ad91aa62b1625ab65337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::MessageWarning &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1MessageWarning.html</anchorfile>
      <anchor>a49876099c5002226a10b24f5a17b7679</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;src, const Glib::Error &amp;error, const std::string &amp;debug)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::MiniObject</name>
    <filename>classGst_1_1MiniObject.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotFinalizer</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>aaf54e796d4c1d985d9e9f36c27aaac0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a464d71a821944237d053b9494782e128</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a1946d3fbaf972906211c47eb7cffd11d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMiniObject *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>ae94fda9a1f137629b5e2e827bea75b08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstMiniObject *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a17493d7c362acbbe26c2c201f3d9ee84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstMiniObject *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>af923b7ca703939fce2210fa40ac78b16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MiniObject</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a1b87e56eeae583af8e16b2892fbcf4ce</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MiniObject</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a15ae36653947b4e3a3d60a008fc71c7b</anchor>
      <arglist>(const MiniObject &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MiniObject &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a217d2040d40f2f9586f1c0cbbf324ddb</anchor>
      <arglist>(const MiniObject &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MiniObject</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>ae90229dda07195e7b0a10a69f08cee53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>aea7d25b9d49ef944bc94bfe4a190885b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>ae0c291f0989acbe9083755aeaa995ea1</anchor>
      <arglist>(const guint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_refcount</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>aa0064361def478a0d642d66a095f45c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_lockstate</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>afae66f78abe7c10b8f885368ebb7c319</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lock</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>aad5ba3f0085198bcca37d8e57f0d3c4d</anchor>
      <arglist>(LockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>afbdf917368edf5ea0ee8cac6482d74b5</anchor>
      <arglist>(LockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_writable</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>acaed2eddf2838dfbb544d65b37fdf6e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; MiniObject &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>aaa082ae18e7f378f59156da600d0f9c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_qdata</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a791442ba75dad37af2354d0d72e83229</anchor>
      <arglist>(GQuark quark, QuarkData *data)</arglist>
    </member>
    <member kind="function">
      <type>QuarkData *</type>
      <name>get_qdata</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>ada6175a263b84c230b256e96b5cb7088</anchor>
      <arglist>(GQuark quark) const</arglist>
    </member>
    <member kind="function">
      <type>QuarkData *</type>
      <name>steal_qdata</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>adc97e339061f89323ca099a6889b74bf</anchor>
      <arglist>(GQuark quark)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_finalize_notifier</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a09152ec3b8558cbea3bbd2faed65037e</anchor>
      <arglist>(const SlotFinalizer &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_finalize_notifier</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a6742cd5c88ae7aa9cb439060557cd770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>ae5e12067f87b9ac8f27c6267ebe15259</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::MiniObject &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1MiniObject.html</anchorfile>
      <anchor>a8498c52b750a4114b6d97d5d79842a14</anchor>
      <arglist>(GstMiniObject *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Navigation</name>
    <filename>classGst_1_1Navigation.html</filename>
    <member kind="function">
      <type></type>
      <name>Navigation</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>ad01f63afcd1d773c82e63ab32835d0c6</anchor>
      <arglist>(Navigation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Navigation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>ad2b5137e03e872b3eb66e187c6370c24</anchor>
      <arglist>(Navigation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Navigation</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>ac275889423e973a38ff33e5d3c1c5da9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstNavigation *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a5e13c4cd13e2a470cee2eb309d9e9fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstNavigation *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a60c6de23d572fe239859fc02291f8fc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_event</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a850b60ee3bab6b61b73011b23cb4419d</anchor>
      <arglist>(Gst::Structure &amp;structure)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_key_event</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>aecf2ee9a41b73d754324cf173da592ca</anchor>
      <arglist>(const Glib::ustring &amp;event, const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_mouse_event</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>ace7ce1be358bd73693322f3e8126b47c</anchor>
      <arglist>(const Glib::ustring &amp;event, int button, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_command</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a05d8729ba22810f95c58ed074aa4c6cf</anchor>
      <arglist>(Gst::NavigationCommand command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>send_event_vfunc</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a22dcc490c3f5b1c4d91b8f3d8d66818a</anchor>
      <arglist>(Gst::Structure &amp;&amp;structure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a67e015e6066474ef7954d7742ecb8576</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>adedd64d18e5ce9166c2bbf88b2edeb87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Navigation</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a33bcdad2e6c8ec3f99a16068557bd53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Navigation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Navigation.html</anchorfile>
      <anchor>a6e929595e5b1e03af7c7ae1fa0d04065</anchor>
      <arglist>(GstNavigation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::NetClientClock</name>
    <filename>classGst_1_1NetClientClock.html</filename>
    <base>Gst::SystemClock</base>
    <member kind="function">
      <type></type>
      <name>NetClientClock</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a66f6f7af4018de083d12825f0bd6eb18</anchor>
      <arglist>(NetClientClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NetClientClock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>afe238751a875672e2addf8d931d81d52</anchor>
      <arglist>(NetClientClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NetClientClock</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a81da6a747e518a8ec210df6028f239f6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstNetClientClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>abf254138104e282062244ba8f435a9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstNetClientClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a798ce67f0b8e72c6c176fc9ac83a4de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstNetClientClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>ac95b2520cb1122c9a474637f19dd2c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_address</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a3ce03b56ece9f6bff290f909146278fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_address</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>aa8b9932d55e9ad3c77e1f09f5b7e37fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_base_time</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a8f163dee3ae0d2cc6c2c8434c276298c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gst::Bus &gt; &gt;</type>
      <name>property_bus</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a53b9b08b7304f706ee050333399a18d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Bus &gt; &gt;</type>
      <name>property_bus</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a009dfe7a2e24a17822b077b98d85ab68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Clock &gt; &gt;</type>
      <name>property_internal_clock</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a54f0fb61240ae59ccb27c16fcf972a13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_minimum_update_interval</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a15b5228bc32186a06d55f535e4688ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_minimum_update_interval</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a86dca2fede2351596d75890d4930200a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_port</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>ae3178e35fdfdc63303a07a461f0972bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_port</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>aad6af0a9fe556edc086f380a0774c4b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_round_trip_limit</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a7ff877db3e626aef67ee6b1ae205f8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_round_trip_limit</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a0d193569870e253796bd2e852e885215</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a2999e7b2163686a03a086d126570ff86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NetClientClock &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>ac45ffcd61ad305029cdddbb72f2a27d6</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;remote_address, int remote_port, Gst::ClockTime base_time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NetClientClock</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a3e5d9af7e2e85d81a7178823110f4d45</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;address, int remote_port, Gst::ClockTime base_time)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::NetClientClock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1NetClientClock.html</anchorfile>
      <anchor>a63b555f0263434a994d348dc784d1fac</anchor>
      <arglist>(GstNetClientClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Object</name>
    <filename>classGst_1_1Object.html</filename>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a81151161e4abf313e76ab35fa73d1293</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>af3b8964b21574cae10f31d80061c7e40</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Object</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>ad4ecd638aea2e21916e2e21429eef97a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstObject *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a3d889e949c76aa3ab4490026d6aca8ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstObject *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>ad6a4514f948551dcc2e45b3636b490fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstObject *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a63d7202d3eb47c81ffc3ac16a895e9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_element</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>ae96d8781fb1614a5a97e2a6f39e823b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_element_factory</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a906d1bd351d5f20a38964d6ab9a2c845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pad</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>acb1cbea0f958a71af207f46d8b4ff5fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pad_template</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a8b577e25de7574fa1c0b98db8072bc47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_bin</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>afc51ab9f7e9c1b002502bcbcb747fa78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>aac824b4d7a69a1068ed3614c8c0bdd24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_name</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a91745b6c35472bc28fde65c770444478</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>ab8a7e72f2bf6539244668d7238d46159</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a09a2f2fcfb0fabee2597b34a0b7c3fe4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Object &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a303610665c252f733808e5653703f6a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Object &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a8f8dc04241bee2beb2e3b8e0887bf240</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unparent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a45b87529c337e40f03e34bca450e41bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_control_rate</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a71dd4f21c9c28e44bbb102d4020d6fb9</anchor>
      <arglist>(Gst::ClockTime control_rate)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_control_rate</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a0f61c7a77c8915f25ea9630e316e64d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>suggest_next_sync</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a6ecaa24f220031816a05cd2f332e5149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync_values</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a1ffd67bd304da65bec7966e0618318fa</anchor>
      <arglist>(Gst::ClockTime timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_control_bindings_disabled</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a50cf4988393c9a170d196640f4e57384</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_asctive_control_bindings</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a7802f29724a1d24e9b317793c58d4b10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ancestor</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>aee1a36004d2f70fcafb2a69a10c9bae6</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Object &gt; &amp;ancestor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_as_ancestor</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a4e8abe2e2e7cda5b26ee7a7e52320890</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;ancestor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_as_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>abaaa4fbe4078d9ceadd45435ed0f079d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_path_string</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a4e2da47b8e8eb7c48e6e6ec1a4f6ac94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a3d51c0f61b8ef58eafb2a2f2e59b1f74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>adf94eb5a427a1e7d2907caf50a8cf7e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gst::Object &gt; &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a73a0272f16e1481f54150b1b412fa88c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Object &gt; &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>aa675064df0fcf0aaee34db75b8a6005b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Object &gt; &amp;, GParamSpec *&gt;</type>
      <name>signal_deep_notify</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>ac0fe96dbc1176a937bdb829ad3334afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_refcount</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>afc2d69664a0d2bc0176e3421ff4b351f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a8d7dfcf69a7c5c6086ab8149626fffcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>check_uniqueness</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a036969c9ee33ffe4270c2ceec02222a6</anchor>
      <arglist>(const Glib::ListHandle&lt; const Gst::Object &gt; &amp;list, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_deep_notify</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a133db3a4c137e5cc57227edb343d6fdb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;prop_object, GParamSpec *prop)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Object &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Object.html</anchorfile>
      <anchor>a78a831adab0d01760dd9cddec10f8986</anchor>
      <arglist>(GstObject *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Pad</name>
    <filename>classGst_1_1Pad.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; PadProbeReturn, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, const Gst::PadProbeInfo &amp;&gt;</type>
      <name>SlotProbe</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a492f7c715cadfa12cbb922ac91ed8546</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gst::FlowReturn, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&gt;</type>
      <name>SlotChain</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a1ea0cc75fc5bf181183ee18fe7259fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; gboolean, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, Glib::RefPtr&lt; Gst::Event &gt; &amp;&gt;</type>
      <name>SlotEvent</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a6401a14168a04beb70a5950ae7a32533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; gboolean, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, Glib::RefPtr&lt; Gst::Query &gt; &amp;&gt;</type>
      <name>SlotQuery</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>af7cd2cbffb33bfad79d777cbd5ecf6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>SlotActivate</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a67cb3df602a6a1011ad55206c5a41abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, Gst::PadMode, bool &gt;</type>
      <name>SlotActivatemode</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ab674ad471012c12c250a1f03179c48c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gst::FlowReturn, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;, guint64, guint, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&gt;</type>
      <name>SlotGetrange</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a113b17491e78f498b86829f0e45dcf9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>af821f7f31d135564455035a266f22383</anchor>
      <arglist>(Pad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pad &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a00de049b8d87871560141f3353339d58</anchor>
      <arglist>(Pad &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a616bc73841fd31e16dd077b2f817031a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPad *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a97420f0a517b5f54891a903f57082a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPad *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a47298c29cbb479957bd5b5900cc77d6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPad *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5e1ee5bafe22204b7a5ca9c4430864bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::PadMode</type>
      <name>get_mode</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a2816ede43fa33529d7abc6dad06cf2db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>query_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5d7d815be729b9841b1e482fa525cc90</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>query_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a2a3433977c2d62b3072082b322a614ce</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; caps) const</arglist>
    </member>
    <member kind="function">
      <type>PadDirection</type>
      <name>get_direction</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a8a1689c965b8481d1b38a920e0232437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>get_parent_element</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a16d94b5d390a292d3028ebff9004cf35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Element &gt;</type>
      <name>get_parent_element</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a6136ac0621bc7a405ddc003290bb52e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PadTemplate &gt;</type>
      <name>get_pad_template</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aae00fc50d876959b4c4b136e09450ade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::PadTemplate &gt;</type>
      <name>get_pad_template</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a3403d65d510aafd93b404ce2698cfd91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadLinkReturn</type>
      <name>link</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aba62790a4b40ad20ad67e5906f4534d9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;sink_pad)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unlink</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ae17d28284b59e51fc6ad8acfd264d037</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;sink_pad)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_linked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>acd12cd1ece43358086e8b07ee267936b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_link</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac2608f45b0365813133bc4c1611a5e8a</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Pad &gt; &amp;other_pad) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_allowed_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a82376e32bb5e5d56564c73edd743d8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_allowed_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>af809d827bb82f79f9d85f63996062ea3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_pad_template_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a85a3605a1e12de6cdf4356d1e552a3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_pad_template_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a42759685812b4eb777f039dfaf89a20b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gulong</type>
      <name>add_probe</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a3a79161d92645863ac40c6d7c3efa382</anchor>
      <arglist>(PadProbeType mask, const SlotProbe &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_probe</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a4f9e76b87a6f0e958a673d6515667792</anchor>
      <arglist>(gulong id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>get_peer</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a14e0e74f64b8aa13ed72429d386462ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Pad &gt;</type>
      <name>get_peer</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a7469364fe9155f5cb05a3748f6160662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use_fixed_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a643d1a5766b7e69ac03fec8e8b6e2b31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac23cd01220d796166aa5c8365254e784</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blocked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ad737be4f2fed48f0c29864f23789759c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blocking</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>afe2d2e117eb3f95ecbe34141be74da61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mark_reconfigure</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa05445ec62814a27c45ab99a951f5518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needs_reconfigure</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a04e8987a36a7b1be3c2d577f3b8ff743</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_reconfigure</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ace6c69cc0eb53a2ffcdbfc4eb566868d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_current_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ae97037fa0666003cb0aa1bf67a3154e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>create_stream_id</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9661fd794e531a474e0079a5bdbce6fc</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Element &gt; &amp;parent, const Glib::ustring &amp;stream_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_stream_id</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ad7698e0192bb8a4173b4b30a104facfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a2adaf35a6852ca94fa8968be6f1aa3c0</anchor>
      <arglist>(gint64 offset)</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_offset</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a253466a7aae995cfa8722f1eb6feeace</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_element_private</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aee3d8e3795e21344594c388e129e5bc9</anchor>
      <arglist>(gpointer priv)</arglist>
    </member>
    <member kind="function">
      <type>gpointer</type>
      <name>get_element_private</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>afea541764e3723824e218259877dbf3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FlowReturn</type>
      <name>get_range</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9a954b832a2410d2d11ec99e6a5cdd0f</anchor>
      <arglist>(guint64 offset, guint size, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_accept_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9fa0a7a8fd409cf65e1f823fe9585e57</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proxy_query_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a37a2b94d599fa49efbe867d8298d51fd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proxy_query_accept_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0e5ac36010fa6e1be412f8d7a50f5893</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peer_query_accept_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a30328a67dad8eafc87c38699638715e8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peer_query_position</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a7c78e5645e0691c708a964dc4351be74</anchor>
      <arglist>(Gst::Format format, gint64 &amp;cur) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peer_query_duration</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>add968c75be16070235ee828151e89bcd</anchor>
      <arglist>(Gst::Format format, gint64 &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>FlowReturn</type>
      <name>push</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ab8f95c947da472b6cd7284ffca9b5b30</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>push_event</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0661e40ff8ed88b9274168142925ad89</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Event &gt; &amp;&amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>push_event</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a90f87d736c3acb17179b944991d80f89</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>FlowReturn</type>
      <name>pull_range</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a529dc96f1e0f78e3ff2c8dbc19e67fa5</anchor>
      <arglist>(guint64 offset, guint size, Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_event</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9a5cba5a7704f1aa8dd27e893ab11542</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Event &gt; &amp;&amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_event</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a1db812da610b3d7207825a9362f0cd8f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Event &gt; &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_mode</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a834923b82bf076db38535f4b92fc9643</anchor>
      <arglist>(Gst::PadMode mode, bool active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>event_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a14d4e210a2085eaa281c1b004f9e9234</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent, Glib::RefPtr&lt; Gst::Event &gt; &amp;&amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>event_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a12616c46557f967829dba4e3ed78c82a</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Event &gt; &amp;&amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0712c9f7dce992ca8b21b4424669c675</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peer_query</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a57ce5210e415302e20e7a1e10c6f3000</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>peer_query_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>afa3b9a3495d97e6e71457f1f9cb591c9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;filter) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a8a08d3c9e234a10d87d749d7ef153fcb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent, const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a26c905bc67b72396c99935189ee1e70e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Query &gt; &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_position</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa9f79f9ac1c067d8d9564f7de21099fc</anchor>
      <arglist>(Format format, gint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_position</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac861b2d9a2ac2853d7528fcc5a2aa962</anchor>
      <arglist>(Format &amp;format) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_duration</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a1999a541a0c1bbaf106401dff9ca2ece</anchor>
      <arglist>(Format format, gint64 &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_duration</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5d2c174743c46dd97b7e6c9aee2b72d1</anchor>
      <arglist>(Format &amp;format) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>query_convert</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>acdfa3b8b0d2b263082a5759fc3eb0361</anchor>
      <arglist>(Format src_format, gint64 src_value, Format dst_format, gint64 &amp;dst_value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>peer_query_convert</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa2bb1bf2aa16e951496b07e6386e63cd</anchor>
      <arglist>(Format src_format, gint64 src_value, Format dst_format, gint64 &amp;dst_value) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_internal_links</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ad0faee270edd5078ee7574176516dbf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_internal_links</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0208f8c79aa3d580035873b3bee8a118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_internal_links_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a1f22282a2f96798e8fecd562b0c56f3a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; Gst::Pad &gt;</type>
      <name>iterate_internal_links_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a267637d0dbe9215b3cef316fcf1aa768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_internal_links_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>afd057b7045fc9a5081e9ab3963bee4a3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Object &gt; &amp;parent) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Iterator&lt; const Gst::Pad &gt;</type>
      <name>iterate_internal_links_default</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a91f7e2b90eed801f7c50796de164ca79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>chain</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ab2abbe201751dd55ae867f02d6be88b7</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Buffer &gt; &amp;&amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_current_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ab625dc748dca079682a3b720ec5c3578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pause_task</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a19769c8fa9c40303c54c720c150051ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop_task</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a68113d5712055fece6ade2caa863089b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_active</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ae4310bd528bc3eb83c237885133b811a</anchor>
      <arglist>(bool active=true)</arglist>
    </member>
    <member kind="function">
      <type>Gst::FlowReturn</type>
      <name>get_last_flow_return</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a1d7d14fbc82c75fe6437fccb6e55c079</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>get_sticky_event</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0087d878f86f3a6a4f923bdf005ba777</anchor>
      <arglist>(Gst::EventType event_type, guint idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_chain_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ae3b514a22435bd5c87f28778ec2749cf</anchor>
      <arglist>(const SlotChain &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ae8b51f4ec809bf164eacda8d1ded5608</anchor>
      <arglist>(const SlotEvent &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_query_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5993b7db78d992a32d7778529fae5155</anchor>
      <arglist>(const SlotQuery &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ad1b54e417020601a103b2540eccbf25f</anchor>
      <arglist>(const SlotActivate &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatemode_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a53f247e0d35f6b5798ccbcad3e14b00a</anchor>
      <arglist>(const SlotActivatemode &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_getrange_function</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa6195387a6ee56e6bc61eb7fd41bc334</anchor>
      <arglist>(const SlotGetrange &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>signal_linked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9bc5f6fa902b731a550c525a990aaede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>signal_unlinked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a3ddabb9062fa86fe4086cb88c434562a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Caps &gt; &gt;</type>
      <name>property_caps</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a22a1e947ac6e9ac59b5aa8b1104132aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PadDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5ab4fb316a6e76049efcb12c48f19a6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PadTemplate &gt;</type>
      <name>property_template</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9b95199cd2317ce33d5d1eb24d88d3cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PadTemplate &gt;</type>
      <name>property_template</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a53f3fc661596342e057c98c66b2fbe47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gint64 &gt;</type>
      <name>property_offset</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ab0ab2b08a09bb72643bb911d307d47e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gint64 &gt;</type>
      <name>property_offset</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a30796d3f514ac79d7b9a9c3309f632ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ghost_pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a4c12dae6f38c60ff83eeba59117e9336</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_proxy_pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a043bcd8833a17a85e1041e72173a222c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exception_handler</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aafba2de144abfde8f3efaf8b8c81a34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac2e14f40fe4c4f5d6360640a6321d3e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a0c05a74e5a48ac4ed14e46fd2cc41587</anchor>
      <arglist>(const Glib::ustring &amp;name, PadDirection dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a536a261e926f710973f2a9e6545218ea</anchor>
      <arglist>(PadDirection dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>acdf2c88e7c4a16c677eb1371faf96b10</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;pad_template)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pad &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a735a6e67e89326809a96b3b96e84c584</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;pad_template, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GstFlowReturn</type>
      <name>Pad_Chain_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa0e4df089098ecbed11414a331822a40</anchor>
      <arglist>(GstPad *pad, GstObject *parent, GstBuffer *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static gboolean</type>
      <name>Pad_Event_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a9e67b49c02410c5ffa70225e32c34755</anchor>
      <arglist>(GstPad *pad, GstObject *parent, GstEvent *event)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static gboolean</type>
      <name>Pad_Query_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac4c977690533c4c16f7d8a99a659a99c</anchor>
      <arglist>(GstPad *pad, GstObject *parent, GstQuery *query)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static gboolean</type>
      <name>Pad_Activate_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a5643e8bfa21729b292e230976e43b78b</anchor>
      <arglist>(GstPad *pad, GstObject *parent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static gboolean</type>
      <name>Pad_Activatemode_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>aa6ca8e3a3e3948883d243d2b86a417ab</anchor>
      <arglist>(GstPad *pad, GstObject *parent, GstPadMode mode, gboolean active)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GstFlowReturn</type>
      <name>Pad_Getrange_gstreamermm_callback</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>ac1ff3a13b5fdbcc03b40bbbe0bf2e6a1</anchor>
      <arglist>(GstPad *pad, GstObject *parent, guint64 offset, guint length, GstBuffer **buffer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a47617c843e02a04872e821b9a86ba324</anchor>
      <arglist>(const Glib::ustring &amp;name, PadDirection direction)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a059b947f16227b19b42ebdea6b03a5ad</anchor>
      <arglist>(PadDirection direction)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a750a95bb889a9d72a3e5ba9dbbaed179</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;templ, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pad</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>abdfddaf76843840bdfba75baa8edcadd</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::PadTemplate &gt; &amp;templ)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_linked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a165e6c8f149a1594d73ca156b5c2e268</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;peer_pad)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_unlinked</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>afdd042d55455871fcf2701e675107eae</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;peer_pad)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pad &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Pad.html</anchorfile>
      <anchor>a544f05c4945f35eb4f87904135095e78</anchor>
      <arglist>(GstPad *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::PadProbeInfo</name>
    <filename>classGst_1_1PadProbeInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>PadProbeInfo</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>ad310bcc729c5110f310caea5fe6f9474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadProbeInfo</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a340b7eda27764036850c183bb9e34349</anchor>
      <arglist>(GstPadProbeInfo &amp;castitem, bool take_ownership=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadProbeInfo</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a5622dfbae2b4712dcf86c93e0094501e</anchor>
      <arglist>(GstPadProbeInfo *castitem, bool take_copy=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PadProbeInfo</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a309f37aadf41c7f544ee08b16665a051</anchor>
      <arglist>(const PadProbeInfo &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PadProbeInfo</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>af082d152f7183060268853ea5afede89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstPadProbeInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>aded2672767be1d2c5e836ea28e289c82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPadProbeInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>acf6f0f5666e08fdec9b8f293902ea01a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gulong</type>
      <name>get_id</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a963ffc419801fabae8bf4d10558e393e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>get_event</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a60048d8bc19ef01fb557ccd0698af6aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::RefPtr&lt; Gst::Event &gt;</type>
      <name>get_event</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>af3a83e51c61739c985b8ecdccbdef918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>get_query</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a6b32a9908bf90b30e663dd17207c8211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>get_query</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>aa621ac06c164157699cc439d191cbc8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>afdbdc7b5434c8e7d99044227527e075b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a7bf12aea1fa60082e8b39b7780e6ce21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::BufferList &gt;</type>
      <name>get_buffer_list</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>a668aaf790e6af2fcfb0127592fd27a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::RefPtr&lt; Gst::BufferList &gt;</type>
      <name>get_buffer_list</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>aff286e6671a0b7e8c02430b2d619dfc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1PadProbeInfo.html</anchorfile>
      <anchor>acc2dbd9371c8ab20ec63f286d2c8331d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::PadTemplate</name>
    <filename>classGst_1_1PadTemplate.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>PadTemplate</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>afac8b8cac8360dcc35eaa3612a166c4a</anchor>
      <arglist>(PadTemplate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PadTemplate &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>ac1817593823b3b95937091db58e83be0</anchor>
      <arglist>(PadTemplate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PadTemplate</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a415466e31950f2a38eb83194c704bc9d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPadTemplate *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>aed89e1536e37836b82ee90abfe8db063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPadTemplate *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>aaff054493f5514780c6bd1c481f91749</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPadTemplate *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>aa8cdc03b69ac7edf5e223c87ed7bb932</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a99fb30079d0ce1ce9fa70f0b7bfcb8b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a1d984e08cd0e112869c6cfb50d16532c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name_template</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>ab8ba8954bc4bf5b76476b6009d28c772</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadDirection</type>
      <name>get_direction</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>ab9d0755b1e3268b3a84eedd399bdda39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadPresence</type>
      <name>get_presence</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>aa156a976bc83be3ee7c86b0501093be2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gst::Caps &gt; &gt;</type>
      <name>property_caps</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a0c24e2ec722341d449c10c8e17c9b600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gst::PadDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a41acb295d7532c0490c175b405596fe9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name_template</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a474849bcab9214ada05bee4e24be7591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gst::PadPresence &gt;</type>
      <name>property_presence</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a12926f9e9594c4141946bacfab8b0804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gst::Pad &gt; &amp;&gt;</type>
      <name>signal_pad_created</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a242c6d3f5d087bd22a630d897349a7b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a3fd7a02c655f6c813b45d8998d9dc621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PadTemplate &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>ab62dde8f0a56bcbc04db198d396ce1dd</anchor>
      <arglist>(const Glib::ustring &amp;name_template, PadDirection direction, PadPresence presence, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PadTemplate</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>aec52b9746d647e9ae75a3aa23d54f41d</anchor>
      <arglist>(const Glib::ustring &amp;name_template, PadDirection direction, PadPresence presence, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_pad_created</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a3b130b39950b5d2c63fc8683ddd703d2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Pad &gt; &amp;pad)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PadTemplate &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1PadTemplate.html</anchorfile>
      <anchor>a77e2fa910af29b754d740cd47f6fa796</anchor>
      <arglist>(GstPadTemplate *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Parse</name>
    <filename>classGst_1_1Parse.html</filename>
    <member kind="function" static="yes">
      <type>static Glib::QueryQuark</type>
      <name>error_quark</name>
      <anchorfile>classGst_1_1Parse.html</anchorfile>
      <anchor>a8694c65abfdc1a36fd9a5a73dd270818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>launch</name>
      <anchorfile>classGst_1_1Parse.html</anchorfile>
      <anchor>aca096b4b23818a77d3405a53b06015b4</anchor>
      <arglist>(const Glib::ustring &amp;pipeline_description)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>launchv</name>
      <anchorfile>classGst_1_1Parse.html</anchorfile>
      <anchor>ab2d721de450830b53ec6d362cd8cb863</anchor>
      <arglist>(const gchar *argv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>create_bin</name>
      <anchorfile>classGst_1_1Parse.html</anchorfile>
      <anchor>ad6113c683762b14e2724497830fe9244</anchor>
      <arglist>(const Glib::ustring &amp;bin_description, bool ghost_unconnected_pads)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ParseError</name>
    <filename>classGst_1_1ParseError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a1f205c3efe1e2f09f492d6c82c71e817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SUCH_ELEMENT</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a5067bbaaf6ab5d575582daf7312fa10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SUCH_PROPERTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a6a6107d33c44970b42dfec09715f663b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINK</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a97fd2ded1c1fae7f86ebf49d0921dc24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_SET_PROPERTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a120c73f7db1ba02c5d220252bbc46b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY_BIN</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a007b5bd50abc1762fa9125a5ba779420</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a806aacc0ed91dbacc22070fb103e8c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELAYED_LINK</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a6da49ba7465b1cd7c06bfb0cc111f2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a1f205c3efe1e2f09f492d6c82c71e817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SUCH_ELEMENT</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a5067bbaaf6ab5d575582daf7312fa10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SUCH_PROPERTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a6a6107d33c44970b42dfec09715f663b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINK</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a97fd2ded1c1fae7f86ebf49d0921dc24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COULD_NOT_SET_PROPERTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a120c73f7db1ba02c5d220252bbc46b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY_BIN</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a007b5bd50abc1762fa9125a5ba779420</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a806aacc0ed91dbacc22070fb103e8c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELAYED_LINK</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab8f31ddd2198b847ebb291272c2df9a0a6da49ba7465b1cd7c06bfb0cc111f2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParseError</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>a214fe9b856048c55c3384df59ec7c83e</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParseError</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>aad641d4f5456cf4444324c3a68d2095c</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1ParseError.html</anchorfile>
      <anchor>ab7a017cf1bf8b13fab162ff46b32de76</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Pipeline</name>
    <filename>classGst_1_1Pipeline.html</filename>
    <base>Gst::Bin</base>
    <member kind="function">
      <type></type>
      <name>Pipeline</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a9b490fc37b85c771cb08fb2f337f73c9</anchor>
      <arglist>(Pipeline &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pipeline &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a151aca033baf97202f0a31c93b62e64b</anchor>
      <arglist>(Pipeline &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pipeline</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>ad5d84ac9fc9b66a2b24698d92a25fa13</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPipeline *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a03ca563f83dc9505e3b09bcd247a888c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPipeline *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a77fa0478addd1f3143ff2eb59bccc7ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPipeline *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>aedd8a513cfab9b43db505ba0110ef145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Bus &gt;</type>
      <name>get_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>ae13c2be5620749a1f69a2128657b200e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Bus &gt;</type>
      <name>get_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>ab269498b8cc01440349bb02613fc646d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a609ef4a10f31163296f2d6e025fa0b35</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a85dd47b1ea99ce2d3bfe50042835c38f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>afc2068c3a9119447f3fcd34d99ba4f7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>abe20a8187d6b0eb80ef04c3ce10a2d08</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Clock &gt; &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auto_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>ac3c8218d9e68f36d7d8de6c01f79ed82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_auto_flush_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a8b2175740daaf53067c016d9d5bfd61f</anchor>
      <arglist>(gboolean auto_flush=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_auto_flush_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a0bed028a65910b9de0b03cdd7002a95c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_delay</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a83a0c174de1a4f01987f23cbcebe35ac</anchor>
      <arglist>(ClockTime delay)</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>get_delay</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>afe36ff18f7bc4f5e74a2540da27e23c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>get_pipeline_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a3d1fe6de42412186ea58520af7023b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Clock &gt;</type>
      <name>get_pipeline_clock</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a30a780d16115e49995917983645aafcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_latency</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a2c79933a0be5602046bc349af767b367</anchor>
      <arglist>(Gst::ClockTime latency)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ClockTime</type>
      <name>get_latency</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>af9a913a3b2179d96a8e649638608b19d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint64 &gt;</type>
      <name>property_latency</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a6bf42ec904c80cf7ee40e7459b66426a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint64 &gt;</type>
      <name>property_latency</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a44f3e09fbc73fbfaae017dd2f1cd147d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_auto_flush_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a0146e4c97d88afac4446595843667f19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_auto_flush_bus</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>af2ad7cb558943c2f71b14f94ccac6826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ClockTime &gt;</type>
      <name>property_delay</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a20d8c66ecf8156824cf89a2ad6180a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ClockTime &gt;</type>
      <name>property_delay</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a4852f83e5b6e3e38176c65331f0e35bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>abbe9d5e0d313551e9da74b89a4dc5f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pipeline &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>afe78dd5dc3f7dc206061f6fa6cf66d34</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pipeline &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a128afc567b461f52e180b37d76dc1c4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pipeline</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>a344d4b37a4cb9e2a6c318c95eb0c9feb</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pipeline</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>acc30ec3f6e4ba716931f8edfdcf541ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Pipeline &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Pipeline.html</anchorfile>
      <anchor>aaea46c5a6a870855e3b4736191b279af</anchor>
      <arglist>(GstPipeline *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Plugin</name>
    <filename>classGst_1_1Plugin.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;&gt;</type>
      <name>SlotInit</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a82ec31d55f7420e43661b31ca21df117</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;&gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a466aed6d953588e0404f56ef799ab672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plugin</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a89cd86cb6198fd1d070091684e081746</anchor>
      <arglist>(Plugin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Plugin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>af710cb80f270a98f962fea3c0ac24fef</anchor>
      <arglist>(Plugin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plugin</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>adfc4d0ec63ef02a28238fbe646110e4b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPlugin *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a9eb0d06d78e144438f08c9f7062d0e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPlugin *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a3248caa8e80508954b4567308ef60cf8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPlugin *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>af910ca122e9e00f5ce04603c99a4d58d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a8022783ee7c8e9bd5bc98b16dbc2209b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a975043d4287aaf47d292791db7b4b6d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_filename</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ab4251b8a71c7e0b2269dffc50829c20a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_license</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ac962447244506178ea3d2e48e2bb9491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_package</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a4a411b088374c27a3a9f4b1ed7aa2728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_origin</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>acc26acbb7d325e3023c50dcf29a1db1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_source</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a04e11172d7e5041d354b9053558f4ff2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_version</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>aebd32b7c010f123bb35ba43fd53a2051</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_release_date_string</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ac001486160cad652b859ee09c1ad80d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_loaded</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a9e8fd46fd8e3e0de849425bbdf93aaa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>get_cache_data</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a1837833b16805e061bacac8012f6b590</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cache_data</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>aad604b66205edf1570c85b1058229938</anchor>
      <arglist>(Gst::Structure &amp;cache_data)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>load</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a4529036db6ad6c5e0585685c5d630222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_dependency</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a5e869955cb1392e202dcefaa65f4a5cb</anchor>
      <arglist>(const Glib::StringArrayHandle &amp;env_vars, const Glib::StringArrayHandle &amp;paths, const Glib::StringArrayHandle &amp;names, Gst::PluginDependencyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_dependency</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ad48b07a7c2e22ae2650c7077f7dce875</anchor>
      <arglist>(const Glib::ustring &amp;env_vars, const Glib::ustring &amp;paths, const Glib::ustring &amp;names, Gst::PluginDependencyFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ab6672cec948799f4fd05028fdab38e71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::QueryQuark</type>
      <name>error_quark</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>a374bbf53a90590a6860230ae60b478ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>load_file</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>abd8050545b771ab96d456abdc7f15f21</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>load_by_name</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>accd560621f3f6d067be7aa24c4165eed</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_static</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>ae6df235fdf0fcf3b10dafbef559d1e3e</anchor>
      <arglist>(int major_version, int minor_version, const Glib::ustring &amp;name, const Glib::ustring &amp;description, const SlotInit &amp;init_slot, const Glib::ustring &amp;version, const Glib::ustring &amp;license, const Glib::ustring &amp;source, const Glib::ustring &amp;package, const Glib::ustring &amp;origin)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Plugin.html</anchorfile>
      <anchor>add198881238446f6e6485b944e8ae2c3</anchor>
      <arglist>(GstPlugin *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::PluginError</name>
    <filename>classGst_1_1PluginError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULE</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100a45eaad58b6ad4d5aee8c06a3d358c56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPENDENCIES</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100a8218f874cfdd8be6f785eb3757a4bac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME_MISMATCH</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100ab4a52ad3d08afb634c6744ba713f5a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULE</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100a45eaad58b6ad4d5aee8c06a3d358c56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPENDENCIES</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100a8218f874cfdd8be6f785eb3757a4bac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME_MISMATCH</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a68715874a485b69b31ff6c9eb8585100ab4a52ad3d08afb634c6744ba713f5a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginError</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a3a53bbb4eea3ce3dcb6cf65e94dc36d2</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginError</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>a5fafb7c6de4a6005a13c39a128b81207</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1PluginError.html</anchorfile>
      <anchor>adfa324d6e88383433be11d2f10b9a519</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::PluginFeature</name>
    <filename>classGst_1_1PluginFeature.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Gst::PluginFeature &gt; &amp;&gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a632e2cf4f33ead7f6d940a57b3fe7a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginFeature</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>acc030416ff9a4b699652e918df26e42c</anchor>
      <arglist>(PluginFeature &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PluginFeature &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a1ac5d33a60c998bcb063b4129da8bb62</anchor>
      <arglist>(PluginFeature &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginFeature</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a550a03747e4bade9bea3f98c36a5c106</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPluginFeature *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>ae5b357504a500e18cf8452cb8bc88341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPluginFeature *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>afd641a5b03db01cff995f0cc045c017f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPluginFeature *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a9d2137649eff64ff9bcb182b41b667de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rank</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a8825b9b5e2cca520ffd8ad1bb4aaacf3</anchor>
      <arglist>(guint rank)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_rank</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a00e6a492b127b7db6f7d855ca0aa0885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PluginFeature &gt;</type>
      <name>load</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a7f31b578d121a1ab11a4bbe9b048bde7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a4be827a15e1b392de9317a3f4e485ac6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_plugin_name</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a77807ced0456ce1e3850543f34d895df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_version</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a08e2a2fd4e7b503297236f6188fc4ac0</anchor>
      <arglist>(guint min_major, guint min_minor, guint min_micro) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>a9d3d049d074ca8d9f7c85af15a46f03e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PluginFeature &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1PluginFeature.html</anchorfile>
      <anchor>addcdba947933f41e62426a2ccd9298da</anchor>
      <arglist>(GstPluginFeature *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Preset</name>
    <filename>classGst_1_1Preset.html</filename>
    <member kind="function">
      <type></type>
      <name>Preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>ac52389fda7b306e5c63f5c3d17fcef73</anchor>
      <arglist>(Preset &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Preset &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>ada0f37dd5d872ea477acdef42f2b4023</anchor>
      <arglist>(Preset &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a136bf2195266a1e00efb465ce4f6a0f1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPreset *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a5715ce006807becbf2dc7fe1bf92c09c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPreset *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a747960a3492dace78637bf0feb217e51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::StringArrayHandle</type>
      <name>get_preset_names</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>af9f64367188fd9c42f25f3720535b417</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::StringArrayHandle</type>
      <name>get_property_names</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a53a5c56f3fdfc8d14fe020fb148ecf6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a650e69aa1a5034a79896602e5d3eadc7</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a706f5930fe1509836b47724ffab2a28b</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename_preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>acba59ac6f0045fb43c95ba6a395f2d7b</anchor>
      <arglist>(const Glib::ustring &amp;old_name, const Glib::ustring &amp;new_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>delete_preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>abbf7b20a67e5b5be779b9b950055a616</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_meta</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a8b724e3b87e056f60f79839db268806b</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;tag, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_editable</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>ae267f91c507d1a67c4bcdd8bf910bc17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_meta</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a86b37531d7624c3558095e64f29e3eb9</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;tag, Glib::ustring &amp;value) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::StringArrayHandle</type>
      <name>get_preset_names_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a86a6c40c80fcf8bd3ca881886bf51024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::StringArrayHandle</type>
      <name>get_property_names_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a5b5f3c53b9031615530cdfe0a613088f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>load_preset_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a890e4c9414b1d7a5d4af7df50d9fa6bc</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>save_preset_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a7826b8783fb02545034223918675cd6e</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>rename_preset_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a491fb46bae9b7f5c11c8ad173e900aa6</anchor>
      <arglist>(const Glib::ustring &amp;old_name, const Glib::ustring &amp;new_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>delete_preset_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a3ebd1a99ed582f1aaeb9ebbb07a9fe1e</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_meta_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>ab1e64b8bf464fd05be5c79c8796c78aa</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;tag, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_meta_vfunc</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a461486f10e8b3fabdf17de9f2a0e5530</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;tag, Glib::ustring &amp;value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a0aba65c969785ccce457658a5259349f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a568e6eab25036b9749da8bcbc219611f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Preset</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>af30d1c140654bbdac3091d920f68985a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Preset &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Preset.html</anchorfile>
      <anchor>a50913e2f6141c27328ca9ac73134b17f</anchor>
      <arglist>(GstPreset *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::PushSrc</name>
    <filename>classGst_1_1PushSrc.html</filename>
    <base>Gst::BaseSrc</base>
    <member kind="function">
      <type></type>
      <name>PushSrc</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>a6580408c8bb6d11b6b94dbb9b47a1a0d</anchor>
      <arglist>(PushSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PushSrc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>a1692b10c09792ebd220d0e7bf84aee54</anchor>
      <arglist>(PushSrc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PushSrc</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>ad319208cba667044c050c22c37f7efce</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstPushSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>a2eae78656179eef671949290111fdf61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstPushSrc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>adae782305cf0fa955aaec9170a410df6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstPushSrc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>aecda0cd25ebf684308473e299d210d64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>a79b17993fe7beaf8d23d4a1beb38eb85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PushSrc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1PushSrc.html</anchorfile>
      <anchor>a91eb5a9c485df10d4f5a1f27e8df019d</anchor>
      <arglist>(GstPushSrc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QuarkData</name>
    <filename>classGst_1_1QuarkData.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QuarkData</name>
      <anchorfile>classGst_1_1QuarkData.html</anchorfile>
      <anchor>a74893f71ef23f28477be2c3a6753acd2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Query</name>
    <filename>classGst_1_1Query.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a6cbf6b0c9475259714f3e058d187601c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a322824a0d9a763299e7001bdbdab8b35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstQuery *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a78be9148534ed9e2fa76eb7b5dcaa9e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstQuery *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a1e2bc158041cd0faa95a30c9d6d98f44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstQuery *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>ad3880ce06a1b6cf32a7c2ba9f52258fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a9164b0ee93de1a4edd87323a24a5ef33</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a24ce33db0f8557245462623f20b2eef0</anchor>
      <arglist>(const Query &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Query &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a942e47e640b45d02ac848bb15629df9e</anchor>
      <arglist>(const Query &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_writable</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>ad5c9eb799a29ea5b7fdf666080832891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>get_structure</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a435d913eca58a80daa36da190e22cc0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>get_query_type</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a86d1b21f49e3d3f5016a71912253d713</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a88775bba4cca7ec74551cfd41ec7cc49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_buffering</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a1b2b5230d99259634d96892eb61f3737</anchor>
      <arglist>(Gst::Format format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_allocation</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a77112ebf50fe363c7ed48aba426a0def</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; caps, bool need_pool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_uri</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a1f773d2fbd6325c779118d9bb96ecd54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_scheduling</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a64bcab4e84e5512c27ea98ff1d1210e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_drain</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a54bd9b68ada62a3be892c220ca140348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_custom</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a1462a0aa910392fcf741fd5d38f0dd9d</anchor>
      <arglist>(Gst::QueryType type, const Gst::Structure &amp;structure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_convert</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a9606d3da45aa232368ebbc6a197f858c</anchor>
      <arglist>(Gst::Format format, gint64 value, Gst::Format dest_format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_position</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a4db5c1f634bbb03cf64f82ecbde50d86</anchor>
      <arglist>(Gst::Format format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_duration</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>ab0422ea1e7588cdf6b75bea290eed8a1</anchor>
      <arglist>(Gst::Format format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_latency</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>ac9f6d97285b7d0283b5bae50d35eee90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_seeking</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>adadb25cac2e1e9e06541d72c1717e313</anchor>
      <arglist>(Gst::Format format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_formats</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a0570a8875ae7b702c3a656e564d3f01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_segment</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>af953a118b3cf87382482c29ec8aa11f0</anchor>
      <arglist>(Gst::Format format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_caps</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a45e8cae01031e435ad179374a90c3624</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; filter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>create_accept_caps</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a4f665baadb0ab9558170411e6b45c0cd</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; filter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>afd870bdf7272930ad78f244e833e70a3</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Glib::RefPtr&lt; QueryType &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a43a995c110cbaeb872ec4b1cf28abadf</anchor>
      <arglist>(GstQuery *query, bool take_copy=false)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Query &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Query.html</anchorfile>
      <anchor>a7547f108519aae29ad48fc27fda2794d</anchor>
      <arglist>(GstQuery *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryAcceptCaps</name>
    <filename>classGst_1_1QueryAcceptCaps.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>parse_accept_caps</name>
      <anchorfile>classGst_1_1QueryAcceptCaps.html</anchorfile>
      <anchor>aa97eb3dfe87544b15b743eeea37877ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_accept_caps_result</name>
      <anchorfile>classGst_1_1QueryAcceptCaps.html</anchorfile>
      <anchor>ac210e61e0e9094452dbee35e1f8f3c8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accept_caps_result</name>
      <anchorfile>classGst_1_1QueryAcceptCaps.html</anchorfile>
      <anchor>a24e921aef4e2cf2f783addbd0169e2d8</anchor>
      <arglist>(bool result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryAcceptCaps &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryAcceptCaps.html</anchorfile>
      <anchor>a7dde8ea3cea2084598cac84316ce758d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryAllocation</name>
    <filename>classGst_1_1QueryAllocation.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a7aa94073faf2d1e8367b6fef148777c9</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, bool &amp;need_pool) const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_allocation_pools</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>ac67a9f7f3ba05d9b29956602a596469e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_nth_allocation_pool</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a583eac047b0b6862f0b37631f2566ae6</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_allocation_param</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>aa01c07f0d8c7a5eb9b7d2add742af92a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Allocator &gt; &amp;allocator, const Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_allocation_params</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>ada7d8ab0fd51510cf2ba651709044855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse_nth_allocation_param</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a222539dc8bea416d792284ae3c4d665b</anchor>
      <arglist>(guint index, Glib::RefPtr&lt; Gst::Allocator &gt; &amp;allocator, Gst::AllocationParams &amp;params) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_nth_allocation_param</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a8ff32054ff882bdc0ee529c43a69e78f</anchor>
      <arglist>(guint index, const Glib::RefPtr&lt; Gst::Allocator &gt; &amp;allocator, const Gst::AllocationParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_nth_allocation_param</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>acff62746268c695bc0186c67d7fbd7b3</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_allocation_meta</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a105bc94e8a69fd7ebff4dfb992d621c4</anchor>
      <arglist>(GType api, const Gst::Structure &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_allocation_metas</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a98a6c9f048ec3dba8e498ae32105e7fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>parse_nth_allocation_meta</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a7781b8684d7c63fab152a677a9768328</anchor>
      <arglist>(guint index, Gst::Structure &amp;params) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_nth_allocation_meta</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a963de48aa64652c963749037cd6eb2ed</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>find_allocation_meta</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a8853c4beb55ca83065e614d814d8b4b1</anchor>
      <arglist>(GType api, guint &amp;index) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryAllocation &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryAllocation.html</anchorfile>
      <anchor>a032310cc282373c34f1c8f82a81c9df0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, bool need_pool)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryApplication</name>
    <filename>classGst_1_1QueryApplication.html</filename>
    <base>Gst::Query</base>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryApplication &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryApplication.html</anchorfile>
      <anchor>af572a4b12ab8ad0ee021deee6cbdcaaf</anchor>
      <arglist>(QueryType type, const Gst::Structure &amp;structure)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryBuffering</name>
    <filename>classGst_1_1QueryBuffering.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ad950725218f27e20392fa6af9d5228a8</anchor>
      <arglist>(bool busy, int percent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a8b0f1b1810bd09a7d42077684ac08dc6</anchor>
      <arglist>(bool &amp;busy, int &amp;percent) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_busy</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a9dc536288f40299698affb87cd2443b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_percent</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a14d08499694c34eed9323191442afecb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ac63247997d74e37af1ad73be5ceee4d0</anchor>
      <arglist>(BufferingMode mode, int avg_in, int avg_out, gint64 buffering_left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a0ba1b0b4462953c86e8d78a449bfc561</anchor>
      <arglist>(BufferingMode &amp;mode, int &amp;avg_in, int &amp;avg_out, gint64 buffering_left) const</arglist>
    </member>
    <member kind="function">
      <type>BufferingMode</type>
      <name>parse_mode</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a26f54c9e106e2e99c798198625e912dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_input_rate</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>acf8aab6cd6be55fd7be141afe73e3860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_output_rate</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ae143c71e66211f64ad9973ef6a1e9172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_time_left</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a93bd936ff33cee678082012d75e72316</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a42d270a7e59d1ae2e21a557ea1642cdd</anchor>
      <arglist>(Format format, gint64 start, gint64 stop, gint64 estimated_total)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a498b7dcacf1a0fa5716f7fc09e6cab06</anchor>
      <arglist>(Format &amp;format, gint64 &amp;start, gint64 &amp;stop, gint64 &amp;estimated_total) const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>acf5356ef29ca8130fd5023160d344abc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_start</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>acc2275576d8e22218645d29974775f85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_stop</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ac4c8cde39d75a5e89131da075a18a07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_total_time</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a97b37cc4cf5f6153898b2ef15a4f20ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_buffering_ranges</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a3d13dd51c667dde985f6abed151264c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_buffering_range</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ac555a5225a7ebb469b3f03e1286fca20</anchor>
      <arglist>(gint64 start, gint64 stop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_nth_buffering_range</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>a068ef91dd17e879b61c6282550bf9b60</anchor>
      <arglist>(guint index, gint64 &amp;start, gint64 &amp;stop) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryBuffering &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryBuffering.html</anchorfile>
      <anchor>ab6a49aa66ceb2f6759f3bd1084c69b4a</anchor>
      <arglist>(Format format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryCaps</name>
    <filename>classGst_1_1QueryCaps.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryCaps.html</anchorfile>
      <anchor>a7143e77178ee92506d986eff35bf80b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>parse_caps_result</name>
      <anchorfile>classGst_1_1QueryCaps.html</anchorfile>
      <anchor>a86bd988592ad9c6f9ea35be6d5ec9136</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_caps_result</name>
      <anchorfile>classGst_1_1QueryCaps.html</anchorfile>
      <anchor>aaa1209427f0bcd413f2b4e11105145cb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryCaps &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryCaps.html</anchorfile>
      <anchor>a0ae19612ac8b5ede06643762f450174f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;filter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryConvert</name>
    <filename>classGst_1_1QueryConvert.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>ad84839a470017a380cbde768bcb9c9a0</anchor>
      <arglist>(Format src_format, gint64 src_value, Format dest_format, gint64 dest_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>abd69ba5dadf4e721af6b712232d8c81e</anchor>
      <arglist>(Format &amp;src_format, gint64 &amp;src_value, Format &amp;dest_format, gint64 &amp;dest_value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>a9f6321fdf32cca4a33e65c1b5d3a0fb1</anchor>
      <arglist>(Format &amp;dest_format, gint64 &amp;dest_value) const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_src_format</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>ae6be8fd02b811014201ded8610681b32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_src_value</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>a17c005a928579888fcafd62298191992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_dest_format</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>a2a171b3f40f2e2b9271adb44744ea377</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_dest_value</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>a10d016fd77529a470f0534956181c28a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryConvert &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryConvert.html</anchorfile>
      <anchor>a04f7afbb5123e77ba6db6e79f3b523f9</anchor>
      <arglist>(Format src_format, gint64 value, Format dest_format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryDuration</name>
    <filename>classGst_1_1QueryDuration.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryDuration.html</anchorfile>
      <anchor>a0b6c7ba90d5f82d257aa43e73a1e10bb</anchor>
      <arglist>(Format format, gint64 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryDuration.html</anchorfile>
      <anchor>a3ea04e77d5d3377a2bda8b784d38d244</anchor>
      <arglist>(Format &amp;format, gint64 &amp;duration) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryDuration.html</anchorfile>
      <anchor>af769d7e26f84df61d13189a82c0aac79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1QueryDuration.html</anchorfile>
      <anchor>abffffa0951681c8bce5a02d6679e519d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryDuration &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryDuration.html</anchorfile>
      <anchor>acd54c48a9b8af04421712f359fd88c8a</anchor>
      <arglist>(Format format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryFormats</name>
    <filename>classGst_1_1QueryFormats.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryFormats.html</anchorfile>
      <anchor>a632f19d5f6ae7a8238b899291bda991e</anchor>
      <arglist>(const Glib::ArrayHandle&lt; Format &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryFormats.html</anchorfile>
      <anchor>ab249f88e13dcfe8e5c007c54fe9f57e4</anchor>
      <arglist>(int n_formats, const Glib::ArrayHandle&lt; Format &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>parse_length</name>
      <anchorfile>classGst_1_1QueryFormats.html</anchorfile>
      <anchor>ab013eb3f0ddc94c7b8ffe70c82ec9a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryFormats.html</anchorfile>
      <anchor>aebcf10d58752ac3d3acf3f00e8a2414d</anchor>
      <arglist>(guint nth) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryFormats &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryFormats.html</anchorfile>
      <anchor>a9f2d96910a79775bd9e3400039831026</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryLatency</name>
    <filename>classGst_1_1QueryLatency.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>a71cdbf3143edd1d4cec774c8b3a1e62d</anchor>
      <arglist>(bool live, ClockTime min_latency, ClockTime max_latency)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>ad08e3e74ef76c90a74f53e7355aae0c1</anchor>
      <arglist>(bool &amp;live, ClockTime &amp;min_latency, ClockTime &amp;max_latency) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_live</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>a8dff0fc1bcbdd30d40f876c57e6a3920</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>parse_min</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>ae09bb6a2375e5319f1b089f1b5216242</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClockTime</type>
      <name>parse_max</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>afbeebfb9590fa4ef067f78f43856fdce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryLatency &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryLatency.html</anchorfile>
      <anchor>a875ba1fae629bae5802fc455d232b1e7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryPosition</name>
    <filename>classGst_1_1QueryPosition.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryPosition.html</anchorfile>
      <anchor>a5b181628b630ec5ac20118a2edb518c1</anchor>
      <arglist>(Format format, gint64 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryPosition.html</anchorfile>
      <anchor>ab84af2529f40d34bf897370300a9cfa9</anchor>
      <arglist>(Format &amp;format, gint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryPosition.html</anchorfile>
      <anchor>a13a9361a925695d13ab5dde23a0b19eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1QueryPosition.html</anchorfile>
      <anchor>afbc35ef4e275758ec3002addd216d2e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryPosition &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryPosition.html</anchorfile>
      <anchor>aee19c96be577401ae5f8bf3bc563cc78</anchor>
      <arglist>(Format format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryScheduling</name>
    <filename>classGst_1_1QueryScheduling.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a12b04b05e956fda3eeb933dfc94263d1</anchor>
      <arglist>(Gst::SchedulingFlags &amp;flags, gint &amp;minsize, gint &amp;maxsize, gint &amp;align) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a33e42d6bca2586d518b118f0824433d6</anchor>
      <arglist>(Gst::SchedulingFlags flags, gint minsize, gint maxsize, gint align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_scheduling_mode</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>ab83277194e42f292accaac63a09c6864</anchor>
      <arglist>(Gst::PadMode mode)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_scheduling_modes</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a84e3de00156bf24eeb293edd6458ca28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::PadMode</type>
      <name>parse_nth_scheduling_mode</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a149baa7b5ad0333754aa13a2647d7c1d</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_scheduling_mode</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>afaf0da8582258dd078db30ab629e78a6</anchor>
      <arglist>(Gst::PadMode mode) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_scheduling_mode_with_flags</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a3ff002f65e22238cbc4b7678592c28b7</anchor>
      <arglist>(Gst::PadMode mode, Gst::SchedulingFlags flags) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryScheduling &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryScheduling.html</anchorfile>
      <anchor>a474d50d07fa57124964e64369951e397</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QuerySeeking</name>
    <filename>classGst_1_1QuerySeeking.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>a6992848a310260462c1cc4dc4688395c</anchor>
      <arglist>(Format format, bool seekable, gint64 segment_start, gint64 segment_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>ab7d24015fad3d31d54bda264d8cbc7b1</anchor>
      <arglist>(Format &amp;format, bool &amp;seekable, gint64 &amp;segment_start, gint64 &amp;segment_end) const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>a730d79c60cd1728277c4fbb87c144269</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_seekable</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>ab9468e5c719347fc75ae433f6cea9a7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_start</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>a0033202d66bf586205806ff0540c8144</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_end</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>af56187b2d0f6337f0506ac2d2e48b1e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QuerySeeking &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QuerySeeking.html</anchorfile>
      <anchor>adc6d3e804008651f67d9976bc4e38ff8</anchor>
      <arglist>(Format format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QuerySegment</name>
    <filename>classGst_1_1QuerySegment.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>aababe1abace200ad63a397f9c954e0be</anchor>
      <arglist>(double rate, Format format, gint64 start_value, gint64 stop_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>ab0a287351cb7329044503c48a64846f5</anchor>
      <arglist>(double &amp;rate, Format &amp;format, gint64 &amp;start_value, gint64 &amp;stop_value) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parse_rate</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>a4f40706a26a56c74bb4fe6ca8616838c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>parse_format</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>aea0ac87f1f1e599881a66e789a74f97d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_start</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>a8b1c1babb8bab0020b6ee70729c9a387</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>parse_stop</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>a002aed9d07188274703f29526fda160e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QuerySegment &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QuerySegment.html</anchorfile>
      <anchor>a7f51cd71dc4b279fa578b38d6d621f61</anchor>
      <arglist>(Format format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::QueryUri</name>
    <filename>classGst_1_1QueryUri.html</filename>
    <base>Gst::Query</base>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse</name>
      <anchorfile>classGst_1_1QueryUri.html</anchorfile>
      <anchor>aebff112823c0f8dc53fa68089e7bc5a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGst_1_1QueryUri.html</anchorfile>
      <anchor>a4bed81e100ace96047136ee67265e978</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_uri_redirection</name>
      <anchorfile>classGst_1_1QueryUri.html</anchorfile>
      <anchor>a26256b10ddd8ffeb6c9938de421ae47d</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>parse_uri_redirection</name>
      <anchorfile>classGst_1_1QueryUri.html</anchorfile>
      <anchor>a6190ff63b3fe9fbfdcd29747396f5b63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::QueryUri &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1QueryUri.html</anchorfile>
      <anchor>aa01af97a70a181bf199499f9b6b02cb0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Range</name>
    <filename>classGst_1_1Range.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>ac3d2f90fa510335cc88c8d8533a083ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>a1594674ab9fe7cbe028a1dd546714b18</anchor>
      <arglist>(T min, T max)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>ab075befa420d71cf31facb9df4e6ce6f</anchor>
      <arglist>(const Range &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>a087c4540e7adfa9103bf003f9bdb2c30</anchor>
      <arglist>(const Glib::Value&lt; Range&lt; T &gt;&gt; &amp;range_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>a54e8e3c5ea7906d9ef86d5b0ea3635c1</anchor>
      <arglist>(const GValue &amp;range_value)</arglist>
    </member>
    <member kind="function">
      <type>Range &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>ad07f2d703c9ec138afb99ceace877ec6</anchor>
      <arglist>(const Range &amp;src)</arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>min</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>aaa852a5e0d98dc5ebfbf3f1925dfac71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>max</name>
      <anchorfile>classGst_1_1Range.html</anchorfile>
      <anchor>ab507c611a551f7f40e34cf52db8d5876</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Registry</name>
    <filename>classGst_1_1Registry.html</filename>
    <base>Gst::Object</base>
    <member kind="function">
      <type></type>
      <name>Registry</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a5e183dfb1c92526093008646ccfb0419</anchor>
      <arglist>(Registry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Registry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a5a3a8a5f8cf7e0e3f82961bf78711e44</anchor>
      <arglist>(Registry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Registry</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>abffe006f39fbed0063af6dd37a066f84</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstRegistry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aa80574af15c7fdea5a1ccd05bae7727b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstRegistry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a1cd9b606168324ef2db40a12a730bb77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstRegistry *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aeb80753c762cf8c0c034610308224408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a9d1416c5c436c21363a8bd7b450053f0</anchor>
      <arglist>(GType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a5afbf758a7cb6befec237a12b693e331</anchor>
      <arglist>(GType type) const</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_feature_list_cookie</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aa78f833e1d494ec6d36cd9972c7a3284</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aa13bdafd86415d986e268bcd04ffa055</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a7bdde73d3b01415f61043fc71061072e</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::Plugin &gt; &gt;</type>
      <name>get_plugin_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a148e365a2c39213c6436ba6a18266cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::Plugin &gt; &gt;</type>
      <name>get_plugin_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a7e8cad016e5d7caef800a6d2ce4ec4a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_plugin</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a974bbf912073c9bb9401d25d044fad6a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_plugin</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a5b925245b447c0e232cc65ed20a0e377</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::Plugin &gt; &amp;&amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_plugin</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a8882d6a678595c7628cb35f204cd715c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::Plugin &gt; &gt;</type>
      <name>get_plugin_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a1992d8f1d73795e4e030e6958f87d280</anchor>
      <arglist>(const Plugin::SlotFilter &amp;filter, bool first)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::Plugin &gt; &gt;</type>
      <name>get_plugin_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a32ed7e2ddd95257578818aee7f020454</anchor>
      <arglist>(const Plugin::SlotFilter &amp;filter, bool first) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a061baa3597077322c22d9c5ffb4d9cd2</anchor>
      <arglist>(const PluginFeature::SlotFilter &amp;filter, bool first)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::RefPtr&lt; const Gst::PluginFeature &gt; &gt;</type>
      <name>get_feature_list</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a91f3de881bc6eb335bc3054cef9477c1</anchor>
      <arglist>(const PluginFeature::SlotFilter &amp;filter, bool first) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>find_plugin</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>ae76a5dbc4e8b08bd9e468e9e5ed232e5</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Plugin &gt;</type>
      <name>find_plugin</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a28e3834d5b897cc43138f189a3689b37</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PluginFeature &gt;</type>
      <name>find_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a3f8cb880a63e5a2fd11c7eea6f8de91b</anchor>
      <arglist>(const Glib::ustring &amp;name, GType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::PluginFeature &gt;</type>
      <name>find_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a24f644d39ad04a692de3e20f0302967c</anchor>
      <arglist>(const Glib::ustring &amp;name, GType type) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PluginFeature &gt;</type>
      <name>lookup_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aaaa0aa0b22ef267ad81c838f48152ef7</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::PluginFeature &gt;</type>
      <name>lookup_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a84d364a9d6105cbfc93a9854164c8ecf</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scan_path</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a2cd2d39038414066b4ee61249ba785c4</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Plugin &gt;</type>
      <name>lookup</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a8021e492517e1a1e4a78e92a469bc2c9</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Plugin &gt;</type>
      <name>lookup</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a469851665c9ee03a2e0aac5ae8b9cb5d</anchor>
      <arglist>(const Glib::ustring &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>ac407d2b81f5dbd1adbc800ea55bc2754</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PluginFeature &gt; &amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>aa1fc018569670995fdd11c390bfbbe96</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::PluginFeature &gt; &amp;&amp;feature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_feature_version</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a01c8de852df21567c0f56f4bd5d064df</anchor>
      <arglist>(const Glib::ustring &amp;feature_name, guint min_major, guint min_minor, guint min_micro)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_feature</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>ae1f9a1ddd60ef5a7e1f8cddf14ec404f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::PluginFeature &gt; &amp;feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a74bf3766d9d0eabebe46fbf20065c18e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Registry &gt;</type>
      <name>get</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>af906f70b0744b07b68192c6a662bd326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Registry &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Registry.html</anchorfile>
      <anchor>a29d3b839cd0ccbb760c58eba82cb3a0c</anchor>
      <arglist>(GstRegistry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ResourceError</name>
    <filename>classGst_1_1ResourceError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf14be622017655e273f1e32c348fc20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba129ae47035d37a211485052febb4205a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba3c8e9a3ec9b6512921c3aff8219da77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUSY</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bab0eefc887f62f09f925cc185e238aa7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_READ</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa84ad738ac7c0c40ed8877f30201f615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf8e594af0b7334830bc77c26974ceacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_READ_WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba6da673a698e03895bd0e5ab798024ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa219526faaa36a0a89709eb1fd91dc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba0c30a33b52e93c15cef6438a922af9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bafc0dfef45e3b516f7deb83701a994dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bad73c12885c0bd6e58a5b8d05277f0065</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bae8eb90ee41e0cafa6bae59c486fbb027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTINGS</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baeba91807e2b82c25384d4cc7196ee27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SPACE_LEFT</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf94b19406d1e2e6aa445b50bed314693</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AUTHORIZED</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba5d87bfddd254b3dcf29779d8e9eb301e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa11ff906cb13665442739bf214c8efa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf14be622017655e273f1e32c348fc20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba129ae47035d37a211485052febb4205a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba3c8e9a3ec9b6512921c3aff8219da77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUSY</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bab0eefc887f62f09f925cc185e238aa7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_READ</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa84ad738ac7c0c40ed8877f30201f615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf8e594af0b7334830bc77c26974ceacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPEN_READ_WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba6da673a698e03895bd0e5ab798024ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOSE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa219526faaa36a0a89709eb1fd91dc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba0c30a33b52e93c15cef6438a922af9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bafc0dfef45e3b516f7deb83701a994dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bad73c12885c0bd6e58a5b8d05277f0065</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719bae8eb90ee41e0cafa6bae59c486fbb027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTINGS</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baeba91807e2b82c25384d4cc7196ee27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SPACE_LEFT</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baf94b19406d1e2e6aa445b50bed314693</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AUTHORIZED</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719ba5d87bfddd254b3dcf29779d8e9eb301e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a90234857351dc8724ff4daa53426719baa11ff906cb13665442739bf214c8efa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceError</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>afcf5e62ab64c0d2b19cdd9256196e3f0</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceError</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>aa5ff0f801d023ee88abff111ac4ff7dc</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1ResourceError.html</anchorfile>
      <anchor>a2691b2ae2d58562faa9ff4f8c3a87481</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Sample</name>
    <filename>classGst_1_1Sample.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a32f7e459859ac2689689826332113200</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>af4d429c8242f18ff04ec462a62c30aeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstSample *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a5b6ad2584aca66c98f384af39c64cbd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstSample *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a3a4b68951fc023a6b828648c1e2e2d73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstSample *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>affe72701a370f560bd66a35494ccb4ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a4d79815ef67c3b5acec7cdf4ff34d199</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>acf0906e665aebbde4f73fc27fb1a8507</anchor>
      <arglist>(const Sample &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Sample &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>abdeabc55917372126d58444dc32973c0</anchor>
      <arglist>(const Sample &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>adaac389a74dcf70b5d348f8c277e243c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Buffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a4b69ab0419efd2179bf3622b0435d429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a41bf55e683e3925e96278901844e368b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>ab32fd0aadc049e15325779ba1db7be2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>get_info</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a4860e6f45f7d71f767cf725966951d03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Sample &gt;</type>
      <name>copy</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a4f94bbadbcb2c9d4f2334125a308ab0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::Segment</type>
      <name>get_segment</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>a0568261adfda0536fb108e42675beb1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Sample &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>ab1eed76e9c5a792b9b9ef2e066f9ad88</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer, const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps, const Gst::Segment &amp;segment, Gst::Structure &amp;&amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>ab8ab8971e97b2d62e342d483465c27f9</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Sample &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Sample.html</anchorfile>
      <anchor>ae43f587f4f7b453181e0d569bcdb6edb</anchor>
      <arglist>(GstSample *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::SDP::Key</name>
    <filename>classGst_1_1SDP_1_1Key.html</filename>
    <member kind="function">
      <type></type>
      <name>Key</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a873a9a2bdd5b39553942722c17b99e87</anchor>
      <arglist>(const GstSDPKey *gobject_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Key</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a19ec1ff286f6c21d8cb3f4f11351263d</anchor>
      <arglist>(const Key &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Key</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a123758f9c4e3c7588729e63e94a098d7</anchor>
      <arglist>(Key &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Key</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a2bcadfbba4a96125341acbd564579b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstSDPKey *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>ac98e7fb5a6d1b7db0c93bf11062b311c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstSDPKey *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a87e8305b5d8842517f0b505edb6c5a36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a92707ac9578eaf6a7ff184b4fcd493f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_data</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>a4fee397366dbb9fad8f710e47c1a981d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstSDPKey</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1SDP_1_1Key.html</anchorfile>
      <anchor>ab8c2ee2c9bf5caf95abeb2e240b6ffd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::SDP::Media</name>
    <filename>classGst_1_1SDP_1_1Media.html</filename>
    <member kind="function">
      <type></type>
      <name>Media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a1142e1c6e0530972e33982359066de8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>aa104f31b03e57c8f06d1ae6a58faaae4</anchor>
      <arglist>(const Media &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a33a0fd3810fb6b31eb6bbefa6976acb6</anchor>
      <arglist>(Media &amp;&amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a8c0f93666baedf58d54cd3f93b93d639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstSDPMedia *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>aa66c1cb80e298b701c9101aef59247a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstSDPMedia *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a1fb8348cec4fdb82194be14d7d57fb81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>as_text</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a81bd4e4a8192fa20898fa9595ddfc7bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a9d8712e25296200192025d842910bf93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>set_media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a4fd269890bc06e18f996dc70b08862ab</anchor>
      <arglist>(const Glib::ustring &amp;med)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_port</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a9aeb6a9fe941ff92426af2cfee54b75e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_ports</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>ace2d98c4dcae1a7ca91c1868d6a00687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>set_port_info</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>ac96b3fcf9d18cb7f354e8014a1cca9f2</anchor>
      <arglist>(guint port, guint num_ports)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_proto</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>acb94c9132ccca4a3ff00e4380c022894</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>set_proto</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>af90b40e40371d64d0dafc82f739f845f</anchor>
      <arglist>(const Glib::ustring &amp;proto)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>formats_len</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>aea0286124b5232d9a40c4d544f678b9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_format</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a8cb4810251ae1fc0135009d1ed832cc2</anchor>
      <arglist>(guint idx) const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>insert_format</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a45588dee4b205911285cdb9933c58e63</anchor>
      <arglist>(gint idx, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>replace_format</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>acf5a0ccae201d62914f38959813644c7</anchor>
      <arglist>(guint idx, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>remove_format</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a53f01246d564d250b4d2721394cdeb11</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>add_format</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>abb7bdd16862af51f6c2946007a2b1886</anchor>
      <arglist>(const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_information</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a3e3f410f6a613c165cf931180f9fa3ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>set_information</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>acde9eea85a4b11714250889ab62eab65</anchor>
      <arglist>(const Glib::ustring &amp;information)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>connections_len</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>aae5b2bd736939ed70b07985a7a6a2f55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>remove_connection</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a59c428f6153c20e05e915cff52f35bed</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>add_connection</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a801afe3d036bf8f3f542c2dbee4caf7e</anchor>
      <arglist>(const Glib::ustring &amp;nettype, const Glib::ustring &amp;addrtype, const Glib::ustring &amp;address, guint ttl, guint addr_number)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>bandwidths_len</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a1d39a466619fb5afb9477d11494775f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>remove_bandwidth</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>ad40f3a719a2ab4b955c8e3655a561128</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>add_bandwidth</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>abaee39a4dedc621a2a0deec839e345cf</anchor>
      <arglist>(const Glib::ustring &amp;bwtype, guint bandwith)</arglist>
    </member>
    <member kind="function">
      <type>Gst::SDP::Key</type>
      <name>get_key</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a3e1eabb7bd7a6a3223bc0af44d9a049e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>set_key</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>ad2d615a88a3f88b6cbfff54053945c50</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>attributes_len</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a4769dc0c700accd5c77dd31852364844</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_attribute_val</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>abecf003677addad89a5eb8241ebee850</anchor>
      <arglist>(const Glib::ustring &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_attribute_val</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>af10941aaf6b18a2d03c0fa443921e638</anchor>
      <arglist>(const Glib::ustring &amp;key, guint nth) const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>remove_attribute</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a0687f63d4945146514a63b403b4936db</anchor>
      <arglist>(guint idx)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>add_attribute</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a69b9fcc92d7cfd4d069e9bdf85990602</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps_from_media</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>af23ae9a93482e62daf67c7f782b7257b</anchor>
      <arglist>(int pt) const</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>attributes_to_caps</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>abb3d179f6c4a421125789eddac4ccf41</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstSDPMedia *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1SDP_1_1Media.html</anchorfile>
      <anchor>a9be17d0f5ecbfbf3623ce7df15539368</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Segment</name>
    <filename>classGst_1_1Segment.html</filename>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a93349f552c878d0cfc864ddcd5223c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a53d348dc091f1d60b49ca4f5b3b7daa7</anchor>
      <arglist>(GstSegment *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>ae2091311c2538ace8a40689a9187c93e</anchor>
      <arglist>(const Segment &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Segment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>ab136f825fb986624e7073996e9c38b6c</anchor>
      <arglist>(const Segment &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>af417a62312f82257fc85866e7347c229</anchor>
      <arglist>(Segment &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Segment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a2fbc8b157cef609bb8f3d9fc4de29154</anchor>
      <arglist>(Segment &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Segment</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>abce8f45c753a75a8fb056fc75f3eb0f7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>acf00ddb94538954e5b0e809960a61ab5</anchor>
      <arglist>(Segment &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GstSegment *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a27d809117a1d68a72404f6c2f3499b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstSegment *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a2f06d6011c377af566adb22ac6978fdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstSegment *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a3c336663dcae8f657804ff4fc3b145ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clip</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a5578ab3582b55ca74a4df2c5fbd9f890</anchor>
      <arglist>(Format format, guint64 start, guint64 stop, guint64 &amp;clip_start, guint64 &amp;clip_stop) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a07ebca2ab8b587993047db0b1850aa9f</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_seek</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a0a026748daacd1571401f9831124c540</anchor>
      <arglist>(double rate, Format format, SeekFlags flags, SeekType start_type, gint64 start, SeekType stop_type, gint64 stop, bool &amp;update)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>to_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>aa26a00316351932d25fe77758cb52fb6</anchor>
      <arglist>(Format format, guint64 position) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>to_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a781ba80af647919843592bae3e5c8332</anchor>
      <arglist>(Format format, guint64 position, guint64 &amp;running_time) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>to_stream_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>ab6d394de5e257c183af45b8cabf37432</anchor>
      <arglist>(Format format, guint64 position) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>to_stream_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a2d8a25bfa176cddcd460196eb614ab5b</anchor>
      <arglist>(Format format, guint64 position, guint64 &amp;stream_time) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>to_position</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a1d3a83004f1fd8e57229dd7f7f37fda6</anchor>
      <arglist>(Format format, guint64 running_time) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>aacf77b95725d2508a5fe2c823b6563f7</anchor>
      <arglist>(Format format, guint64 running_time)</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>position_from_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a8126b6bea807f78455ba3e67e2aa75ad</anchor>
      <arglist>(Gst::Format format, guint64 running_time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>position_from_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a9e17db45c9b31b3d87f90dc48a4641d1</anchor>
      <arglist>(Gst::Format format, guint64 running_time, guint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>position_from_stream_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a643547d4e4b6524028115dabe78cb198</anchor>
      <arglist>(Gst::Format format, guint64 stream_time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>position_from_stream_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a153471e95af48d99051fd3cb2d18bd1f</anchor>
      <arglist>(Gst::Format format, guint64 stream_time, guint64 &amp;position) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offset_running_time</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a4f4aeb7786d52be9c06720f3af3fa50a</anchor>
      <arglist>(Gst::Format format, gint64 offset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>ac1e673082ad11bd93395f534adc49125</anchor>
      <arglist>(const Gst::Segment &amp;s2) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>acacd8e38d643f0fa2985a4ed9bbb2fe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstSegment *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a4c39d26385a85f298f521219250e2d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a39ca5c00e488027ccb59f3e9384246c9</anchor>
      <arglist>(Segment &amp;lhs, Segment &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gst::Segment</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Segment.html</anchorfile>
      <anchor>a5280aac4c1d3e3a26c0dcf9af1a173da</anchor>
      <arglist>(GstSegment *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::StaticPadTemplate</name>
    <filename>classGst_1_1StaticPadTemplate.html</filename>
    <member kind="function">
      <type></type>
      <name>StaticPadTemplate</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>aafa6513ddd7d837e856565d95a6b6864</anchor>
      <arglist>(const StaticPadTemplate &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StaticPadTemplate &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a13c9e55defb8e0febce94b39e25be164</anchor>
      <arglist>(const StaticPadTemplate &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticPadTemplate</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a09af1520e9d6eee4c309f77fedd57f6c</anchor>
      <arglist>(StaticPadTemplate &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StaticPadTemplate &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a1b2dfb9c0ec3b4acdf3ac29103035579</anchor>
      <arglist>(StaticPadTemplate &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticPadTemplate</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a2b31b1ffcac443e4ce625e2543b5e3e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticPadTemplate</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>abd483e3ef99a2d0ffe2ea112e1443368</anchor>
      <arglist>(const GstStaticPadTemplate *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GstStaticPadTemplate *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a6327f5969a645e74d683feefe5a786b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstStaticPadTemplate *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a1370f1a6f2b8cf199d8442beb2f18f71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a3da35eae82bda0b640d4241dfc720348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a5c0bd6ccaa7ca68f4e92b3395cd93b84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::PadTemplate &gt;</type>
      <name>get</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a8a26d6224183afedd98be9ee7034a8af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name_template</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a8e71a14ed6e695c223bcaf4e7916cabf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadDirection</type>
      <name>get_direction</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a1dbcf32db9ffc1cdd13cf74e83d1edaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PadPresence</type>
      <name>get_presence</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a846bb8f04435c2c11e10422502cb8fab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>aa506edf57a3cb8581eb6dff88298c170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstStaticPadTemplate</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a7e86019328c8a23d9be53b0fe3138915</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gst::StaticPadTemplate &amp;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a670595b56abfd240fd12381ff2c3d932</anchor>
      <arglist>(GstStaticPadTemplate *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gst::StaticPadTemplate &amp;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1StaticPadTemplate.html</anchorfile>
      <anchor>a23f221973240c4d0b39d00ac7b7c1947</anchor>
      <arglist>(const GstStaticPadTemplate *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::StreamError</name>
    <filename>classGst_1_1StreamError.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a317cd33500a4be23bc66a4376c320ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a95256484863d8228ca9b9e0740dd2936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_IMPLEMENTED</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483adbee6b1a212fc8f4eca7c9640642e14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_NOT_FOUND</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483af16fe11ba8da59eb3213658c19547614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRONG_TYPE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a42118ff54ebb2595e975364c2cd10b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODEC_NOT_FOUND</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acaefe20837baf5e0f58dfd9086081de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECODE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acf420ab1b1a665203c9751b0cbe79edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ac37767ad4f1bdfbc899e2b755019d40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEMUX</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acef731a29e61121db1a4059919e68b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUX</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ac43ec8df65d2ce5b59b00bdcbd468617</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ab42a8897cc5764c1d87d37d32a653d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECRYPT</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a6c40e3f834ad56af569db59cae884268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECRYPT_NOKEY</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a840a2b909df1f4752dc27d9eabd5af06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483add5d3c4f64fe8e96a24861a4600beea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a317cd33500a4be23bc66a4376c320ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOO_LAZY</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a95256484863d8228ca9b9e0740dd2936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_IMPLEMENTED</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483adbee6b1a212fc8f4eca7c9640642e14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_NOT_FOUND</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483af16fe11ba8da59eb3213658c19547614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRONG_TYPE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a42118ff54ebb2595e975364c2cd10b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CODEC_NOT_FOUND</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acaefe20837baf5e0f58dfd9086081de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECODE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acf420ab1b1a665203c9751b0cbe79edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCODE</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ac37767ad4f1bdfbc899e2b755019d40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEMUX</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483acef731a29e61121db1a4059919e68b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUX</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ac43ec8df65d2ce5b59b00bdcbd468617</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483ab42a8897cc5764c1d87d37d32a653d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECRYPT</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a6c40e3f834ad56af569db59cae884268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECRYPT_NOKEY</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483a840a2b909df1f4752dc27d9eabd5af06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUM_ERRORS</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>ae42f8f007b982e873720f904fded6483add5d3c4f64fe8e96a24861a4600beea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StreamError</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>a6f52839b44900f36cf31eb0db6aedf1d</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StreamError</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>afd6fce188859952bd9f88f84af19ee23</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGst_1_1StreamError.html</anchorfile>
      <anchor>a7623e9605334fdcb61de0155e54a432a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::StreamVolume</name>
    <filename>classGst_1_1StreamVolume.html</filename>
    <member kind="function">
      <type></type>
      <name>StreamVolume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a303a5456b70269981c3949fa61a4d6ac</anchor>
      <arglist>(StreamVolume &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StreamVolume &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>aabfc3d3b4670bddb74a103927f9ae9d9</anchor>
      <arglist>(StreamVolume &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StreamVolume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>aaf9142596a78b41506f33577012d7638</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstStreamVolume *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a76d5f3f7c576d9c065236d3d0371b5bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstStreamVolume *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>ad69fa523fc62255f06e41e601bb9100e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_volume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>af7e19cd6ffe4e9a34016dc4a1f133ab4</anchor>
      <arglist>(Gst::StreamVolumeFormat format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_volume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a48a8d9b2681833857d1a2bc4c969921d</anchor>
      <arglist>(Gst::StreamVolumeFormat format, double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mute</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a20b32ba5fd3ca2d5abac97aed637e8ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mute</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a8f6b56437c937bf902af6194818ed864</anchor>
      <arglist>(bool mute)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_mute</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a9f332f7c83085e3482d1a4cf12656dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_mute</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>aa2dc0ca28a0618cf8799d18c204cf169</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_volume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a80946c6134c0fbb66623784f7ca6d4c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_volume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>af96d136f2897b9a0c219ae69ae924fc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a69c94bb6d8be3ece510654a6aa39b2bc</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a679a95349bca2a8d65db72a837e9f686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>convert_volume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a1a7957fdc7d7a846c30168ee4434c267</anchor>
      <arglist>(Gst::StreamVolumeFormat from, Gst::StreamVolumeFormat to, double val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StreamVolume</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>acaaa96999aaf24a063a719b04935a647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::StreamVolume &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1StreamVolume.html</anchorfile>
      <anchor>a6f20e388bfae2c7782963292e258dd29</anchor>
      <arglist>(GstStreamVolume *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Structure</name>
    <filename>classGst_1_1Structure.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::ustring &amp;, const Glib::ValueBase &amp; &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a1414b034c775bd0238d87020a841f54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::ustring &amp;, Glib::ValueBase &amp; &gt;</type>
      <name>SlotMap</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>add31d93450417c4ea3506ed3df9b5be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ad92d30e87ed8c18e2872e59973cbe2a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ac99fb5b3257a4205f4f4c90ea8d94825</anchor>
      <arglist>(GstStructure *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a5474395f398078497d70d5021df87cb0</anchor>
      <arglist>(const Structure &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Structure &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ace55dcfebd40512c8222eaf179f4e666</anchor>
      <arglist>(const Structure &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a23aeb0e9708c9205a40aaf8900d25186</anchor>
      <arglist>(Structure &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Structure &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a71fb2ceda7ccf22fd6577747bd26fe4a</anchor>
      <arglist>(Structure &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>af03c3c9864557677e61c2d19f63ae4ce</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a344861d89298be26cbfb3d7876aa2628</anchor>
      <arglist>(Structure &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GstStructure *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a440da13ffd2ae98a6964fa9f521329ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstStructure *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a4ede546c1716a3754e95aab10dec804f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstStructure *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>af5a36da132583ff8981adb21a085bb33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Structure</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a237a46790324b8039319894422a4a03d</anchor>
      <arglist>(const Glib::ustring &amp;name, DataTypes... data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a488d3f891515199d4a32c63520239b21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstStructure *</type>
      <name>release</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>aed63c5724123f18e5ce1b057854b5590</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a7b0caf6ac133c73f5741b9b32459c300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_name</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>af4942b4efea6a918832d6054223f4263</anchor>
      <arglist>(const Glib::ustring &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a11c8e014029bdadf3a4de916c3bbd08d</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_name_id</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>aa3a4f7f3756cd358a34bd940e6f8c94b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_fields</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a618d623a777769f60d4f814d787fb001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_field_type</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>aa38747f831e6399fd95270d0d7eec5a8</anchor>
      <arglist>(const Glib::ustring &amp;fieldname) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a744349e06b167eea85486dc535e5cef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_nth_field_name</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>aa1b55b98d3b9f221583e57e2850ca95f</anchor>
      <arglist>(guint index) const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ad9af9edf060aaef22ac3a24c444c522d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_field_nearest_int</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a6ab8b3b94828bd9eb35da230141029f8</anchor>
      <arglist>(const Glib::ustring &amp;name, int target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_field_nearest_double</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>abfd8b9e2ac07fb2bdb6435ac0724e04f</anchor>
      <arglist>(const Glib::ustring &amp;name, double target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_field_string</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ad4af1ac2ebf7ddc8b1022b9a200501f6</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a5dddea8868c8833a7e51e41036aa29af</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_field_boolean</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>af729a598f1413607d32a55d0bf6b68d5</anchor>
      <arglist>(const Glib::ustring &amp;name, bool target)</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>intersect</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>afadb6c5252aa9a145c92f39e7d3d6b15</anchor>
      <arglist>(const Gst::Structure &amp;struct2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a9d568444eaa364604fc5729aa693eda9</anchor>
      <arglist>(const Gst::Structure &amp;struct2) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subset</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ab17a64b07451dee994b3e1823fe644db</anchor>
      <arglist>(const Gst::Structure &amp;superset) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_intersect</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ae461c9b47cd124739c0a5afc41829297</anchor>
      <arglist>(const Gst::Structure &amp;struct2) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fixate</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a20e505ba4f06745fd89d416cf3637920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_flagset</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>afc76cdd79061435cbf051a5846e7a5c1</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, guint &amp;value_flags, guint &amp;value_mask) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ae1c75debca2526e821823b8fdf83c269</anchor>
      <arglist>(const Glib::ustring &amp;fieldname) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ac0662918d4f80b89890d2c927c821e60</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, GType type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a26fc5c89821c37be79d8028bcee9f54f</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ae1d28cf8cf56e95f5e4932a629f1ab9a</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, Glib::Value&lt; DataType &gt; &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a30a40f0c46cc679d51306e3f1be11bde</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, GType enumtype, int &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a2e3856f2a3d2dab85eaeb21dea86e68f</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, DataType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a5f28502e5b03a6d3d6c5dbeed13e90ba</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a0ae5c63cea1465c1c34269ab564f7f57</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, const Glib::Value&lt; DataType &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>aa6d37c28c193d3d321c022d5da894226</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fields</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a609e74987ec8a42dda9ba4cd63912886</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, const DataType &amp;value, DataTypes ...further_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ab761c00c55b2c0d9487266e6ff2b4bd1</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, GType enumtype, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a4920fd5c71db0ab9c4c24c78776d9f9d</anchor>
      <arglist>(const Glib::ustring &amp;fieldname, const DataType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_field</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a4f57905cae8962703ba13421180b2e72</anchor>
      <arglist>(const Glib::ustring &amp;fieldname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>foreach</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a4139aa262f2e298ebe0ac12f09346ff9</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map_in_place</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a074305057b16c690c05290c7e107bef0</anchor>
      <arglist>(const SlotMap &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fixate_nearest_fraction</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>af044be4fe0aa64dc257cad8c2223dc91</anchor>
      <arglist>(const Glib::ustring &amp;field_name, const Gst::Fraction &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a0c464dd08196306ffdf6a89f408df477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Structure</type>
      <name>create_from_string</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ab37741d7ed7e255902eba5d3e5fbe821</anchor>
      <arglist>(const Glib::ustring &amp;the_string)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstStructure *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a975e4e633660e1d7971170ba61deabc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>a9b9cde88666d86f6ae161c3ee1bc73a6</anchor>
      <arglist>(Structure &amp;lhs, Structure &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gst::Structure</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Structure.html</anchorfile>
      <anchor>ab1dbd4cc5c5ecfd9a6c8b82c1ce55179</anchor>
      <arglist>(GstStructure *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::SystemClock</name>
    <filename>classGst_1_1SystemClock.html</filename>
    <base>Gst::Clock</base>
    <member kind="function">
      <type></type>
      <name>SystemClock</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>ae595f14a4945c2ac2d05b426b3cc0a69</anchor>
      <arglist>(SystemClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SystemClock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a68e8209abef5057ac1774a23027d1887</anchor>
      <arglist>(SystemClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SystemClock</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a738ea2ef942719e0881cb34196f5fe0b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstSystemClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a3ab62611768fae656296202660905223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstSystemClock *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a127973cd3eb023166a0c6aa6ad8d6469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstSystemClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>acfcaad3c7fee0e7e51c98a9d152fe00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>aaed1a7769e0b7a06cbd826ff23e7fc24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Clock &gt;</type>
      <name>obtain</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a7229d333b3fd486620b2d61449d70e92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SystemClock</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a4b62c666968676a7aaee65f4e11a072e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::SystemClock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1SystemClock.html</anchorfile>
      <anchor>a17fd2050d25fc7fa78edebdc4ffb28ab</anchor>
      <arglist>(GstSystemClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TagList</name>
    <filename>classGst_1_1TagList.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ac3b09e58ad72048815833f0d8146e79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TagList</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a16dd5b2104b87abf8887be54b97d65aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TagList</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aa796f1cc15bc78963ac83509da3dc69a</anchor>
      <arglist>(GstTagList *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TagList</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a9c1721841b8db9c7974526aec4f5ccec</anchor>
      <arglist>(const TagList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TagList &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ab85fa7c53e27d67439b3b1b2607af722</anchor>
      <arglist>(const TagList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TagList</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a26975bd241f730755d7f6fdd14c7fef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a237efe6c013ca9ddb689552b660a1844</anchor>
      <arglist>(TagList &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>GstTagList *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ad3643125012c5552796949181eebe5a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTagList *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a04a80b7c00b0c1abac175fe7712045cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTagList *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a2ccd897ccf0beb86493a37a048592ab8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aea878b0944d22416645d7eb8d667091b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_empty</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a0976d109c8005e47ea50435601d01bcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a4c757e36caaf3359a229eca2e2ba0ff8</anchor>
      <arglist>(const Gst::TagList &amp;other, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>merge</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ab7d7050d52edd52b7cb3404ffb83adaa</anchor>
      <arglist>(const Gst::TagList &amp;other, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>size</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a7d05d620a88de8d844deacbd2dc161f5</anchor>
      <arglist>(const Glib::ustring &amp;tag) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a1d6454ca2a885f097bcae7a99f6f66b0</anchor>
      <arglist>(Tag tag, const Glib::ValueBase &amp;value, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>af7c1171fe762d05e6afcf8129157062d</anchor>
      <arglist>(const Glib::ustring &amp;tag, const Glib::ValueBase &amp;value, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a8e5804de0d39ce3844fa409ca23ead4b</anchor>
      <arglist>(Tag tag, const char *data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a5122ab0afa7b3810424aaa912a3d995f</anchor>
      <arglist>(const Glib::ustring &amp;tag, const char *data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>af9ad317293341ac8a7c2e03ea2edc70d</anchor>
      <arglist>(Tag tag, const DataType &amp;data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a14f5e0fcb3c6359ce59f01399ffd44af</anchor>
      <arglist>(const Glib::ustring &amp;tag, const DataType &amp;data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>abb24a872baaa97a33ff423e29d13def7</anchor>
      <arglist>(Tag tag, const Glib::Date &amp;date, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ae9257719bac7141dff5a9d975a9c7580</anchor>
      <arglist>(const Glib::ustring &amp;tag, const Glib::Date &amp;date, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aea189b01e8ed6f29f0f0ff00b54fc572</anchor>
      <arglist>(Tag tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>acf8a1a5297b7e43437c3f9ac25e43637</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ae2c7d53671bd9a0b1b21123c38d2d614</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a3785a6cb71cb07ed93a1abf32e07ee94</anchor>
      <arglist>(Tag tag, Glib::ValueBase &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a5dd6dadfb860884e2deae51db1ac183e</anchor>
      <arglist>(const Glib::ustring &amp;tag, Glib::ValueBase &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ac0d93d8adc4ac3c5c89ae7758d19b282</anchor>
      <arglist>(Tag tag, guint index, Glib::ValueBase &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_value</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a3e03b1598e2eac282ee19611efa78724</anchor>
      <arglist>(const Glib::ustring &amp;tag, guint index, Glib::ValueBase &amp;dest) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ac6fde61c92ae39e3047610a1724f3e4e</anchor>
      <arglist>(Tag tag, DataType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aa59732c9f7372b5a04d32624c57e3376</anchor>
      <arglist>(const Glib::ustring &amp;tag, DataType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aed9948da1667a6f7d7013604e7fe03f2</anchor>
      <arglist>(Tag tag, guint index, DataType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a0f47588661d16bc3f1ab892b503b99c1</anchor>
      <arglist>(const Glib::ustring &amp;tag, guint index, DataType &amp;value) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>exists</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a03ade73c0b5045543950f1b52938379d</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>aab4f676fc20d9cb7a87750ebda3a0a3e</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_nick</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ae4eee6297a86ece563c7cbe5b13d7895</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ac24b5d3a7233113708b48bd1c9f2b054</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Gst::TagFlag</type>
      <name>get_flag</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a260fd48f9a0e8b1097170a0296c4b52d</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_fixed</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>abb77df5f2a328019f77ee0179eeb82c3</anchor>
      <arglist>(const Glib::ustring &amp;tag)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstTagList *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a123f5ea250ad0f98270127c11c08d1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>ab098442d9b5520dab93a86de48df1609</anchor>
      <arglist>(TagList &amp;lhs, TagList &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>wrap_taglist</name>
      <anchorfile>classGst_1_1TagList.html</anchorfile>
      <anchor>a5038eef8891a197b47e03b0cf1d40453</anchor>
      <arglist>(GstTagList *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TagSetter</name>
    <filename>classGst_1_1TagSetter.html</filename>
    <member kind="function">
      <type></type>
      <name>TagSetter</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a5af5595e221887ea1d893540c3b493bf</anchor>
      <arglist>(TagSetter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TagSetter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a98a32c4a9d92b8bd90264623455b98da</anchor>
      <arglist>(TagSetter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TagSetter</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a5f9156b1d5b8652ae2907026810fb840</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstTagSetter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>acc3ba0e59a03186d9ce3ec0456543d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTagSetter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a298706ef62d0bb094bcee8c900680350</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_tags</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a4ac993e2fbd4397b76a6f9acfdf1eb42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge_tags</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a252d57fb8831206eed177cdd7003cb6b</anchor>
      <arglist>(const Gst::TagList &amp;list, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a7079f8d029fa6503b0d7b65c5d6ec656</anchor>
      <arglist>(Tag tag, const Glib::ValueBase &amp;value, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>ad371020f3ab73ae433f1387480723688</anchor>
      <arglist>(const Glib::ustring &amp;tag, const Glib::ValueBase &amp;value, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a75f4a8d8f8b4ed73f6a154e8eec91f14</anchor>
      <arglist>(Tag tag, const DataType &amp;data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>af671c4f7d22cf83a554cfbfcb5ebd67b</anchor>
      <arglist>(const Glib::ustring &amp;tag, const DataType &amp;data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>ac0daa3a3fa0467acf894b63841e55875</anchor>
      <arglist>(Tag tag, const char *data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_tag</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>ab7a664c610a4b22a58fb050b515e8b56</anchor>
      <arglist>(const Glib::ustring &amp;tag, const char *data, TagMergeMode mode=TAG_MERGE_PREPEND)</arglist>
    </member>
    <member kind="function">
      <type>const Gst::TagList</type>
      <name>get_tag_list</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a5940438dff52fc31664f51c6ba8626d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tag_merge_mode</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>afd1ca503dd22cd388bf955c25cf2ac51</anchor>
      <arglist>(TagMergeMode mode)</arglist>
    </member>
    <member kind="function">
      <type>TagMergeMode</type>
      <name>get_tag_merge_mode</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a4ffdd8f5d8ec4a08173f86f94231ee0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>af31ae2361e881c5dae9d166f09df47cb</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a67683c2774d613be7215f5d26f85dffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TagSetter</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a15d9477b784da1325e7a9674be3c57f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TagSetter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TagSetter.html</anchorfile>
      <anchor>a16fb6b39ec48f5c55c5f88c01ff86d67</anchor>
      <arglist>(GstTagSetter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Task</name>
    <filename>classGst_1_1Task.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotTask</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a8beeacee2d56c741fc040907280cb17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; Gst::Task &gt; &amp;, Glib::Threads::Thread * &gt;</type>
      <name>TaskThreadSlot</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a233ad3e9fb9d647cc8494cee9177ea4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TaskThreadSlot</type>
      <name>SlotEnter</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a56596bffdae65216d6ee82b34655653b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TaskThreadSlot</type>
      <name>SlotLeave</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>ae7fb7c0eee1432ac5257c397c7b15531</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Task</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a0896636ec523a985c38de58f2a586877</anchor>
      <arglist>(Task &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Task &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>ac974b736eca1b9abd3b69d38dd928a9d</anchor>
      <arglist>(Task &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Task</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>aa0ed67079dd3896e8d5455946bc0574d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstTask *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a0afc879aea9ce759ebef00153323bedb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTask *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a62c401e0cf30801c0d66fe9f6add7aad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTask *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>ac05849ccf4a0eadbf06d374c2590fb2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lock</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a699c7e3ef1d83ef12e115ddef4dabff0</anchor>
      <arglist>(Glib::Threads::RecMutex &amp;mutex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pool</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a7521fdeb163b520e755c26abff67f7f2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::TaskPool &gt; &amp;pool)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TaskPool &gt;</type>
      <name>get_pool</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>ac61eafe0fc4a94797b22cf6b3a87b93b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::TaskPool &gt;</type>
      <name>get_pool</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a98905627d2594936902cca7d827ab39f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enter_slot</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a927a280a32371d9dcf8cdf9a743199ad</anchor>
      <arglist>(const SlotEnter &amp;enter_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_leave_slot</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a081c945a9ee4db3a3eafec6d43004dea</anchor>
      <arglist>(const SlotLeave &amp;leave_slot)</arglist>
    </member>
    <member kind="function">
      <type>TaskState</type>
      <name>get_state</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a0ecb29ff9a01efb165578b46472edbc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>ac6454e056be57cb740dadf7b874f8b9f</anchor>
      <arglist>(Gst::TaskState state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pause</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a6afbed5e4a327947914348d0272dfaf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a4ae8c981941f9ef15f163f7cbaf2d050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a8adc6a95f8d392b5cb16ffd7b2c6650c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>join</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a6713350fd3d42ea4042b26e0528b35a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a432c5e8875cd89c3e1ffc49c7c3310c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Task &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>a0a5a1ccb3777e176af0117e924e049a8</anchor>
      <arglist>(const SlotTask &amp;task_slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cleanup_all</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>acb6fd916c18636c9c7c0a66253f661b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Task</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>acf7d42ba74a5dcd38bce62bf2839b277</anchor>
      <arglist>(const SlotTask &amp;task_slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Task &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Task.html</anchorfile>
      <anchor>acafd0a6a4acab8c7dea274aefda4bc3e</anchor>
      <arglist>(GstTask *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TaskPool</name>
    <filename>classGst_1_1TaskPool.html</filename>
    <base>Gst::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotPush</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a08de3ae178ec8cb586aa447f2c58b548</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TaskPool</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a7a9df557cd5b87689bed0137e0e2c83d</anchor>
      <arglist>(TaskPool &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TaskPool &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a4784d05082ea642aca131779c09aaa9a</anchor>
      <arglist>(TaskPool &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TaskPool</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>af06bd0302fe63d132c587ac7a5710efc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstTaskPool *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a4ac83b20ffdffe4a9abb55df881db45c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTaskPool *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a114b2bdba8e0e43ab6a74f339a96089e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTaskPool *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a95e248e6cdd68ee0e000bb5c76e2d6c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a73c6b1eff956b5a23fb17b91a404541e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gpointer</type>
      <name>push</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>ac83e65e642ba730de7624103f1b2545d</anchor>
      <arglist>(const SlotPush &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a3c639b26335b701fbf39a0353e204c86</anchor>
      <arglist>(gpointer id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>ad9e186ce45550f402853fbda38c25e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepare_vfunc</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a1ad3c19d60a0700c9efc9ed3a1e7da3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cleanup_vfunc</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a7682a91ae4cb35e067443b99b1add9e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual gpointer</type>
      <name>push_vfunc</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a2d0315ac1fa3d04bbe68e9ab5a7edd50</anchor>
      <arglist>(const SlotPush &amp;slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>join_vfunc</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>acc81a810868020bbd8f9db52627b1462</anchor>
      <arglist>(gpointer id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>afd760c00c8c3e1ff9786fee5a9821cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TaskPool &gt;</type>
      <name>create</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>a647c480b5a600b14f954e536a4d55e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TaskPool</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>ab83318f73cf7466cf55fc3405333d98b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TaskPool &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TaskPool.html</anchorfile>
      <anchor>ae50baa545cf60a4412841ef455682ad9</anchor>
      <arglist>(GstTaskPool *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::Toc</name>
    <filename>classGst_1_1Toc.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a8f037a85c3f670f0cda0bb8ebec6d16a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a8d1d04e373164328e09d191aa387610c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstToc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a6ecc6401447f6555bcd4682619b9c98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstToc *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>aec4678303ca7ccd218e3f241d8299d86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstToc *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a4fa7945a719c62fd37c36cb0470b84ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Toc</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>ad60ecd412fedd60316429aa3acc92162</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Toc</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a73f8373ff0ee0254d1934234fb3e050e</anchor>
      <arglist>(const Toc &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Toc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>af3bdfb1c152ffdf74a1e7074615d9aaf</anchor>
      <arglist>(const Toc &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_entry</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>afa38388985755fd5fdf1ac507b4e9e51</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::TocEntry &gt; entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>ae7207f85e8ae8c2254e0f1efd73e317d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a85d359005aff99e965bd9a5e8f27fb5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tags</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a19d33b3522add425f7bc687f62d71cf5</anchor>
      <arglist>(const Gst::TagList &amp;tags)</arglist>
    </member>
    <member kind="function">
      <type>Gst::TagList</type>
      <name>get_tags</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>acb8cfc0dbf716df312da7f38a402f1a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::TocScope</type>
      <name>get_scope</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a46533537128e1e929e387a507bdcd006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TocEntry &gt;</type>
      <name>find_entry</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a11b8714b13b165582a611493d3a15207</anchor>
      <arglist>(const Glib::ustring &amp;uid) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>a991844a7d0f7c0e434536b9c38726739</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Toc &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1Toc.html</anchorfile>
      <anchor>abd16b5a0fc8cc880c1b757f8bf4f1e87</anchor>
      <arglist>(GstToc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TocEntry</name>
    <filename>classGst_1_1TocEntry.html</filename>
    <base>Gst::MiniObject</base>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a06b2e7a9b299265d948708ad6aa6fb79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a7a6c1d9245dcebee5285607c27f98ac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTocEntry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a395e62f1070e9902dcfc4e9064485121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTocEntry *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a358fc080453b59562835cb8d66fdf425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTocEntry *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>ab84b794b510de9e14d8444b1bea27179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TocEntry</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a05c97e74fb1bccc249fba96d13e5c7fb</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TocEntry</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a23ea3c1998a913846ffcf5565b297ffd</anchor>
      <arglist>(const TocEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TocEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>aabefa413d4dc9f84e70111f24a5a5aba</anchor>
      <arglist>(const TocEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TocEntryType</type>
      <name>get_entry_type</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a73e024e39a04ba61c4ef5703cb49c498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uid</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>ad7359db2c267c0eba6b404c8fef40536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_sub_entry</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a5c85fa0c5cb47a3288db5c610573eeb5</anchor>
      <arglist>(Glib::RefPtr&lt; Gst::TocEntry &gt; entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_alternative</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>ae515c36a27f01850d591d3680cf088e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_alternative</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a66e727dc53268bc904118d1561d0b98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sequence</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a89127d7ac585d5e2bc4f6de667b32e05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sequence</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>ad8a85a74a5a688184ae6142bbbb755fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TocEntry &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a107c8219734d4965963cd686633d6a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_start_stop_times</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a65655f6880849fb8498b560a81744eeb</anchor>
      <arglist>(gint64 start, gint64 stop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_start_stop_times</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>abc1a35bfb2729cd1718805c3e3a4bb97</anchor>
      <arglist>(gint64 &amp;start, gint64 &amp;stop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_start_stop_times</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a922b924bf489d45a92562029ba327595</anchor>
      <arglist>(gint64 &amp;start, gint64 &amp;stop) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_loop</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a7ddca8d649afefc1cc5df691f986ed07</anchor>
      <arglist>(Gst::TocLoopType &amp;loop_type, gint &amp;repeat_count) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_loop</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a0e51811575e3e66493f3c767d3544006</anchor>
      <arglist>(Gst::TocLoopType loop_type, gint repeat_count)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Toc &gt;</type>
      <name>get_toc</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a35ac8102af9840ba589729c8741062fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>ac0e828aea346dbd6d749b7a4c3817c27</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TocEntry &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TocEntry.html</anchorfile>
      <anchor>a1d6ce4ec8654f9e637ebe33aae29ef5f</anchor>
      <arglist>(GstTocEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TocSetter</name>
    <filename>classGst_1_1TocSetter.html</filename>
    <member kind="function">
      <type></type>
      <name>TocSetter</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a4ac9abd020bff42ffb5f1e2b89d6ee2f</anchor>
      <arglist>(TocSetter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TocSetter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a794cbfd44548afcaa5854481e938f954</anchor>
      <arglist>(TocSetter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TocSetter</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a77df256f14f7ae2a64929cff365b1813</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstTocSetter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a1131d80003ef12c514db9c3532be9c87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTocSetter *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a6c0401cd1d8202978d281be436318c3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_toc</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>abf4854ad5ef6bf2d52ae0a40d3783316</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Toc &gt; &amp;toc)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Toc &gt;</type>
      <name>get_toc</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a73794f2ad1f5fe25d6a658f772fea696</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a3ad105f01cc1e59c048cde5ff9d9a411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>aa54b873cc5d579c567c22711b22dd20b</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a4f70102aafa59f7323d6102618e76741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TocSetter</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a34f4e630f7f9b1e6489917445ba6c800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TocSetter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TocSetter.html</anchorfile>
      <anchor>a311434f1e346a62c2b7b622021dc4fc9</anchor>
      <arglist>(GstTocSetter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TypeFind</name>
    <filename>classGst_1_1TypeFind.html</filename>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotFind</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>aaf4644e28e689ecd8b42833d155770ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeFind</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a89af4300d24bb0a55ede8ed19975a05c</anchor>
      <arglist>(const TypeFind &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TypeFind &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a4cbec800c119806e90ac53c7f25d5188</anchor>
      <arglist>(const TypeFind &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeFind</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a8bf210594c5174fbf3256aab0845d79d</anchor>
      <arglist>(TypeFind &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TypeFind &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>aa51e9d7e5489827698faf7fa47007277</anchor>
      <arglist>(TypeFind &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeFind</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a9e9f150abe3416c6592e9bafab2d8530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeFind</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>aa7c0c2af9e6c44964d69414d9d08080e</anchor>
      <arglist>(const GstTypeFind *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GstTypeFind *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>af9a955fc28d3c462cdf85dc148bf1530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTypeFind *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a99035df8655e6e5a669f2024af9b5eb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; guint8 &gt;</type>
      <name>peek</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a41d46006403e96893a3f6598b5b06530</anchor>
      <arglist>(gint64 offset, guint size) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suggest</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>abb4aceece6749802d74734b4b088831f</anchor>
      <arglist>(guint probability, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps) const</arglist>
    </member>
    <member kind="function">
      <type>guint64</type>
      <name>get_length</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>aa1c11ba0a0ce33b34ea0ffba4331d19b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a3c94474114b60f8e53512c1ba945bcd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a0354c8736dd1f25262bb1ec8674e5b7e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin, const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::StringArrayHandle &amp;extensions, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>ae92f194a3e1fc11127946fb2fd93d5ae</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin, const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>ac32b6a0d9c92ce70ad695407b57ef6d7</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin, const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::StringArrayHandle &amp;extensions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>ac3859a76661ed970937983f60fed546c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Plugin &gt; &amp;plugin, const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a9faf8ffa81f75433ca7e290944d913f0</anchor>
      <arglist>(const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::StringArrayHandle &amp;extensions, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a8893e28140c3e469f9b580468d011f49</anchor>
      <arglist>(const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a8a019c1d799c1b6e5b64dae7aa7db571</anchor>
      <arglist>(const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot, const Glib::StringArrayHandle &amp;extensions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>register_slot</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>aef8cacdb5aab12a8f508baac7577c046</anchor>
      <arglist>(const Glib::ustring &amp;name, guint rank, const SlotFind &amp;find_slot)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstTypeFind</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a4863373e2b0b4ed7e772f61adde31656</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gst::TypeFind &amp;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>a3b94cf7b4f37c9d133c39747be145ff3</anchor>
      <arglist>(GstTypeFind *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gst::TypeFind &amp;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TypeFind.html</anchorfile>
      <anchor>ac8aca77ab94e0a27c38662ab2498ebc2</anchor>
      <arglist>(const GstTypeFind *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::TypeFindFactory</name>
    <filename>classGst_1_1TypeFindFactory.html</filename>
    <base>Gst::PluginFeature</base>
    <member kind="function">
      <type></type>
      <name>TypeFindFactory</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>aee3e9bd6cbfba48630504ecb815e0f86</anchor>
      <arglist>(TypeFindFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TypeFindFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>ad03934305491664c78090fed48329223</anchor>
      <arglist>(TypeFindFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TypeFindFactory</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>aafb03c93e4bf239e4157f62f74d4a50a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstTypeFindFactory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a2a0169b12d561e099d6b1f2a4df2f44c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstTypeFindFactory *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a50486b52c6579eefedd2520a482bc5e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstTypeFindFactory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a61d30b1daf12ed3abd899d083de1f9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_extensions</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a81967509a4b347e38c7e1f7098cfed5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>ab155f82333a64cc2be01563c4d86ccb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gst::Caps &gt;</type>
      <name>get_caps</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>adc9726094e63d411f52122573cc75c1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>call_slot</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a54f54f364ae46ee9f06c42aa03131687</anchor>
      <arglist>(Gst::TypeFind &amp;find)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_function</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>ad67fd1077c1000b4d279c6971bca88ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a0327c2b3786eeb61118beb7950b693ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ListHandle&lt; Glib::RefPtr&lt; Gst::TypeFindFactory &gt; &gt;</type>
      <name>get_list</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a8e153083f91dc4d63e12eefc0c89957f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::TypeFindFactory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1TypeFindFactory.html</anchorfile>
      <anchor>a08b04b2a02888a205972f43fec20164c</anchor>
      <arglist>(GstTypeFindFactory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::URIHandler</name>
    <filename>classGst_1_1URIHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>URIHandler</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ae6329d8706447d8ca1a61793025a03ef</anchor>
      <arglist>(URIHandler &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>URIHandler &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ac31328b351a9ab4c573a14575c1cec53</anchor>
      <arglist>(URIHandler &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~URIHandler</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ad785b3d98fddcf305f3958054a2510ed</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstURIHandler *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a128db2798af5221b16e323054ebbd0f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstURIHandler *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a57e3908ffd6e70c8c6b854671e3e9b85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>URIType</type>
      <name>get_uri_type</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a52f0e78afb446cc80d4f201b3a825af2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_protocols</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a46ff404319c6875e483e4a1efbbf6160</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>adc5131152c031d9c580596314c837025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_uri</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a87d8fd71a5dbd8643daef02bf16ed08e</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_uri_vfunc</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a41350b725c33feeae857a2f01f31e3c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_uri_vfunc</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>aa1e1d6182736d9fc326e076593fa7fae</anchor>
      <arglist>(const Glib::ustring &amp;uri, GError **error)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const gchar *const  *</type>
      <name>get_protocols_vfunc</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ac5ed817fb64c96bc91603fa1290eb6f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual URIType</type>
      <name>get_type_vfunc</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a6b6fe260ab9f5afcc983e80a9cf5c451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a1961e56b14fb7dd548b228d24f090709</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a91f4cab6baf111ef49d0ee6db3e95e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>protocol_is_valid</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a306fd9f4715ed1ff7e116ee170fd09a4</anchor>
      <arglist>(const Glib::ustring &amp;protocol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>protocol_is_supported</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a7531eca3b37ef95f224c0ad80700d3bc</anchor>
      <arglist>(const Gst::URIType type, const Glib::ustring &amp;protocol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>uri_is_valid</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ae666b6dba4da1ea80e04ad5bd14d54ce</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>uri_has_protocol</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a6fef87498aa1778fc73e95a04744f2cc</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Glib::ustring &amp;protocol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_protocol</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a897d47103ed1619a8606cf3f527d7e2d</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_location</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>aa3e505a848f4d31e0d973fee77d7be80</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>construct_uri</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a8ba792037309809d38aa138f2c849473</anchor>
      <arglist>(const Glib::ustring &amp;protocol, const Glib::ustring &amp;location)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>filename_to_uri</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a33d62fabdf85db5ea28cd3fc0ac37ec8</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gst::Element &gt;</type>
      <name>make_element_from_uri</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a238d0d70d7569c03c508f517ae40957d</anchor>
      <arglist>(const Gst::URIType type, const Glib::ustring &amp;uri, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>URIHandler</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>ae44e8856d2cbae6d2007bf8e83456471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::URIHandler &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1URIHandler.html</anchorfile>
      <anchor>a6c3b8a1166a567b642ce2458c101b2c4</anchor>
      <arglist>(GstURIHandler *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::ValueList</name>
    <filename>classGst_1_1ValueList.html</filename>
    <member kind="function">
      <type></type>
      <name>ValueList</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>a17cbfeb050549127fd93a2c5958a1c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>size</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>a515e7bff7518328ff0ade7ce72a89f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>acf512d5ef9ed1e2fa1dd44d9635a49f4</anchor>
      <arglist>(guint index, Glib::ValueBase &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Gst::ValueList &amp;</type>
      <name>append</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>a54bc274bf77bc7113cadd92751ba796e</anchor>
      <arglist>(const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::ValueList &amp;</type>
      <name>prepend</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>a5d8556c30010cbd5e7e40cbb6ba0b1ab</anchor>
      <arglist>(const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1ValueList.html</anchorfile>
      <anchor>aabcaf5d7e098ea9b48f2da7418e4356f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoChromaResample</name>
    <filename>classGst_1_1VideoChromaResample.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoChromaResample</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>ab51a40d102514d4a120fcecd21dc2d07</anchor>
      <arglist>(Gst::VideoChromaMethod method, Gst::VideoChromaSite site, Gst::VideoChromaFlags flags, Gst::VideoFormat format, gint h_factor, gint v_factor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VideoChromaResample</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>a75eea98be33f4ca4855d72d5bbb94fe3</anchor>
      <arglist>(GstVideoChromaResample *castitem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VideoChromaResample</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>a3d75ca8b949628a613f39caa5a409fbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstVideoChromaResample *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>a358b39066918c6c2749cdfea8d1fc262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoChromaResample *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>a80ed596a709aa6f05a52539df2ace93f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_info</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>adb7c570832d896481805d12d1d106b18</anchor>
      <arglist>(guint &amp;n_lines, gint &amp;offset) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstVideoChromaResample *</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1VideoChromaResample.html</anchorfile>
      <anchor>a90b1340dbce1b3f3473d18273f2d6feb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoFormatInfo</name>
    <filename>classGst_1_1VideoFormatInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoFormatInfo</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a004b0c61468b36ec4a8e1ed4cd130d53</anchor>
      <arglist>(const GstVideoFormatInfo *castitem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VideoFormatInfo</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a09d384817b442b45e543b19844f292f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoFormatInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a883c011db4a904b55f6056c385723a50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VideoFormat</type>
      <name>get_format</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>ab2f1c72e052ac58ebb2d957209bbbc24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a27f377258259d829f884f2b864407446</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a61cf4774c62a4fd25d473e3245b82fb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a2b8702b9d4fae57590800d419a662220</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_bits</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>aa27a7433923c86124158052a409f7956</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_components</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a64ed9184ed38dba1ee412169189b6bdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_planes</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>a57ae6c3e29bdb1787bc25a40067622e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VideoFormat</type>
      <name>get_unpack_format</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>aff501e6f82f6309adeee37e571c244ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_pack_lines</name>
      <anchorfile>classGst_1_1VideoFormatInfo.html</anchorfile>
      <anchor>acbbd514b7fce975c954dbe5fa1006fa1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoFrame</name>
    <filename>classGst_1_1VideoFrame.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoFrame</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>ab119ebb525a1d956ba228d4726179eda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VideoFrame</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a839533a2cfacead609b65ff5e592377e</anchor>
      <arglist>(const GstVideoFrame *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GstVideoFrame *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a93fc637fc8b4b2aff29300877f668b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoFrame *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a011096ac9308c7845cd2cfe353625fab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a246daf6ab966d35b9bcea2056a248586</anchor>
      <arglist>(const Gst::VideoInfo &amp;info, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer, Gst::MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>map_id</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>ad7d67dd611b82abfe440647d30d0f1f9</anchor>
      <arglist>(const Gst::VideoInfo &amp;info, const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;buffer, gint id, Gst::MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a6725a00e8d1ce2eddde61d51aa6814b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_info</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a676f23de6da267107621bd97f6628c02</anchor>
      <arglist>(const Gst::VideoInfo &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoInfo</type>
      <name>get_info</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a66263b17a09b61d42657ce18abf0e337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>abb10b8d776ad7d61431c918fd1b2ccf7</anchor>
      <arglist>(const Gst::VideoFrameFlags &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoFrameFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>ac3934b04a425e7db7b3532aa4f8528d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a448a8f35e39c054ff49aad8bd63bcc44</anchor>
      <arglist>(const Glib::RefPtr&lt; Gst::Buffer &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Buffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>ad70c62622aa045b0e0374b6d301f8d98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_meta</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a2a4886b8a327c4e0294f19b17827a4d7</anchor>
      <arglist>(const gpointer &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gpointer</type>
      <name>get_meta</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a5a91f218685a1b67eed6283c73a2d7ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_id</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a55de8595faeebcd2b3db9107b2354625</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_id</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a9c5e3d5f322cdddd90ab1c66d87464d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>copy</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a0580222fa1d337ff95f06dfb6597cc86</anchor>
      <arglist>(const Gst::VideoFrame &amp;dest, const Gst::VideoFrame &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>copy_plane</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>af2f3637a86f3a1302cfcd48ec821d1cd</anchor>
      <arglist>(const Gst::VideoFrame &amp;dest, const Gst::VideoFrame &amp;src, guint plane)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GstVideoFrame</type>
      <name>gobject_</name>
      <anchorfile>classGst_1_1VideoFrame.html</anchorfile>
      <anchor>a3cda5b4e3c2b0517c4b16e6ed1c21324</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoInfo</name>
    <filename>classGst_1_1VideoInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoInfo</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a9aa619cb0fd19428ad9ac4679d4713a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VideoInfo</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>afb04994d2ac23050a12f09b24d49898a</anchor>
      <arglist>(const VideoInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>VideoInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a235a7acd3a2ad09f832578716856dc63</anchor>
      <arglist>(const VideoInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VideoInfo</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a6fcabb5051e3ec1085ce700c5187e9f8</anchor>
      <arglist>(GstVideoInfo *castitem, bool take_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VideoInfo</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>abd14ae0d6254b78b101f960fc4d824aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GstVideoInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a3843b9fa68808c5f503e9bade40ad41e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoInfo *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a4c5d59a361715bfbfdca6b7bd18815d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a660af621305eeed28c29369eb5e9a449</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_format</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>aba248152e77e1cd216c0b951e9dfb8c2</anchor>
      <arglist>(Gst::VideoFormat format, guint width, guint height)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>from_caps</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ae00c09651d8793e7f0168aa8d400be5e</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gst::Caps &gt; &amp;caps)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::Caps &gt;</type>
      <name>to_caps</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a3fb789a233650ef1170a049f16423b10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convert</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a155268862c249093846891e0d9bff6a5</anchor>
      <arglist>(Gst::Format src_format, gint64 src_value, Gst::Format dest_format, gint64 &amp;dest_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_equal</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>aee3215d0b91a1104625da0d5b751065e</anchor>
      <arglist>(const Gst::VideoInfo &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>const VideoFormatInfo</type>
      <name>get_finfo</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a38578a3255f7b59d65da74136554dbbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoInterlaceMode</type>
      <name>get_interlace_mode</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a16efaea1bf605bc07f082c14ca1212c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interlace_mode</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a29caa728c997a5a7490f4a85226d6bba</anchor>
      <arglist>(const Gst::VideoInterlaceMode &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoFlags</type>
      <name>get_flags</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a4a9872a98a9fa099bc19ec196c2b2eb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a86516b015475bf2f8b6d3c56a8ed6d31</anchor>
      <arglist>(const Gst::VideoFlags &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_width</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a94ac9606065098ad3893ba2354d203c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a3065085add1454e6021e3794cfe2331d</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_height</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a18d1ff551d9c3fb5ed127f0da2fb205e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_height</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ae2cafa3e55b0de590342f85c7808ee4a</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_size</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>aba54575bb46861ffb20af5e442da20ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a6bd01f03889561332f6cf2cad1b61c70</anchor>
      <arglist>(const gsize &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_views</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ad537ad6fd80fc5133ee9eb8571c5d5b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_views</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a44a505c01b602418373f98a7574cdbcc</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoChromaSite</type>
      <name>get_chroma_site</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a1eaabcc15332619d8e325a62793e071f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_chroma_site</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ada34c5e16274b6549c5c0bc111cea2a3</anchor>
      <arglist>(const Gst::VideoChromaSite &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_par_n</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ac63cba269ad6f48f8d13464499451536</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_par_n</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a5ba05a580bfc96d130fc199cd6c1037d</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_par_d</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a0c93ed245ea288e19b0d60c82041eedf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_par_d</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a5b352488496a6df0b8081c4d8ba8bb78</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_fps_n</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a7566b8aa035e3d13ead11645b88a4251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fps_n</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a7c55f939b4106f24a16bded7e136cbc7</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_fps_d</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>ac4510c48425ddda591dfdc8b735169f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fps_d</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a700d31d65a3ba1ab2a70d0ff74b82302</anchor>
      <arglist>(const gint &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoMultiviewMode</type>
      <name>get_multiview_mode</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a5eff2672e0efc85a7a138d085bdc7cd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_multiview_mode</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>aa86d93aceb019fbb3ae11305438522a1</anchor>
      <arglist>(const Gst::VideoMultiviewMode &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Gst::VideoMultiviewFlags</type>
      <name>get_multiview_flags</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a7630d0fefd377eee7588ad14f0720d32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_multiview_flags</name>
      <anchorfile>classGst_1_1VideoInfo.html</anchorfile>
      <anchor>a9eb30782f3fccd5942010879c65251e5</anchor>
      <arglist>(const Gst::VideoMultiviewFlags &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoOrientation</name>
    <filename>classGst_1_1VideoOrientation.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoOrientation</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ae14e33fe6b4c396dd4641c3c150d06a0</anchor>
      <arglist>(VideoOrientation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VideoOrientation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a6ca02ccaa9fde180bce37c12ee56ff65</anchor>
      <arglist>(VideoOrientation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VideoOrientation</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ad2f952211f9127a92f68df98bc00c9b2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstVideoOrientation *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a7c9cffa18e559175ba7dfb230701fcc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoOrientation *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a1c587ebbc32cb7818d9c63fc3cf15ae1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hcenter</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a8ec9a31d3504e65f00259cb9dc8720d9</anchor>
      <arglist>(int &amp;center) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hflip</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ae41472c08b521ea64247d5fc5675bbd1</anchor>
      <arglist>(bool &amp;flip) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vcenter</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a608a3e7eab0f2021b4a7edab1ea6dbf2</anchor>
      <arglist>(int &amp;center) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vflip</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a0f05b4cc2a1c699896c815b7f58a2d56</anchor>
      <arglist>(bool &amp;flip) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_hcenter</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>abd0620f68d9692edb5677734992dbc9a</anchor>
      <arglist>(int center)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_hflip</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>af2d8c92a82d6654c73dbac3fe3de9f3a</anchor>
      <arglist>(bool flip)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_vcenter</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a6add18cd8546b4c0e8186c6f1e8789c1</anchor>
      <arglist>(int center)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_vflip</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ad4edf4f2f375b0412a93ca79c12fcc34</anchor>
      <arglist>(bool flip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_hflip_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>afa176f29939e8dbd1d857ccc7cd7af53</anchor>
      <arglist>(bool &amp;flip) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_vflip_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a5727f63b743fa4e60b7bd1db2499f2de</anchor>
      <arglist>(bool &amp;flip) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_hcenter_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a6b890652f53edb9eadcc0a14c6b612f7</anchor>
      <arglist>(int &amp;center) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_vcenter_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ae284b25844d86520bbb7e01163ffc8cd</anchor>
      <arglist>(int &amp;center) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_hflip_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a7e7a4e082989a4d328709a34a263e7a5</anchor>
      <arglist>(bool flip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_vflip_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>abb971649a6c91b4b80606d9dd47dae94</anchor>
      <arglist>(bool flip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_hcenter_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ace0c62abc9883c6d517d2c20cf46da73</anchor>
      <arglist>(int center)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set_vcenter_vfunc</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>aed6095d5ca662b45bf74567e4d47878b</anchor>
      <arglist>(int center)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a4b4d5f7c243ca2ba11bbd9f3007616af</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>ae3481e940c4cf854f3ca599916965b55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VideoOrientation</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>aaab1c9076172c481b740e605ba7a63f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::VideoOrientation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1VideoOrientation.html</anchorfile>
      <anchor>a64ffd7d95bd339d0be058fcc5319df40</anchor>
      <arglist>(GstVideoOrientation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoOverlay</name>
    <filename>classGst_1_1VideoOverlay.html</filename>
    <member kind="function">
      <type></type>
      <name>VideoOverlay</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a0d9555ec33243be0aef14814af5d68ab</anchor>
      <arglist>(VideoOverlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VideoOverlay &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a208a8ecbf15901a2cd05e606d080c153</anchor>
      <arglist>(VideoOverlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VideoOverlay</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>acf6ea9f1c5d178308a4d2e39bcc28ed4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstVideoOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>acd4a39d5aa7265e83dd81c23bc1ba5a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a50ff1208ae8387c827fdd01b3ccba289</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_window_handle</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a22b3d25a2a1ccb5c50a419f5db2685b8</anchor>
      <arglist>(guintptr window_handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>got_window_handle</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a38770ee51251894eb517d959bcc71419</anchor>
      <arglist>(guintptr window_handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_window_handle</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>ad4f4e781799f02a86e5d951724b72e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>aece721710ad9fc3dc30c47fc2776f44c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_events</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a924ba7a62f43fd52c5c698594a990605</anchor>
      <arglist>(bool handle_events)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_render_rectangle</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a6eaf2b5e90d50780f92de2cea53ed23b</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_window_handle_vfunc</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>ad0322956e7af7fe2df8b8bbdfe4bb21b</anchor>
      <arglist>(guintptr handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>expose_vfunc</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a813991ea570e839b3f6ad8532d05a82e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handle_events_vfunc</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>af89ffb1aa332527f4c57b02ab722e746</anchor>
      <arglist>(bool handle_events)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_render_rectangle_vfunc</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a41e397388acb34d20d1d4e3ec62e2715</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>ad4b7d977c29644b1e6c0279b1e5837d1</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>aa77467acbe6e776deaa5156338b2020c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VideoOverlay</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a46053a2955dcfafbbf619b2d1e0982e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::VideoOverlay &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1VideoOverlay.html</anchorfile>
      <anchor>a5e4fbd6326a37490886d4ae6d7a3e3ff</anchor>
      <arglist>(GstVideoOverlay *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Gst::VideoRectangle</name>
    <filename>structGst_1_1VideoRectangle.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structGst_1_1VideoRectangle.html</anchorfile>
      <anchor>a097826ea397812fa764b6e428ffd8dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structGst_1_1VideoRectangle.html</anchorfile>
      <anchor>ab55372b37478df9329e6439a841563a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>w</name>
      <anchorfile>structGst_1_1VideoRectangle.html</anchorfile>
      <anchor>a7f9aa0fed81bbc2d89d6cfde12749190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structGst_1_1VideoRectangle.html</anchorfile>
      <anchor>adee91a00ed965902d7a976f203dce6d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gst::VideoSink</name>
    <filename>classGst_1_1VideoSink.html</filename>
    <base>Gst::BaseSink</base>
    <member kind="function">
      <type></type>
      <name>VideoSink</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a0368d17cffca912f9849da29a5097e97</anchor>
      <arglist>(VideoSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VideoSink &amp;</type>
      <name>operator=</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a01c7f6b7cf06de44238d6f046c1cf462</anchor>
      <arglist>(VideoSink &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VideoSink</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a43199f7ae951631090c6d287462436a6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GstVideoSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>aa7b0b833c1ec7e49ef974a7265236710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GstVideoSink *</type>
      <name>gobj</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a5915a3492bb1dd722754edec44c34910</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GstVideoSink *</type>
      <name>gobj_copy</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a82a3576157c9e5d8151077a4ed62c174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>ab0d3e12506b5df2e6427dd07104e5d10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a74aa90e7039a5988b800e7c858935d3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_preroll_frame</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>aedb58ec3e3427af49c50d5690b6f3fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_preroll_frame</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a6fe6682b8304b348595c01871685e096</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>ad22983187e9975ad5fdc33be8db9ba08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>center_rect</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a25f7faa7baec779af5e715f2fb4e5fb5</anchor>
      <arglist>(const Gst::VideoRectangle &amp;src, const Gst::VideoRectangle &amp;dst, Gst::VideoRectangle &amp;result, bool scaling=false)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gst::VideoSink &gt;</type>
      <name>wrap</name>
      <anchorfile>classGst_1_1VideoSink.html</anchorfile>
      <anchor>a8189bd1f2f742f461f5c7a37eb20ad14</anchor>
      <arglist>(GstVideoSink *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Glib</name>
    <filename>namespaceGlib.html</filename>
    <member kind="function">
      <type>Glib::RefPtr&lt; T &gt;</type>
      <name>wrap_event_derived</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aa96cb89e7774968c6f2946a85a598c0f</anchor>
      <arglist>(GstEvent *object, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>Gst::PadProbeInfo</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a43fcab2a44083e8b7b6a1c8193acae2b</anchor>
      <arglist>(GstPadProbeInfo *probe_info, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; T &gt;</type>
      <name>wrap_query_derived</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ab06aead32d7b7d9aeb1cc777c0e88711</anchor>
      <arglist>(GstQuery *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gst</name>
    <filename>namespaceGst.html</filename>
    <namespace>Gst::Enums</namespace>
    <namespace>Gst::SDP</namespace>
    <class kind="class">Gst::AllocationParams</class>
    <class kind="class">Gst::Allocator</class>
    <class kind="class">Gst::AtomicQueue</class>
    <class kind="class">Gst::AudioBaseSink</class>
    <class kind="class">Gst::AudioBaseSrc</class>
    <class kind="class">Gst::AudioCdSrc</class>
    <class kind="class">Gst::AudioClock</class>
    <class kind="class">Gst::AudioFilter</class>
    <class kind="class">Gst::AudioFormatInfo</class>
    <class kind="class">Gst::AudioInfo</class>
    <class kind="class">Gst::AudioRingBuffer</class>
    <class kind="class">Gst::AudioRingBufferSpec</class>
    <class kind="class">Gst::AudioSink</class>
    <class kind="class">Gst::AudioSrc</class>
    <class kind="class">Gst::BaseSink</class>
    <class kind="class">Gst::BaseSrc</class>
    <class kind="class">Gst::BaseTransform</class>
    <class kind="class">Gst::Bin</class>
    <class kind="class">Gst::Buffer</class>
    <class kind="class">Gst::BufferList</class>
    <class kind="class">Gst::Bus</class>
    <class kind="class">Gst::Caps</class>
    <class kind="class">Gst::CapsFeatures</class>
    <class kind="class">Gst::Check</class>
    <class kind="class">Gst::ChildProxy</class>
    <class kind="class">Gst::Clock</class>
    <class kind="class">Gst::ClockID</class>
    <class kind="class">Gst::ColorBalance</class>
    <class kind="class">Gst::ColorBalanceChannel</class>
    <class kind="class">Gst::Context</class>
    <class kind="class">Gst::CoreError</class>
    <class kind="class">Gst::Discoverer</class>
    <class kind="class">Gst::DiscovererAudioInfo</class>
    <class kind="class">Gst::DiscovererContainerInfo</class>
    <class kind="class">Gst::DiscovererInfo</class>
    <class kind="class">Gst::DiscovererStreamInfo</class>
    <class kind="class">Gst::DiscovererVideoInfo</class>
    <class kind="class">Gst::Element</class>
    <class kind="class">Gst::ElementClass</class>
    <class kind="class">Gst::ElementFactory</class>
    <class kind="class">Gst::EncodingProfile</class>
    <class kind="class">Gst::Event</class>
    <class kind="class">Gst::EventBufferSize</class>
    <class kind="class">Gst::EventCaps</class>
    <class kind="class">Gst::EventEos</class>
    <class kind="class">Gst::EventFlushStart</class>
    <class kind="class">Gst::EventFlushStop</class>
    <class kind="class">Gst::EventGap</class>
    <class kind="class">Gst::EventLatency</class>
    <class kind="class">Gst::EventProtection</class>
    <class kind="class">Gst::EventQos</class>
    <class kind="class">Gst::EventReconfigure</class>
    <class kind="class">Gst::EventSeek</class>
    <class kind="class">Gst::EventSegment</class>
    <class kind="class">Gst::EventSegmentDone</class>
    <class kind="class">Gst::EventSinkMessage</class>
    <class kind="class">Gst::EventStep</class>
    <class kind="class">Gst::EventStreamStart</class>
    <class kind="class">Gst::EventTag</class>
    <class kind="class">Gst::EventToc</class>
    <class kind="class">Gst::EventTocSelect</class>
    <class kind="class">Gst::Exception</class>
    <class kind="class">Gst::FormatDefinition</class>
    <class kind="class">Gst::Fourcc</class>
    <class kind="class">Gst::Fraction</class>
    <class kind="class">Gst::GhostPad</class>
    <class kind="class">Gst::Iterator</class>
    <class kind="class">Gst::IteratorBase</class>
    <class kind="class">Gst::IteratorBasic</class>
    <class kind="class">Gst::LibraryError</class>
    <class kind="class">Gst::MapInfo</class>
    <class kind="class">Gst::Memory</class>
    <class kind="class">Gst::Message</class>
    <class kind="class">Gst::MessageApplication</class>
    <class kind="class">Gst::MessageAsyncDone</class>
    <class kind="class">Gst::MessageAsyncStart</class>
    <class kind="class">Gst::MessageBuffering</class>
    <class kind="class">Gst::MessageClockLost</class>
    <class kind="class">Gst::MessageClockProvide</class>
    <class kind="class">Gst::MessageCustom</class>
    <class kind="class">Gst::MessageDurationChanged</class>
    <class kind="class">Gst::MessageElement</class>
    <class kind="class">Gst::MessageEos</class>
    <class kind="class">Gst::MessageError</class>
    <class kind="class">Gst::MessageHaveContext</class>
    <class kind="class">Gst::MessageInfo</class>
    <class kind="class">Gst::MessageLatency</class>
    <class kind="class">Gst::MessageNeedContext</class>
    <class kind="class">Gst::MessageNewClock</class>
    <class kind="class">Gst::MessageProgress</class>
    <class kind="class">Gst::MessageQos</class>
    <class kind="class">Gst::MessageRequestState</class>
    <class kind="class">Gst::MessageResetTime</class>
    <class kind="class">Gst::MessageSegmentDone</class>
    <class kind="class">Gst::MessageSegmentStart</class>
    <class kind="class">Gst::MessageStateChanged</class>
    <class kind="class">Gst::MessageStateDirty</class>
    <class kind="class">Gst::MessageStepDone</class>
    <class kind="class">Gst::MessageStepStart</class>
    <class kind="class">Gst::MessageStreamStart</class>
    <class kind="class">Gst::MessageStreamStatus</class>
    <class kind="class">Gst::MessageStructureChange</class>
    <class kind="class">Gst::MessageTag</class>
    <class kind="class">Gst::MessageToc</class>
    <class kind="class">Gst::MessageWarning</class>
    <class kind="class">Gst::MiniObject</class>
    <class kind="class">Gst::Navigation</class>
    <class kind="class">Gst::NetClientClock</class>
    <class kind="class">Gst::Object</class>
    <class kind="class">Gst::Pad</class>
    <class kind="class">Gst::PadProbeInfo</class>
    <class kind="class">Gst::PadTemplate</class>
    <class kind="class">Gst::Parse</class>
    <class kind="class">Gst::ParseError</class>
    <class kind="class">Gst::Pipeline</class>
    <class kind="class">Gst::Plugin</class>
    <class kind="class">Gst::PluginError</class>
    <class kind="class">Gst::PluginFeature</class>
    <class kind="class">Gst::Preset</class>
    <class kind="class">Gst::PushSrc</class>
    <class kind="class">Gst::QuarkData</class>
    <class kind="class">Gst::Query</class>
    <class kind="class">Gst::QueryAcceptCaps</class>
    <class kind="class">Gst::QueryAllocation</class>
    <class kind="class">Gst::QueryApplication</class>
    <class kind="class">Gst::QueryBuffering</class>
    <class kind="class">Gst::QueryCaps</class>
    <class kind="class">Gst::QueryConvert</class>
    <class kind="class">Gst::QueryDuration</class>
    <class kind="class">Gst::QueryFormats</class>
    <class kind="class">Gst::QueryLatency</class>
    <class kind="class">Gst::QueryPosition</class>
    <class kind="class">Gst::QueryScheduling</class>
    <class kind="class">Gst::QuerySeeking</class>
    <class kind="class">Gst::QuerySegment</class>
    <class kind="class">Gst::QueryUri</class>
    <class kind="class">Gst::Range</class>
    <class kind="class">Gst::Registry</class>
    <class kind="class">Gst::ResourceError</class>
    <class kind="class">Gst::Sample</class>
    <class kind="class">Gst::Segment</class>
    <class kind="class">Gst::StaticPadTemplate</class>
    <class kind="class">Gst::StreamError</class>
    <class kind="class">Gst::StreamVolume</class>
    <class kind="class">Gst::Structure</class>
    <class kind="class">Gst::SystemClock</class>
    <class kind="class">Gst::TagList</class>
    <class kind="class">Gst::TagSetter</class>
    <class kind="class">Gst::Task</class>
    <class kind="class">Gst::TaskPool</class>
    <class kind="class">Gst::Toc</class>
    <class kind="class">Gst::TocEntry</class>
    <class kind="class">Gst::TocSetter</class>
    <class kind="class">Gst::TypeFind</class>
    <class kind="class">Gst::TypeFindFactory</class>
    <class kind="class">Gst::URIHandler</class>
    <class kind="class">Gst::ValueList</class>
    <class kind="class">Gst::VideoChromaResample</class>
    <class kind="class">Gst::VideoFormatInfo</class>
    <class kind="class">Gst::VideoFrame</class>
    <class kind="class">Gst::VideoInfo</class>
    <class kind="class">Gst::VideoOrientation</class>
    <class kind="class">Gst::VideoOverlay</class>
    <class kind="struct">Gst::VideoRectangle</class>
    <class kind="class">Gst::VideoSink</class>
    <member kind="typedef">
      <type>GstClockTime</type>
      <name>ClockTime</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad35f82b74cae5822fe16b231e8293cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GstClockTimeDiff</type>
      <name>ClockTimeDiff</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a1bd878eb666682156ef268a6ff0ad16c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSinkSlaveMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_RESAMPLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157ba03e157162e8ee942b2cb99bc539a6744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_SKEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157ba45cdbf405ec23681840bceb58592b829</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157baa2bf40ea049d932d7cb901f32a74d404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_CUSTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157baa46c3bd5e647d5a8c158656884e3a6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSinkDiscontReason</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_NO_DISCONT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8acb3e678cf5c82a16c35f4b494f70cb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_NEW_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a3bdff3e0d260aa78766897d8066f3ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8acf07cd894ce8e1ce23da85956772f900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_SYNC_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8ab996821e1453ed79970c3871f063c1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_ALIGNMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a49f77f951ef5201cb6256cc313088480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_DEVICE_FAILURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a8eb46d2d47d998f364bae5f16fbd101f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSrcSlaveMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_RESAMPLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a3fabb552a353744d2db5a7ea4a6d50ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_RETIMESTAMP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a6a8faea7c736143bf2fcd179b3354380</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_SKEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8ad05ce16891c153546bffe723ac4f4753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a816b6445a385479be8b78bb6ec30d0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioCdSrcMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CD_SRC_MODE_NORMAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9a0bf41ca87b935f45aa8e57932678bffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CD_SRC_MODE_CONTINUOUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9a99b849a9c05fc9ee6388e37e26f4fe95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac34ed94192174a0a696d18c769228df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_ENCODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a3094936bd41e237078afc9058201003c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S8</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ab8f10ffa12139a8e98d4e85c927deaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U8</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ab56dce8a94f52fa0d75295f3afa1ab19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a513280409354adc5348b3fc6e56a2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a10e92410a150f5bed8ed0af0fdc94196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a5aa2fa03598e71dfc61c0129982c12ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad697db132b49504c568d652f70f85d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a150eaece239a5ec6bc8c8a6ffb5949d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af2bbac951bf5e6d0501ea458239fd81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af0bd3dbebbbf515fd94ab2303caeaed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a766610fec28c7a821f7bf2fa3c541400</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aad9d3c71b2b6281676aa3e57b04afda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af6d1dac505b3b26153738f56c10f322b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a2cc45b4344b647147ea730a048936790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6abe3497be3fc579251770a50e2b82ed8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aab7f39614748afd4973ba3599307e119</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad435195a72a043b1eae32af6ead5a469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aa6ce93e5f0bff06065f6c9d93d09c98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac94a094e239b7bebbedc7873845e8ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac791898c390adfa7db95c9f014c3d941</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a3083c7dc916a25f75e3a2b55e3690e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a977674a388dc9cce29725dca336e6fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6adf8e0d72e48d0b11903888f15a947f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6afa09a1d22a302e4013bfc026690d11a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6abe24b6d0e44f64a6e180fdb79d334fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a61539a8e14817ac0239a8d8db553596d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ae9f697c4c144655a877c0a38a575a4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aed2f19b8202b7b39b7d2a8aae2f06023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ae0e68875039fbff89b5dc1229c5ada8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a6379ddd48043a66a9abda5c259d9df9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a7f92eb20148442eaf19e89a161859556</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac67218f6cb6550d6cc893e7716543d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0759c4f33eb386c49a44252b78bf8e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0ec3dfa52ac73609c8a429be9e0c12a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a9ef46edf321e7a26f2ba599c28267c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad2b106d20764330b7231a4f0062b75da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6afd3f23f878f030f98b446bb920641645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aba190865bc72b59474a52e0eaf28a3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a81b4b3aefa9143a1b1862d81737e2940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a39e7b683dcd1a75fd9adbdebfbe791ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0245e3690eb7a61b733e399b173c2aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a198597074204a882ba7738cb70f66e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a7c1771c5da285b772be724bf790b5bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac3b96193e43abb19aaddfcf9574aea5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a8c426c23e04c7c00a1d35b5543554dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFormatFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_INTEGER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1aae1103b852b23af879e6c131126fce93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_FLOAT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a60f6a10c080582ddbb2a9d40294d6985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_SIGNED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a439ed8a9211c024535fff6a2eb18f451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_COMPLEX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a15fde8b6cfbf94198dbc85107aef887d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_UNPACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a9da1a47f3105506dd2fab6119c359195</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioPackFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_PACK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8a16055516645117c872722343636f946a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_PACK_FLAG_TRUNCATE_RANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8ac2b3793f2e2f1b0a99cb4a65f7769d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5a337d863acee38752b85853939128406d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FLAG_UNPOSITIONED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5ab58db1d22536292189c9b2aa99d97a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioLayout</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_LAYOUT_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1ca4df7596e4973a5b7a9c0c36720be555b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_LAYOUT_NON_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1ca1416fc7990fbc10a45b5f16e27605f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioChannelPosition</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aa9751f60829530e2b2dc66f2b524aa0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8af74ad466c869de7f9a7dee07d487430d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a4f12035e1122fccc66c3996280432317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aecaf318780ffe448d44e5ee66e16e5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a1cab9c194733e8e6cdd63522e1c1161a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ac55c3a496beaec6ab179967317e32c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_LFE1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a7b1e07c0063772101a1ad8f804f8d26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8abf824af8768e795ce6402aa528c3e391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ae430385367d3d068e3df04761e3c3c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a3633666231537bc3dc9136e4bc8086c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a22e8f07a542d37f760a8f3f7f16e13a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a19335c793853df15c6995e3cf1f98c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_LFE2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9ad2e5a69dbe1f6428be9226e61d167e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a82bc75aee6e55c2562bb6a59f08aba5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9f3928b868425226ff5e9e2758cee9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a8c39290ffd13590bd40b097279af4019</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad6c019771d870b0435ffbb49d18e742a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a3e53d7b905cd89bfa3cf52d6cafbcd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aaf2d7f92e272fa88484e2aca0d094eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9f9c54abe7984ba54101e8d3db92b365</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a2718b0c92a360e4820147e3797c63df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_SIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a24e3513e95c966d85872dda713ed9afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_SIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8adbb13f77362ed3e99a0275cffde6cf5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a5a14de8a40249c40c888e2961f914696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad8e52e73d94920f6871c03284b58e024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aba866322333ce51a6fd9bfcd4032a305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a0981f25835ff8955eca7758300410361</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_WIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad2b1d212d6d1110ec52a22a9caa0843e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_WIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8acb521c7a248842d8ce409e64842fc818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SURROUND_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ab413c4dcfda28fb3beff70102cd633d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SURROUND_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a2e054b44c6b5d38ffbec8f364c88674a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioRingBufferState</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_STOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7ab14d52e9652a2678cb06180c4b5bdf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7aaa637285c8994ce7ca5585a2e27804fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7ad681402cdc8482f51e8f4fe724c17c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7a94e8f7ade84fef2fc131e472e5fca817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioRingBufferFormatType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_RAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a6dd23cc4327c3d0fc03e0e6e72b9864d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MU_LAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a771d1486d2e842bf94f2692e4373e75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_A_LAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a7f6b35b06c4a5e6a656b08f1c1beae84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_IMA_ADPCM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a28b4dc9ecde4dbb46ba3efe66066004c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a0e563b1a8cdec693e00dcd170ca6a5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_GSM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a78b16df4f32700d4f6f6615ff8556f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_IEC958</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a15f4e02a5c95ff53734971ae409fb950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_AC3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a7318056ef25bdbb8f76f22e82c8d0e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_EAC3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a624f53ff70f81e72b003b2b42877dde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_DTS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95af02882ce548c8648d84d800ffedba18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG2_AAC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a0868860e31595c2a3cb41d8b354fcb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG4_AAC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a9e4b8e08e5d52f0b9cd1c23b46c53b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaseSrcFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_STARTING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625fa5f8e74922785ac024845a185569ac036</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625faf201ca21166a14a4d777a18ec9a9c849</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625fa11177019c0658aaf742a6eb5aa741e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BinFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIN_FLAG_NO_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405a4f6056f181ad3ea90e4bc9a5e9abd4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIN_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405a8b99416e4304d393b4d7fc1a2f14e609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_LIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1aaaaab8b684607c64f057f14078653106</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DECODE_ONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a4154e192f7c0671f6cc237a45d7f3d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DISCONT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1abf6442189660cc9d620bb6d3b82f93bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1aec2e36f77703820d17a1600737c8be9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_CORRUPTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ad1daa4e5d4e04da602415b1ee278b297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_MARKER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a3dbec7a41020f24f16373700a670cfa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_HEADER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ae99a8ecdf42daafc11ac3753aef3da0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_GAP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ab368764a5318bc850b8fb6c7ec4ec054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DROPPABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a3122d6bf5c34d1b0141ccd92c4ea78bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DELTA_UNIT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ad7ffef2a1284369edf0fe593b68e761b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_TAG_MEMORY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a56937de0014f86fa07ce1747ce6bc407</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_SYNC_AFTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ac9e684c0668bb9d388e5a835b44b7914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ae4e6d0dee1c78d6cbb9f75fc64106214</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferCopyFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508adef56c1b61514e99ee42fa96dbe1667a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_FLAGS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508ab522e06d60a443a0512bf68b288a8395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_TIMESTAMPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508ad5bc3ce57c6e795b4519f88fea8c6536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_META</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508a835ea31dcd0737934eb12d806005fd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_MEMORY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508aa9c8bfbce2f90513a6d4e03d1bf8257c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_MERGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508abdb0224be516504d0b77eed470de9518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_DEEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508a2c8c2c1ea2c67358de0e304ee0403fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BusFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277a3035dce23c7c8bbc2a065f6725a37cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277a5ca8ee3ba263ebda0b73aa2edf8b5628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BusSyncReply</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_DROP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fcadd443e34439ad969f5072ba33ea278ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fca8631f713ab9512b6fc7313648a68ecf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fca58a1df40bdb9c9534a11c98dbb3b613b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CapsIntersectMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_INTERSECT_ZIG_ZAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baaabff8f64a6939ed25f9071c7c6a7db07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_INTERSECT_FIRST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baaa9244d9cdd110b5024a484b8efdb74e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CapsFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga11170996386060383fba2d540f98e4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_FLAG_ANY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga11170996386060383fba2d540f98e4d4a66854f1d35d606d91c7d94d2f338b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockEntryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ENTRY_SINGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2ba1d2b893f522054801127353ec4d7206c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ENTRY_PERIODIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2ba09279ed94cc8f8a1da416fc8a0e29415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392af7e7d265c0ebd2eb477b15acbb6cbd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_EARLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a7995148bcfdd0e31cb6601416a191d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_UNSCHEDULED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a839aedd452083679a18cbde705761564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_BUSY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392abf98feb9c90a7b11f373fb1df46c17a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_BADTIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a6ba790193c4c69c97271ca8c20c57194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392ad2c682cd285ecd63fb5f3fb7f51d4d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_UNSUPPORTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a9d9d8bf8743fdcfdbf4c8f82cacb8d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a40c17ee7a1487958e4e592c58839c359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_SINGLE_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080add2ad77a78de9bb2903e66b62f682181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_SINGLE_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a5c1fbf9203922b0e59052e0fd3cb8529</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_PERIODIC_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080aaa80159a2475416269330dae5ec69c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080aa335a06b0ecf5193bfd01d9da0665357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_SET_RESOLUTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080ae494b270a816065047a03827f41f8449</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_SET_MASTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080ae305a77c17a6fc0d404e4c8fcbea27c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_NEEDS_STARTUP_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a69cc4b69a5d601f3a23141fc0e9ac323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a65edebbef0b7328be4862eec739de31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorBalanceType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BALANCE_HARDWARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0a44670115fbee0946f0cadad2900e8077</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BALANCE_SOFTWARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0a95e081681cfad3662857817f985dea77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DiscovererResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a8dcdef929b310950aec733bf9ced24ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_URI_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a875a7f86cdee8ec1c1668ecf79852715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a1f5a3dd4c4d77298b71d146aed4c534e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_TIMEOUT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9aa42b099cbe630c659229c0902e6fdf9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_BUSY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a9786c0062476a3a3ff065a3c8251c926</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_MISSING_PLUGINS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a11089b5dd6d7bdba3bdc0f12eaf81ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DiscovererSerializeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_BASIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaac0ee33630a3e51617e9bf6db47a4664f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaa864a54109abcc823c796ee4196197f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_TAGS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaa9a226374f2aa231279f96a4e1bbeca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_MISC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaabba6c3a695d8027d8c7564b907abd58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaae4f6e955c09d1efb07d28f7e32b4c90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ElementFactoryListType</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_ANY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a1c6b7fce982ddee2b4e5f3fe531fbdce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_AUDIOVIDEO_SINKS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a7a259ccd36231b7bf4630e7a4f4dd2ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_AUDIO_ENCODER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0afb1a9d5e652f79d54cac5558db412b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_DECODABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0ae1edf1dc483f78cce501e8eab0523ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_DECODER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0af7670504681eb63bdbf07487342f7b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_DEMUXER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0ac664713d1563d162ad884d3b2fa23fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_DEPAYLOADER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0aa19685d32505aa52d3286effdf229cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_ENCODER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a83c83743cf2d475391cf505bfe170ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_FORMATTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0ac1f1cccdbc5f38d39920887b44613504</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MAX_ELEMENTS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a5dd280e8f7453f6dd62177f3726b2536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_AUDIO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a9988ac6f1470c406d02d9511ffabcd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_IMAGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a40e22762d07522677d1e7e9ca8950f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_METADATA</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0ad5e57649b6bef0d22b37129fb9908e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_SUBTITLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0aa7eb4e259d0cf4758a6e603fb20facec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_VIDEO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0ad9145ead6063ef1d9cbcc06fec1eea0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MEDIA_ANY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a2d3aaf819c40b4cdab208269b94f520c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_MUXER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a52598fddc3d47d8d1fde4a73f99702af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_PARSER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0af004335266d51a9371e6ae338e9de634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_PAYLOADER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a66efc56c7855ee760a4965e9a87ec8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a3925e9443357d535208851a48d37b413</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_SRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0aace3bf075d7467fec42f7353dfde3971</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FACTORY_TYPE_VIDEO_ENCODER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa34ccc863557d4b66fd819da4413b1c0a726e8af223babd60a57f33835f1eada7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ElementFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_LOCKED_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea751fb9ba28c3c9fd57d41e53b0f23479</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea3acc31da3c2d229c6227f31e4771024f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_SOURCE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ead176a5753453e26242ef8ba1ebe1889a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_PROVIDE_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea4e832e5c5feb19f2782b7f6fd15d7870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_REQUIRE_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea71b2f5b81e8e11efc1750ba5804011c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_INDEXABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea8f61971d5176fd44056aa0d6ef425c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea76e0e2d769ad2cab146d03cb54cb3ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateChange</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_NULL_TO_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a31e86d35e03a1967255186d943a3206d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_READY_TO_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a0464c49fe679add6d141af63fd3dae0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PAUSED_TO_PLAYING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a4273f4164280454e48f9691b31c099af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PLAYING_TO_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5ab2899c4d88e7370ee6e098aeeaebb3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PAUSED_TO_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a64f04accf66057a5294c9d35e3a3d2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_READY_TO_NULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5aa57215c5872c6bd68426b6815363c70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateChangeReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_FAILURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a993fcd0f933a3becee44c78b36fd2b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_SUCCESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025aeeee00a453937b848aac52c8a58e3281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a77e50c46cf3919c152686b71cd419c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_NO_PREROLL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a954686a18685dd44685a2ddd5e66f15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_VOID_PENDING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa55663ff9e6a1f1ce63972e1031804151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_NULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa07cf1506b030700024ecf1654c3796c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fae477937b92150d7f989ca9d1fa3a0da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa702f01b465f78938c8d8467a6c6892d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_PLAYING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa396ac09161e15f45f8dc574a91bfef2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AutoplugSelectResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab663c59d3c19f60bf959462234a9664e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_TRY</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea72228236ba4d9a20e336c60e82a3c0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_EXPOSE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea701f3d182e8995604f14a3453a54a776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_SKIP</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea2e5998f93fe706617794ed81f0011686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultiHandleSinkClientStatus</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga27bd75beeb2f1ff9bb61e4861b9fdb00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_OK</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00aecee85e54e805adad7e2dbd8f07512fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_CLOSED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a9ab18e1dc8116046412f131d3ad6b970</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_REMOVED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00aac958d195dedce6ce0f86d50dbe2c164</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_SLOW</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a095f49605a6434d87ba6257edd71fc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_ERROR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00afb809ad799895c86b6713506dc3ec204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_DUPLICATE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00ad86c932bc24b0ddacb06fca96d538ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_FLUSHING</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a8016f375f9996ab40d1f466bfbc6780d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultiHandleSinkSyncMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga335823ee72f5d5347d686bf0b598a8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_LATEST</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1af35e17d9705ee68f7a678f62f34de794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_NEXT_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1a5a898bf16c6ee8339bbe2cd42ebdfe58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_LATEST_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1afcf4e3522e05e0c9e0b9d71bcda7fc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1a23d5e6901bf850264ad08352837e3287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1ae6c03fe40db4e91726e19def804d01df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST_WITH_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1af512477872af344e8bd3445a90698d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlayFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafd4e6f9ed57a34893b6118c02f95cd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_VIDEO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a0228d7f1b9f28bf8d544d10a9b012085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_AUDIO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a0937f223a9f86660c6d6f9e9b94bbb88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_TEXT</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a3cf0ca30126af6faa1d88f402c7ca455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_VIS</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a023331cf03e6de8eb228876432e8ee9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_SOFT_VOLUME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ad8e7ad76487e1ff8328d2ad019431d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_NATIVE_AUDIO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a4e75afb02d1bac3ddf484e89a2b31edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_NATIVE_VIDEO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a92cf43d776f130b14635627e87fa322d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_DOWNLOAD</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a5d71f434adaea49a677b67d7a5806b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_BUFFERING</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a3c5797986cdde2d75375c6a306496242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_DEINTERLACE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ad2ec2b54b1d78678568fda1a2231bc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_SOFT_COLORBALANCE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ae9d42110d199155c58456d914e3f6bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_FORCE_FILTERS</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a770d4b71e44676285c2e5fedf2769995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a46547663056cd676f4d77a4fc6cbabf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_FLUSH_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a0f8222c36d9314e5890c40ff03cf5161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_FLUSH_STOP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a6a94e208f960d7f0e98ef976712475fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_STREAM_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a071fc9072ff223411203f8d79494b3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a0d7f43c4165ac8602a2e99a370eadd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14af58df593352c6bdf57166c3fbdb4f2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14ac13e07e0b2b693f918d9d90dfa0a41bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_BUFFERSIZE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14afa310ae71afeede667fa49ba75bc921e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SINK_MESSAGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14ac030aa1c392a2be9b21279de469b42a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a51c619cf16fcc47144100d365e3cab84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TOC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a8f37f45421be5a33c5191ec315e85cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_PROTECTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a4c867b90e9b95a7da1483b3bd060cf6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEGMENT_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a07a1ef734323123345c047fca1864b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_GAP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a04eaa73055e590be53400dc90b755509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_QOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a5318cd7c4517fa1e29a52d285e0f910a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEEK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a95ce98f76f4c406ede32943eb785cc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_NAVIGATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14af91067406adc6ca7e2e3394ad022a8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a162fe0454f193ecf6197c21f5a850ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_STEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14afb3dd54a3b499b39c8eb120631585dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_RECONFIGURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a8a5b417e4d76ed1b1e43375f271eb8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TOC_SELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a50104a15fa02d66e4b42454c1e580b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a2b3d761479d0f9f2589d0c194dd2110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a169ed59d6433ec19f38ccc5a1c906b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM_OOB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a1176ef0fcd2b29115bad31ac214cb1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM_STICKY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a2f57755c69556db515e9d6fd8ff58e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a58ccd17956882c4dbab66c3aa4dff7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_BOTH_OOB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a3c28173e49d776b5a93ac20acfbb8f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventTypeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca61126bbded9591f9333e7535c1adf085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca178a5213fb72e0c656180f5793c1179c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_SERIALIZED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150cafce6378f9dd8024f35a6c0e3a934510c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_STICKY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150cae174ab3b288df78892e2e9c01e693115</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_STICKY_MULTI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca353ddcbc4517fb5fd85fd71df5456d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QOSType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_OVERFLOW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fadf2734556dc5049c25ff96aa43c54d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_UNDERFLOW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fa44928c34290bcd30ddc1a89d475eb980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_THROTTLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fa115a81728f245a3888afe6273d97f3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12ad3b5abbb5cfbab819a3c5ed401ace251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_SPARSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12a2b0706799bbdd6d0bf9dc209eb7e9173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_SELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12ac008001b0757fb08a83f3110f7c66d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_UNSELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12a0ac138adb2ce12138316a98a3b550b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa2f2ade3e8bff135d6c47d1f2257179ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_DEFAULT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa5ad92a0589b9e47cc4d6fd382c6c17cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_BYTES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa13eac90c59a4f1ff5d0a9271b449c43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_TIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa3ce5ad3e79ef738bd4e7a6308db1c70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_BUFFERS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa69087ca29e66534752be632cccd59047</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_PERCENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa3e64e41c14d550a8354497e1846e3431</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IteratorItem</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_SKIP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94facaae3ccfa0b16452f0ec55e5e579674e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94faca897f3ad50a6883f444fd7f021e503672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_END</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94faca57bc319e0a7c227b773b23e61e2a873f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IteratorResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a1b2093f5fa38e5740fe882a52e1d9fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158ac7d459a1cb58a79d4363e23acf3fab70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a9c8d056bc0e1eca076edf6272a540034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a8d7a200c2dcb809c8b3997841c59b8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_READ</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa7012749f9e4b10c5ad412fd2227b5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_WRITE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa0ec99dffa85f25b74a182c93e16f8dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa48e93b076a914d8330a9c62215dbe30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a49e662ad9f9eb7210dce74a3ce17be5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86abeac2aa69521997263a705f48468cc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a758493cee50de74b68fa2fe29ba4bad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_WARNING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a10897339e9a539206a3063366a001fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_INFO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a966198aa626095b0a0237e8e726be298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_TAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a0f756424693345c9eb20a4c70a8aedef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_BUFFERING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a6eebed6cbd74cd0b34911f9bbf0f9385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STATE_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a5e5e2670b33ceaf72a35dadbdb72bfe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STATE_DIRTY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aa13f5031476623d6b5d72bbcf3d77b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STEP_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86afa4c9c504baef3437b9b508f646971ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_CLOCK_PROVIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a317d67386935097938815b1f9f51b83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_CLOCK_LOST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aee517638d625bb8ec642be6d032e7c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_NEW_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a58d74d9a5e6b915b5722e7d1ac24c48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STRUCTURE_CHANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a6a97087c4cb4eb8403b57011926e2f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STREAM_STATUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1ef177be0bff08e3c451193a144b4f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_APPLICATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a795070715154105b427b4bef01e4a6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ELEMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1446541b67def22116801ffd77ec3f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_SEGMENT_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a99fb61ffd5e40264e1ac9b57f551e825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_SEGMENT_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a5f2365c735efcb8835db4b98424d7fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_DURATION_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a8aecba7508f55e7d8cc7182582dc6ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a8997449a838b8429de6e97512b3b1d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ASYNC_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86ac028f67c605d391d047d7dbbf598e386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ASYNC_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a724a5ea02125c3c562688fea62c565f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_REQUEST_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a3f2154a8bbce17495da4f4ebf54d52e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STEP_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a9f74843b644509b8d64ee42646959b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_QOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a2a1551f51418c028a523ce196ee04a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_PROGRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a09358af92a622e235330aec4f0473f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_TOC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86ac288dd42976b77bcdbf2d101c4063220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_RESET_TIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a457013c7dba239c9f1a1c024a3fd65ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STREAM_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aede44ceb021c4e6345af7a11553ec7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_NEED_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1c12abecd74731502865ececde721b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_HAVE_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a47b1bd5d5e1021dab773d5a87897847c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_EXTENDED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aeeca3ac88409cb2face93c025dd046bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProgressType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a411c7e7bc9319585c82e6423a46b9255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_CONTINUE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a15ae04b7df9d4b8af1f1abeb9511c212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_COMPLETE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7abc0045fd03eaf793274d6e071c54b6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_CANCELED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a18c6bc9ff9362a74ab1d0a93a95ff2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7ac27b39e41019c9e6c4e8bd864c11d78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StructureChangeType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_CHANGE_TYPE_PAD_LINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19a9781464e09c5e1df316a9b97fd71d1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_CHANGE_TYPE_PAD_UNLINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19af09dd32098ad1d1a28ae217cdb00fa5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamStatusType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_CREATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa3d2092d2d508df35997173fc698fc1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_ENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aae208380d207577a60a9c1d03ec8d05c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_LEAVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa70caa0594a140c9cf2614e4a603c591a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_DESTROY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa02598ab9a72a48fa7429d651168afbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa74da15e2572fa4fea0d291e6e6005cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_PAUSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa47a55729ac5e1b0d29ea44dbd8f1b668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_STOP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aafe003ab87833103c499aa196e5ce343f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MemoryFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_READONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aaa5acd6e9250f06e82e193b6a73f4809</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_NO_SHARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0ae4f0b0eb7b156e4e91a0351e5865886f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_ZERO_PREFIXED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aa442b5ce6a238e43901ddab8a368d5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_ZERO_PADDED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a21000df16b8097f2ee0e6e2a0f1743ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_PHYSICALLY_CONTIGUOUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a8694026c2eb36a6536b520e22a031fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_NOT_MAPPABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a4bbbc10e8ff5d7fbb3dceb90e485c311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aac15449a378b24ea4b0b35d4c433666d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MiniObjectFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LOCKABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6ca18f7d2bbccfa8667e2a91c56dc3e7bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LOCK_READONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6cadf92500aa649bc0753b4447a598f05ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6cae3630fcc787e07d3f2d7f701b31d4914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_READ</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a77ea46e3696058096739556f223cd33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_WRITE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861aa300c7c07e0d82075295f3174e8210d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_EXCLUSIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a1a51be6ab32bcd0f3ea6177a564077ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a3d73378c37cb6c28e69371a977938937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationCommand</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a8c665e69a7f8ec3f9e4193f6ae7fe255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a62e6c771ee3a0b51cbf27b1127594644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ab3635357f3ca5aca33a3413014177d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ac5340ee312ad36d2608d7c3212329f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU4</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a1cbde243107ab15ff8a1bf0e49a28830</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU5</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a2bc5b77f336b2946ec0dce807217ab5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU6</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a0ed655165757d3037b5d159f04a1e77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU7</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ac2e13dc545ea2483d856c89fba6026ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a832dd44e387824cb384f326f54ef54a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a59e32fe3cf01bd85cf7115029a05379e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_UP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a5ebfe718fceb842b67eb69a2ff77d69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_DOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5af59ce8286409ceabc82ccb52c86316c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_ACTIVATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a97f7a745a75917fc637f00f030d5d405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_PREV_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5abd0c1676c0b404120f20ab316d39fa51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_NEXT_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ab2e8fd30001923fdafa7fc12c1327c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationEventType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acaf2d6a444eab57998173007fe23e536cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_KEY_PRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acab8b27c694bebb791ff0984408a92a558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_KEY_RELEASE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca9bad8637dbf1be21d1bea6fb675a7f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_BUTTON_PRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca53cda3175c03e24e9513c9e01890b717</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_BUTTON_RELEASE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca881286a640b97fa2e1d52a15a42decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_MOVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca1d1d24d83ef05b9a8b8e87240fcfc8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_COMMAND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acaf387bca6c7e7055fc752077e45ca7a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationMessageType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7aac228135767464550dda48418acc3a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_MOUSE_OVER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a78ff4aef5cf753672f8604d23344c8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_COMMANDS_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a61b33c66b124e2fed2320612ae6d4b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_ANGLES_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a150bde436725fefb6fbb588ff00ac857</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_EVENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a7ad2eaa484efd730b14b1b4b50233abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationQueryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa23341c21b68d8c1c05f6015e4900ba41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_COMMANDS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa84a66fd880b459a59b2dfd5099dc9c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_ANGLES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa3f2eb1c9c04dd3f4f67144c80e3e154a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad1fb5de93e9d4addc02e0a30fa64928d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad1fb5de93e9d4addc02e0a30fa64928dac7e7b83d02d9233eee2a248e24585a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8a00470cea280c130dc70f54edba9cf351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_PUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8ab21082b648a7662c4c6119c65648d2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_PULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8aacd5a526acb5f0e627f86c64d011287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FlowReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS_2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cac895be4797e5fdf93edec87ea937929c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS_1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca1a755b296460bd3216e04294354065a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cab6e263d9325f771625d450599577c982</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca3bb3697196e724ddb5fcc0937d38363c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_LINKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca09e39061cd2801dee3017ff8b6102035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca9ff5b39d4498225090a807f542a34e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cabd11645ed685dfef5c59dedca1888e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_NEGOTIATED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caa606288f801d9c842be65fb6f1558366</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cafbbb41dd25af7f9ecf4f27eb333fce95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_SUPPORTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caeeabc41db0c9d008ad3bfca78facd979</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca7c2ec016ee03f1baa66414186e0fbcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR_1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca548983adc59be55ba07ee4c3ea0fa21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR_2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caffcf1aa2b708e1a49e19ce1a6c1d995a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadDirection</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a91ff4e123153e501d5e5d90bd5ca4af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a68c5b437c5b7e60c085642d19dd9a65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a8aa71a095eab38017baf32b1e391a7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_BLOCKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca82919946efa8b3bade4916d6341225a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caabf77fd2db2d699f409ee533043faf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca67698e61400d5a213a4eba8ad421d96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_BLOCKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca9d661d5f317d41f0db554f5d71726863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_NEED_PARENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9cad4093aef3a3e8f871a06fb782b546826</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_NEED_RECONFIGURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caf7366e1a9061163002dfbb53450ba24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PENDING_EVENTS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca246cf1832bfb15fd8407ca36ea7aea61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_FIXED_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caac1bff8b18346870dedb2d1ee836a2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca0768b8744e574399e0e758a6e5f7aa3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_ALLOCATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca0f07aa42eb670a801546307ab804dbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca22ddcb8c273deac3c8bd0a28b754f0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_ACCEPT_INTERSECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9cad4e615ec8e7a98ed8395158fbc60217e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_ACCEPT_TEMPLATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caafec2022e2014d2d2be131c7db681c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caa1114d926b274385a8c12213f3dc356a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadLinkReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a892e0cc3606cad7972322a896b093f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WRONG_HIERARCHY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ab0b72d34ea5f601ed824ca92f6ae607b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WAS_LINKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ac556f42c8a1061d5655ef743948c59fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WRONG_DIRECTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a35921a1b219e86fdb17b3e1824f858e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_NOFORMAT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05acad39036e44b2966494ef42128068605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_NOSCHED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ab79d1524af340a0263262aa975c63b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_REFUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a3c55a510c48760d700add0b7b839d14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadLinkCheck</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_NOTHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa6284d9940a6b3970be40feb717a6ad3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_HIERARCHY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa1ede858a4d5c8ec059d58b49bce835d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_TEMPLATE_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fadeeb8b61656eea8141dc45a117d9c952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa1970d01f927c4733ccd8772578c61871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_DEFAULT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa6df00fb6181238c2cecac3000a1489b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadProbeType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaa05020bd3e232bfd9f557b91c02d99ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_IDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deae3a8b2fd54e8d1bfbb646d0918014bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deae28673c5974abcb9f8e9f1803717a585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BUFFER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab439c90e020ef20098471c422f1af707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BUFFER_LIST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deabb8d58bc0c90a19412d6a8757318c47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaed81d66108029eb9e0e61bcf7eaf0d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea985f8396757e1cd9bbd71350086a755a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea1cd08890c27b5fdd6d2794df040c2c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea42bf5c4e3fbd9daa299e82790a5ee794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea14dc3ba589c386ba7b880a9f2b91f55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_PUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea0ab73293c74d16dc3ea68576c75d0224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_PULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea44b5ed1d0f9d15bf98e6fc05e07b388f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea7be2437f081fda47648261c115e6f611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea8efc23221b417a43d1e7298d316eebe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea34b57b1794288b23e9244104e05fc7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea8f1e24b7f938ed38bd6f83b547da02b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab27b0eed6aeeee972df2517284dd9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea5fec9594a0218cd4219b465394989175</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab52f2ccd28e4eaf1178c783587b75ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea72d92300813f64f0b3a35efcb11665b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_ALL_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea121389e10f0670088102d1ca01d66fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaea34e33ec5c026f90fdba96c72a80d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadProbeReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_DROP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730ad0bcf49fdcfbb252e5528dc9e8025dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a46a2764cb4bef1b4e555fa456faf8f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_REMOVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a4181c9c53af99a682771f599cc55b37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a990b4ba8ed77d8f47fa697efc4ace200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_HANDLED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a867805faac52476f410497a11904ecd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadTemplateFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga83bf97a1d27dc040da32dbf3ab9838a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_TEMPLATE_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga83bf97a1d27dc040da32dbf3ab9838a8a4a9b5f090b880e477c11aa9722e57de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadPresence</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_ALWAYS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0ac926a8f67c32380d27c1a7c64a89229d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SOMETIMES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0afbf82c110b0d2387bfdc3fb0fe8ca70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_REQUEST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0a34e254590ef2d5120cb1a3c4f82d9581</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Rank</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a33b8af70160a3db783a81de148f1115f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_MARGINAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95af8560f1a1a351109395902e39fa8cfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_SECONDARY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a0ce75666eb30f756d59043b95cf84cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_PRIMARY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a3e97c553312904df2f3d6c80309e42b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PluginDependencyFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501eae30df566b407eee76bb49aea06de54f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_RECURSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea77252793ef841f1b4a1b04e0538f3600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea05ba270d0d0ff501dc91a7a6e3812f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea99e2bec53e9b36f594a1efec042947ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_PREFIX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea575afa48f646254903ec127077c652aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PluginFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_FLAG_CACHED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248a9a8a2c7d02ae3e997ab3718ee019c702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_FLAG_BLACKLISTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248a1c7a24e47ec585ca9acb368e0f4e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferingMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_STREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a3b14fb1bd4278f3d3de9b24d549dd4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_DOWNLOAD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1aa60fe1246bd666499c66c3fa8277063b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_TIMESHIFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a0de624bfe743b1c25beb2f0f423ce6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_LIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a91ab944d0f96c4080783063e16d04b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QueryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a8b5c7bfd462a65613c1053095fd46706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_POSITION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7acf2ea99b4a5637c0b1654bc32582e288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_DURATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a8e5851a9ed9e8894008958c7bbabe842</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a79d1519134a0faafa8433fd862bb85fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_JITTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a02b6b18cf35e3135172b388f865a806c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_RATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a144fbd3309141c8e9493b57111bb0d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SEEKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a2642ee3d50d45a1044e9b2cef5d8c7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a9eb6463c6e409afc131ebbaa29e0314a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CONVERT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a49781ff2d90ce4419dc39776dfe4761a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_FORMATS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a107116d956186e3f6daec7ae15ed6bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_BUFFERING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ac535678cba50ef01a4d8e247dd825228</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CUSTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a3d71d2cc1eed2cdb30f16847773cebc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a51cbc0491beb0bc379f0aefc7c4d8066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_ALLOCATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ade7a31b58d73194168b575b079e3225e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a53fb225ba3d8715f981e0af14d5ab478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_ACCEPT_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ac0ba7dafde92d9720ee2ae28687608b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a4f54cd1921d4a3afbf8774bbe51dce40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_DRAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7afb57ab02766c1b2291bede48708b599a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a53e9d2bb6290d374846a085b5bc8e151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QueryTypeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540baaf4cff92f865640c6aed02111039d870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540ba0314ac62776a0a3eb3391494185b050f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_SERIALIZED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540baef1b8831f19b44f378abb937c7be11e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchedulingFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_SEEKABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa8533ec001fcb3137c06777725ceb94d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_SEQUENTIAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa258a89085c3ffa7b0436cf6fd67deccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_BANDWIDTH_LIMITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa9a579c8d7ebf38263fb1184a47553297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8a9f32d3f9eede49765cb9a0880b9d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ad8ea6fec4daeb781ada4329abe99e358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_ACCURATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a1d141e81e4d342f4a4267b0cdae29caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_KEY_UNIT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a63fee1fe94b66b4ba6b2162871672589</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8f27853c24b9f9ae90c34f7d5663de2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a7ced07f049db45d400cdffd63d5a17d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SKIP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ac60ee6ba7d78a4486e70ef5bf04b7529</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_BEFORE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3af18666d9dc5d5fed48efef3538fda551</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_AFTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a3f751fd7d461e87a5b01bda9917a71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_NEAREST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a0ba88130234862f1b45a4e55abee8c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE_KEY_UNITS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8f62c9cf1733409f9767a2323b65e1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE_NO_AUDIO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ac8d8f0a7fc742cd9bdb98ec721d77a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a34ccaeda5d3ef34e2aff08357fb98a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_SET</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a6ddd18bcc6661427916f0133c54ea297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_END</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a78bdd672702cf123e206f0406841e29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamVolumeFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_LINEAR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca2838425c085cf1d795d8d1f93841c685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_CUBIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca4d6f4fe1835ba1ce2a27ef3062077fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_DB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca7595a2e02ad22e7802001cc73fa73c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TagMergeMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001addda7a49d8965b1198e2462fa397cd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_REPLACE_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001accab35cf03dbf0e289444cd927178e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_REPLACE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a5944d5d4a6210d9f9c1c187af937adde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_APPEND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a59d2fcc65521f783dcf326f363d5c2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_PREPEND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a7cc8273fd962393adfb7236421e514cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_KEEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a92596de8125610a8759a6149acc79b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_KEEP_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001ab54eaa3a250057d0d9055dd8949a21db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a51aeaceb444c9a27588c37ed715db2d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TagFlag</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4aa85f3a6deadffba942483657e663e454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_META</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4a4938a5e78f114f3c9a514b149953fc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_ENCODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4abfe6dac1b6ffc56e4bfc2b562e380784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_DECODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4ae0aa624b7b3fd86a622fb6505794e37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4af31aa40c69cb74f4db1efdba4424e703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Tag</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TITLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeadd49d5edc49b71e4d8a753e27255c7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TITLE_SORTNAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea3fc38d7b1aecafc053412564d07707c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ARTIST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea478f11d0457ccfada77f2db4e7f7b5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ARTIST_SORTNAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeae77a9fd797c480cf620dd5130bb2745c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea11d1774025a9053f374c467d6fd5f00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM_SORTNAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea963985a7c50a295dfe5f71064f87617e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea7d0a2cf227742c442e31ad92c17adae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GENRE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea29519e9ee7e2cdce562fcaf2d7c24929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COMMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea71d1a81ba3813e0279ea7356e8d6aa50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_EXTENDED_COMMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea6ba53996c1b69afcb334ebbb2f5ad21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TRACK_NUMBER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea98faf15eb00b3b5ff4b50c09cd033edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TRACK_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea0784233458b4fc23a95e1fe919d872f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM_VOLUME_NUMBER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea180821774aed5ead30a8e40d9cf2cf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM_VOLUME_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea0fc714f9e252a3347109d5270637df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_LOCATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeabfb08f196219b81157f8a4c5e90742ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DESCRIPTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea20afa8b80acc84868b5e4f091e8d8015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_VERSION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeaeae036baa22d1574512053040a5a1d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ISRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeac812023c8fd16536a7fc3e9ca5898eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ORGANIZATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeead36a2c2cba8e20f3d5d3351167979f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COPYRIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea0c511234e6d9a5713f38f3e2b9a161c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COPYRIGHT_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea2049ceb233653d4854389890acf16ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COMPOSER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea588e8930e5ee20314689450083931a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_CONTACT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea311ffa6d1a296c816c2f0831e1683a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_LICENSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea68ca260c6c5193fd6362649a6e72a506</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_LICENSE_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeaca8c31e41ff7dc0ba1edeb3c83b430ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PERFORMER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea4e48a2c04f9f3e48887f00b349d935d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DURATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea3114cde93767f23d1ebb6c2459e2bc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_CODEC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeac3cf6a07ea2fcf3715d6410729740d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_VIDEO_CODEC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea3c1dc69fc44d034ac7980abfc278689a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_AUDIO_CODEC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea1ac13791db7c10d9373562726b2d1381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_BITRATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea7b1f3d79f333ada4e68a0a953c8a1793</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_NOMINAL_BITRATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea77aacb4c2f7408e45e1b71fbddabca44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MINIMUM_BITRATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea34467bad3d69d5b87e3ad8eead8b2deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MAXIMUM_BITRATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeaf8d20e2fef192b12cda3ad6496b97fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SERIAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea9473d96d4d4b55df08c11795c32c98ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ENCODER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea5b61f918adc84ebbbd221f898bf1338a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ENCODER_VERSION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea3d46ae94facc195bd8dbf2f83fd384b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TRACK_GAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea6ace1ee2f4346a4edacc1bc71ff61691</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TRACK_PEAK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea0e14314e2fe9a76c1aa1c98fbd96f336</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM_GAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea9d90b562d56477ca81550ecda54a49fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ALBUM_PEAK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeab8c7b051f4dc484e50dd6c0983a0ed53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_REFERENCE_LEVEL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea939fe46526f15ef84d33b920f5971e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_LANGUAGE_CODE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea99ec0063fa31c9034c8bafd0664ea690</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_IMAGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea8142b26e7fbec9744e0f7b6038a87feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PREVIEW_IMAGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea9eb1646825625e2cd97743fbc1383f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ATTACHMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea9e7739b3b3114b4bb5cfa91f56a76521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_BEATS_PER_MINUTE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea4eae0802a0ed21d90a5ff6ca4fddb925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_KEYWORDS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeab1fe10d8bf5d1ef250f5cd7df83e70ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GEO_LOCATION_NAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea9a75fe370ce9eeb59413477d2abc629d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GEO_LOCATION_LATITUDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea012e5d4efadd5f13cb7af16d0c1be111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GEO_LOCATION_LONGITUDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeea49c2c04248a3aafcd61a74fb51002da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GEO_LOCATION_ELEVATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ad14290dfbf163092d7a5c64b1cd76aeeab9e7d266c39fb431b8f781187676aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TaskState</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1a2c089ddf4e3e7371f8db4e1fbadbb08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_STOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1a7faf1e3289973931745c739bdbbf0375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1af6e46e256a2f36a484cb5c3ce4c65e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocScope</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_SCOPE_GLOBAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26a5accc5b94e19c48ceed8a7841150853f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_SCOPE_CURRENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26a3462da49e237d56fdffa1545387a3a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocEntryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1a28a2b687731544c6edc250c1b99fb87c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_VERSION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1acabab63f396b620f4abd0ed8a2d2401e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_EDITION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1aabe79baa7a0b290bba90f8e36ca10c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1ab284421740a22edb5d3e7727d9a6612b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_TITLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1aa6bdd2e74f2dd22d1f712f8e62c4bcbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_TRACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1ad174e5375fcb7bfb2c82b7018f260378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_CHAPTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1abe4dc3b7b2fc2b0eb98112700803bebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocLoopType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea799fe1fe0a6d7a26847931041cc29431</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_FORWARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea4347c3302fe56ea18d5e383a5ca2ab19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_REVERSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea21104d2c912922938393a20ef4d58e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_PING_PONG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ead17e1e5f50021d0d9f35c167be053a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TypeFindProbability</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a4105584746b5c3f85f7a723fc0e51494</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_MINIMUM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87acc63423eff1a91c7028e50555886cf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_POSSIBLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a937a358b6bcdae3c1dded7d9a43e64c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_LIKELY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a2f8012638009795fee0a929936121351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_NEARLY_CERTAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87ad5b7639c47a71effe3005e2cd5017579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_MAXIMUM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a026b6ed2e5afe42ec75c0366dc6373ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>URIType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2ba1949bf6a3ca27bf112f14c4bf88e7c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2ba9914ddcba7a40353391a7edaee628afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_SRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2bacaa09218de316669a4ed61b965c6f7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>URIError</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_UNSUPPORTED_PROTOCOL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a94de4c1f8f74c59d1fed765f4a45e2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441ad2cda236854a60bb8e17b3f0e43fb609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a8b5c4162df0821e4d5f7e9d46d550e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_REFERENCE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a2c1dc63d52244a51f9f4407be726b319</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaSite</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ae46967562aca0067c8b1db49b954d372</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ac5db01304cf99773aa3017895341c28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_H_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a7a1fe12d26a5f78c75e5ab26a77a76bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_V_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a9bbe9e2110c4da500edb242ada5166ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_ALT_LINE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a352f1a03d3af994af03d18fd5647a6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ac983d875c8ab294e4c51c6bbab61742f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_JPEG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a7997dcdf6ed5814dcc250324f2c4216b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_MPEG2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ae1ddea0685b6d8638fdf243ede257aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_DV</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100aa2a7e04bbed2fb7dbf229b8adebdb0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_METHOD_NEAREST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753ae9db12a7229f8191c5a94a1874535cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_METHOD_LINEAR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753a4c3b4bdc730deefb0407ef967cb201d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7a46666d8f8ae4e7d6259e4b2123d9b4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7ae556af70e3f42108802bc969d96f0cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga00d83dfdb1f2beeb9b2f8033e0aba1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UNKNOWN</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a638eb65d00e6ad00d91f28199eb1458c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ENCODED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac9964c36c4211772b104e3d0e6bdf0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a697201dd2a9335d429596724b43ceec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YV12</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ae3ec9fbe55c27fea2b748018a46d75a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YUY2</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a0b4cc54e730ad0f4b5d87e7df601ad94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UYVY</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a9e72b3ee39bd55850a18673add36ba22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_AYUV</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8e21198f756d65efceabbcb6241cbb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGBx</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a07d6a4bb7081f99c28dd29c3dce20d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGRx</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4abfaf4e21e68486f7e4206bdfd75a259e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_xRGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4aa0cc1877221eb51fa93da5cdf031626f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_xBGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a83e7792867a162cacb75485fbe2f7d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGBA</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a075f98a35666cfb36f579f217988327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGRA</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a070a1005709f08be26aa0a73522ef1a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ARGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a27f079cbec34e2c36b94dc9c1eee07c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ABGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a87ffc660150f42f9712a85a219368e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a11eff2d976f18008424ed904d80bb156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4adfc0f926eafe717858459a841dd86981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y41B</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2c48a036f1b175463cebeddaa68f3f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y42B</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a009d443c72ded7a0b23f40a4da01611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YVYU</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8ad585eb02647b980f2d277595a5d77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2b739c5accf1ac0247bd789685640e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v210</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4af7ab5f9a8919669394bc43f9e352f6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v216</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a36206748f4f2b5503ca0fc03dc06cf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV12</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a101e67fddb19227bbe8b110be49117e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV21</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8e248983bfe5dc4d4cd42db726a2b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY8</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab8548f8536c2168f1802933f159f99e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY16_BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7f48f61d70470197f62d2207aaee19e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY16_LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a46a1ba5157183081630854254db4f9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v308</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a02a7a19b55f848aa7ce4d13e30f40fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a565d9510630f4ab0980b9face265f906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac34aa773a41a555249c8e581ff2ea318</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB15</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a47708b30799c5ababb145f4c008385de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR15</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a49fbf065a561a01e3126919252b026f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UYVP</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ad69c335572df1a679068379d418f85d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac6378f709df8b61b88160ed310f1456b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB8P</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab34399b8b219177d81b74e1ef9d4ffab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YUV9</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac227bbc1dab14cf30690f304e2c6679e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YVU9</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a915038431d487f1dac0a07b7acdb81d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_IYU1</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a94c33652366dc83a34de4755f73f5bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ARGB64</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a090d249912fd919cc43ac0b6c17e82e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_AYUV64</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a81e7111ad9de6e3463b26ee66745e35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_r210</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab202587bc337e1908f713d3b2dc9569e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a345d3e3e98f0cd198321a521cdd6b2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a308a318b531dd7c228aa4ec0f5c2412f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I422_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a1baa7a582c25bf558cb1392cc041294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I422_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2ab0a11c044150819b81f60a4bd5099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7e988f860b2802aa2078d093c3e0f75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2b7b8a56945dfa45a02f3077cb2be387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a6c9a25da403e0a9f9085d9c1a973e96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab9d22eb5d9e62c92d28baac03e7faeb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4aca691b1ff9f5984894abd99ac2a1205a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a55020beff3930f349ce626a95c34011c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV24</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a047f119c2bd228d9996dc91da7f597ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV12_64Z32</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a413a16c082dd8c10cf457d8b22fc51aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a923210f950bdcf73c4c61495dcbde0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a3f75e10081a7d8fe8015ed9f5552e6a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A422_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7681f4139153e96bb37b664dab9fa10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A422_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab9d2d1b4d67a8da865c07ab477f38d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A444_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a0bc9343ff763023cbb641183433aef1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A444_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a45018bfc9327a72a38d09281afe3c6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV61</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a89ecfffe637f851d22faeeb5dea78d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFormatFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_YUV</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54aec4cd27e0d02f08f126ec314f7513815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_RGB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a9f247d5ddd669df39487696f9760a4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_GRAY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a25edf8e0e9acdbe9531f36b2a92c019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_ALPHA</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54acb99cbe5370868ba529273eb361be618</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a612f5b6efaee77fe9841fc9c06cfe45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_PALETTE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a7796ba8bb2b1f7f3aab143062979ebad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_COMPLEX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54ab30ad1858cff94530f48ae30b42192e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_UNPACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a82a749d2b3c3aecf684f42c4e5645347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_TILED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54ade7bdaff07b68ff247fe175ec6de655e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoPackFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4ae969ee12be92fcee96c3234cc133270f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_TRUNCATE_RANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4ab376205715241fd297e1ee776b503364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4a025a95864d6b1af2fa8c2d7e278ac334</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFrameFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69aecb63a95a6b80d206617601aa84659de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a7503c1f812745f4e95c9202380ec6dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_TFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69ae04440313d9eb1eff7a5c778a6eb3baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_RFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a7d463e723ecdd3e883b91cfd710124c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_ONEFIELD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69abb2e3804e254918adaf3d661d895832d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_MULTIPLE_VIEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69afe6ea66a61a5f19570b96bed320bbaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_FIRST_IN_BUNDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a12c663b18dd76c4b20ea7eeb59fb5553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoBufferFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a4a864cfab3cb9dc122d8e5bfcbaf3df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_TFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a47b534519f2914532ef1af6964d5dccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_RFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30aac5b5851d4ccad320134c569527f8acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_ONEFIELD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a20881482561a0ce29534eafc227dd895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_MULTIPLE_VIEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a7e3ab04a83a77064ce69af8e5c185c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_FIRST_IN_BUNDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30ae9aaf3b198673a57cad01217cba64871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a7bea23e92ee7781aae5453518c07af8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFrameMapFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_MAP_FLAG_NO_REF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5ab06fd278bf2ca47ace0d66ad62596368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_MAP_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5ae0b57f7c553850db11a2e835e10ca04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoInterlaceMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_PROGRESSIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a4b479900790553b5ba63740617fd808f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a6659b1afe1d6c5c8cad3c4c9910e817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_MIXED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a03e7b23e88ddb8ab2294a412490a7792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_FIELDS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a483d28d358078d7d3b1981658d6747de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a76c06ba19b29d37fa33679983e422643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980adf040c71d706a916a4169c42acfd639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a6cb47aa910d1a57374cb61e22072f7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a16e1a73ee08f89dfa4ea6f73b21845f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980aa705c6c026c939eee34eb0844ec2d610</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE_QUINCUNX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a5f9414629173773405734051d9acd6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_COLUMN_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a30f4a2cb696d3b61b1a9cce73cad912f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_ROW_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a45b977a07c3d5e8c28dde24175d3ba00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_TOP_BOTTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a6cc60c5744f1d1476b02ff1090cab3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_CHECKERBOARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a0c13706f489060093d6645e13585296e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_FRAME_BY_FRAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a27436db9c1c63eedd16145bb27ffd446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_MULTIVIEW_FRAME_BY_FRAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a45fd28b1521c71c38869210e9f67d517</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SEPARATED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a20acaf87b066b5379f4647e8bd52411a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewFramePacking</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba648cc4be91c52636946317d3110a3fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba8f6c877d2bb54a7e8e474483c9dfe3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba6aa7a9d6cc9a6b4651ec61a0efae7cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740bac8c02ce95545be50f32577531dc17be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_SIDE_BY_SIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba9617cfa8dd862fc31afc02ab45f9d6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_SIDE_BY_SIDE_QUINCUNX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba679ad34999fee2ba93bca38eee420054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_COLUMN_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740bac7b1a58084fdce71c5e774fd87657c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_ROW_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba85bdae40364e801c573d9729ef4a7bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_TOP_BOTTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba5e5aa0ef0ab56d668dd00d832a747f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_CHECKERBOARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba821fd0de7bef79a8e9aa9466db325ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacafa4382ea82b3a48b9da389e6ec5992e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_VIEW_FIRST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca19b1d30e7bab1a3e45207290c6168ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_LEFT_FLIPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca10945086bd690f9d273b5fb88533c6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_LEFT_FLOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca6310e48780af9db568ae6ec36a3f97dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_FLIPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacac91e8a62097ae6fa442e12d0543fc88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_FLOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacaa2debaf9de64d6105083d3a8f947b087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_HALF_ASPECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca2d8129fa5f824ed58212f2e5c12ba11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_MIXED_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacabfd6d4e3ca963f5e2d7eadef23bd5eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871a0d066002cce687ea336b880892be327f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_VARIABLE_FPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871adcc6aff29ea5696b19a615ca59eb2e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_PREMULTIPLIED_ALPHA</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871a1cae68d9d6cfa3e7251b6bfa71fb8d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad77c98abb91c8676e2263acfa3fc0a90</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ba3c3fab99993c4b2520299931ee245</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadd9b2c1cc7819b4c2d492eee3b64ab61</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac2745aaaa4c872293fa55b1379bd19f6</anchor>
      <arglist>(AudioFormatFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga509f7f014e55377a9bb9f822e2b436ed</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga61afb516fec76f0fa5341d62d213adaa</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga150d36f12e74396254eac04c16d61666</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa19c27dd394cc960223bef25c22bdcd7</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadb6d9b084e615651b2fad0d4e36f5d71</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf58797309ab409d721ef0bd93f2db5ce</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0236b8d65cd368eb3bdda3be972b1397</anchor>
      <arglist>(AudioPackFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga407d4d1be7e1db8b1811b5f300e077c3</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf95ae941e154cd1e4d8b937f853dbd26</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga237ff672131d130343d62051effe4b8b</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga62d149a14bac3e996ac0e83e2df135bd</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d6c66bfa63a3fe67be1868f82b8f45f</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga129966105d3ce53046b01e9744896f2e</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga37b4507d99fe6d25c04ac542c501d735</anchor>
      <arglist>(AudioFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga88806050cb46c5e0b30cabb11b6ec090</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44d57718cbb3aa94b46644de280b252b</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc31b64fd4c74ac4690699d6d7f07cda</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5ed3c707857121da3787025b28876556</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga04a6f762ead3a2a106fd0be389c2f9db</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga990c1b633de2d3dbae10774ee51dd9ff</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabfcb2577a2ef3a89d64590449618d4c3</anchor>
      <arglist>(BaseSrcFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga270185d8c64048341aa7278e6dfd0623</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga676554e0704a81bf9069dbfc16d617b4</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa5812f3ab332f647e1517927e09bc38a</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga85d877dd216c939ecbe5a8003d63519a</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e8dd0c85c690cbf627aa42909188f39</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga61b3e5ed29efcac4915af0faaf17841d</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga25f723332c25105c2d96c22f85c72a04</anchor>
      <arglist>(BinFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga31b8c8178b9f1140e054c7ac78f7f5d0</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga524102404015621fdb967e79085fae55</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ddd33d33140ca8a2e93246dcae869cc</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa060d249ee8406a0214b87cfe7e5f541</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7a9500a4d4a7c99026e0739c93a94877</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga41ca56f730ba76bd5ac46e30950bf944</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ca4ed9b330f75643c8c4c7380cec34a</anchor>
      <arglist>(BufferFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga80a5229ef26958adc5067f87f827a6c0</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga850ae42e96db02db8f5fb626527a65ce</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0c583867ee9d8b64d5c5b14c172a911f</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9842d19cba5c6e34bdf3780f95372ed</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2d856b6dd2a3a25cb5ae4f6a0f2445e</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad41ae3a0ccf84e91359a289875f9d027</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0a3c62698b7e6e2049fbfbb225b562da</anchor>
      <arglist>(BufferCopyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ad09d9f124e6136cd1a658b5a156d88</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad0dab5691f7c1dfa1d1e7109d4ce702f</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaad685bf49cd727bb9dd3471303c1fce8</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga22195dfcd596c76a07c08f43bb33833f</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1da485c4f03cce5ec0590cdd8500b061</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab31b05964faad7f4ac92bdf30fea1eb7</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9cdf096ce4048b5edba8e21fd246c38b</anchor>
      <arglist>(BusFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga58f9ee983318f56e6a3b5a1e0b420a52</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0d237ba31f4cc8feb7aea24a0e7161bc</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac3d4e819ebe4a5d2aa0783ff47af3b73</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab780e6d1798c0a7134b58bbc4a62cf4a</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab0c1961c86b68fae34df5d90504a883d</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaa680d7f2327a523bdc1cc07c48166db</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga962d4deb7ecfc59fc037865ab3e8238d</anchor>
      <arglist>(CapsFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0696f0b2e3ffbf5cc528b5aa9a4f6f27</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5f3a169bcb7b28b6c6ccf0108962f86c</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga21e4593bf85ce0f611387353b0585021</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga028c2e27ff3b6b11a57363dffd4fd5c4</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0fe327ec9b55c19d9ad4a72b90c7bb51</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac0324ed1d3d22baf6d10eccac8faf3e6</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gace3a51d19df648737d001b1e5fdf29e1</anchor>
      <arglist>(ClockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacffa1261d29212ac83f136e81a2dc72f</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga411ebd674176d54d0d761058ef21673f</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac2ce6eb95baeb97e4410b20e4865ea87</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_hours</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a38d8a05c0e48cc47c4635d60bdb58146</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_minutes</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a1be754e09d92e05cdf7b24f55bdf2f1c</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_seconds</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>affe1f8b1017dfef87079410202e4318d</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_milliseconds</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a616b878b74f3885a897561b84e73cdb4</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_microseconds</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a875f2c97f049e71d6e8757acefb611df</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_nanoseconds</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a2f615ecaffc4dbfe457eda3ce277ab23</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_fractional_seconds</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a1b32deb4cf4ce7a187488299ad178828</anchor>
      <arglist>(Gst::ClockTime time)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9185a3abcfdc7e7f4139e3aac0106e2e</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac81b17e94491b30708a29a5da1d31d12</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc8becc52e6da2a792fbe9807f3720a5</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0bfd435191506d9b6994939cc29714ed</anchor>
      <arglist>(DiscovererSerializeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6f3ff00352bba9cc2412e00fe6087c42</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaea5d925e7ab2c0bd1236784640c0c495</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7c11083d5d92e17dff862875bac8c33a</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacc7950d3486ca61af60cc0711be2ff1a</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab632d18b0a1c11652d0984acf10cc3d7</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga87cdc7ad534344dec49bfa553d096e1e</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa9bdcdda642017e9da4cb1f5e9049505</anchor>
      <arglist>(ElementFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacd42461c29d3a4ce16b1497d7434d8b2</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae05ecb845d1bfafe1c05cfaba0c2f6e9</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae2ffb12092628a2634a198190eb966ce</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7e543690b2f23fb712a37fd65e93098e</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga11ad5034c8250c928c9aa02b17ba68d7</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab5365d754008ec00ec77f2a0b3e82394</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gade03aee523a7989577997f0f2b0de958</anchor>
      <arglist>(StateChange flags)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac323780340f3d79f336e7f178aa0d574</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga68fdc7c9132033d7fb7a2dfe82c6d0b0</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga112ad69c4332cc5be2db44e6bae7304e</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa6cd0a010b1f54e9088f47bba71af44c</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5de54148912424addc71f07cf239eae3</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8109b1060d7808e07d68718b1815dc1a</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac9467efd4bbc0b5f39d42496a628df91</anchor>
      <arglist>(PlayFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1d434e8ec6f9b290bbe87f74b5daf5bb</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab35e10585026c01b0cd5f226ce3f8e9c</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabcc90325e90bbc6d819c6d910a2a834d</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_core_error_quark</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa186f9e9df937f6c544fce95bf25739b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_library_error_quark</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ab78fd61bdb7ee396d3b136929b9bb3ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_resource_error_quark</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa2a6b226696b129475f8cc6e6a63fc16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_stream_error_quark</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a72b819dd1550363ca46542291cedaa70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga32ebe48ccbc0b3299a4ff446b6f2ece7</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabc117dedc77055248064e2f17f3c805e</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad35a36e4fd0ef29b3e2651bcdd576935</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8d14f9ee8f4bb7472687b155c0885f72</anchor>
      <arglist>(EventType flags)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee1ba73b2aa7a702f23155904f708a3</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7b2562a9909816248afabccbdd62fee1</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaadcfc6abf37e71f9421e5f053a1336e9</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga72049eab6a652385e53496eadc783021</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae4e62529846bf885cf93342b0e17a7b4</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6cb8668ef2383eaf8d9d43ea4d7f83ca</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3335f396e7bc7412785749e72033c88</anchor>
      <arglist>(EventTypeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6fcb482fb471256245775d1fe4c414b1</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga97b6ef8ab2e5ea87c349f4b8b9eef432</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf6a8dc4968ce0256409c88f3d810510a</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae0849def4974e3bcea49a53b3d05021b</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5ee809eb3e6de484bd7f30dbac39ce3a</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga81925e5ec1acc785e4eab4e293a6ec9b</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf4f6d58a4306f22711a75e70ab8e57dc</anchor>
      <arglist>(StreamFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga596dc48fce9a7998c5b43cc6252442e2</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaea47c95b536725f91817f7b0e9edf9f1</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf15ddb539ba44557ec14216bab51c490</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>register_format</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a983c1ed00c01cc1b03bc39dc542ab022</anchor>
      <arglist>(const Glib::ustring &amp;nick, const Glib::ustring &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>Format</type>
      <name>get_format</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a4243efcbc4bf17b82d0ad5d76d265531</anchor>
      <arglist>(const Glib::ustring &amp;nick)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formats_contain</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a293683d299c17e2a7771ee52c7e55090</anchor>
      <arglist>(const Glib::ArrayHandle&lt; Format &gt; &amp;formats, Format format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_format_details</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ae513e2ac77677b900d96f2efb84c1939</anchor>
      <arglist>(Format format, FormatDefinition &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>IteratorBasic&lt; const FormatDefinition &gt;</type>
      <name>iterate_format_definitions</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aee09bd409d72fe42a698970405ba41a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga057119e54ee22aae5dea83661e051aea</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9980eb45011c1bcc50122c71087d7f59</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gada9a67ee84cc12fb2e875c366bc97ae4</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac7d749f90d7f04044a06460c2f57a8e7</anchor>
      <arglist>(MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaffac56d0d13bc01486a38f0ca590cdf</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafbb49587efd532aa2d9a02251d668f3b</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4e4fcf70dbc4e643cc225fa2cc723f76</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; T &gt;</type>
      <name>wrap_msg_derived</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ae4818fb7ad5f6f7a0aac4d5b069ef51d</anchor>
      <arglist>(GstMessage *object, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0299ae7970ff8b4f010a970a36525a17</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga915a6286d265d5e1563175e49b6a2626</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2060dd64457929089c3e0eebabbf732</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9bf750a9a085746ac8b7c5505370adce</anchor>
      <arglist>(MessageType flags)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac40853dd3ad5bd7b172fd7e5c1ac980d</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2805bb118d95d110750368980a7b16d2</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ae7865214b8f3960c4061a615d9c2c2</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga35b542f3606a5596df819eea17f7219f</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ccaede325ba3d7d34a5332d71f688f8</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab06de140b31b70d4e601fa8c176492b3</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae378293aaef002e3ae78c58d1ee1017b</anchor>
      <arglist>(MemoryFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga835b4f2837f776a269db8e550671fe07</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gada4463bfc140fddd699b5f5a0869105e</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ca259834f7ca38cf27d015110ca3532</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga006a71975f26a1fcd8222e4ab93d4430</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7c7f4a72ccd96dfed8d7f4e6674c9d52</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga72a412f01eb7f472a95aea296413a962</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga63501860e4162863ee8cf53a0236c594</anchor>
      <arglist>(MiniObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga26ae40a7762dd01c0cae9427c9da9f75</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga89731d16ba89bad09f4d9389bf8b6992</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaec7d79a048274fdf1a6f2f27ccdefa32</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga54526cd74230318f684d79c7d9e88537</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga79a80218536d335aa8de1f7634d61436</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad58c1d0a698e8405ef7859e57d763904</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7bf3a9b28fb6b2b2d4e69c95cf5e2eda</anchor>
      <arglist>(LockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4884bfa3bfbe426e9315ec959cc0e703</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9c4a656d3e54e49eaee3ba775d52260</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga05b77e78dec1ec5f434fce2b379e8c51</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0a8398e057f2253ba276b22a3b07bd4a</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1434f7ea4bda9539c412c01629eb464b</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e00c1e8f9495b8ece1cf3aee7e759f8</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa129ac478c4aa00c409ff0d6e48b1829</anchor>
      <arglist>(ObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1d0b926f7f284c95dc342ee7b06e19be</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga79da700e48c2b6aa814325db4abd6f40</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4c58f3de6bbc8985184d6325d2d773f0</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2850c532e43c17b0619c194afbbe596</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8027553b41f1d6edc7e212e6b1a74859</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacefd8d325016e7ef882d03aa23f5a57e</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga98434cefc0d07c1fc4967a31c2485e66</anchor>
      <arglist>(PadFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga57edf98a6560f60b077f802b5e34cbf6</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac1703fc84a9500c1ec7cbffe0cff02e8</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7219a430c75a6c15f92bb62c9d3e982c</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5d494f6b24267553ff9589b2fb3f3f3e</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab78a65d0149907c92757448615cbee10</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gace0d5c35303fb366fc823f75cc8dca51</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaf0d6fc7dd582ed8a95437dea8ad4f8a</anchor>
      <arglist>(PadLinkCheck flags)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6a7954e09f380ecb866cad1bdad60f14</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gade59999eb23dd89cfbab62440dda6395</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7924ce34ec3ee88f53adcd2fb231e070</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga844fa9494f829bc620cef94990c13de3</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1e6c5da2fe87304f3768a517b686e62e</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad4357b722f49d378789b15cb3471c98f</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafda85329579fff8fd670ac6ca227ed6a</anchor>
      <arglist>(PadProbeType flags)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa4879a96cc8e02dfcb83716efa223af6</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9843bbd8209fb70bfc8d0d90ea3ec66</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga32ce8e5ad6c8f9146d77c75064b7f706</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga96758b37c015380404784817042fd496</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga06c85352524614956ab87d8a6371fc81</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3d2c67adced3128e54a4bfa27931905</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3b138af75dd830551b7937469e3e950</anchor>
      <arglist>(PadTemplateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9b693b27b7d4f8632244bb4076bba63d</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0d694543acd08b8dc4db6d936bfe10ce</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aa71b6a5cd5fbf111946dd2fc86c64c</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2d45b674e9bfd34cb0a84395b05b9f86</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6d6f850b5cafcf8769e1a3d82b758d83</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga29f0b3f7818601eb5a1b83dfbfff6d64</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f631078cd65c28dd5fc921f19528a79</anchor>
      <arglist>(PluginDependencyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ce86d3355b5beb4132e2a38c8ee7039</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ffd3a7db2f961d842e88f62d4276068</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad1a088e736b81db92d330fe3d8894474</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6bd0d38b90257f70595dbb1942edb30e</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga83365a08b07a6d783710d5eca0c2395f</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga27a636268771df7b3bf2f0ffd57db3ee</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab75afc7b19015b11a5599dab6a5ea71c</anchor>
      <arglist>(PluginFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2a5815a76a35f7f577ed9a67a5e49422</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44e9b6fb92539d2952ab50b1e83f4eca</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac7e39b1c6b7be86ccbd51ffbb82e1744</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga035e2814dfb59fe568865c92ed4924af</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d9484516539eed92502920d7d4a432e</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf5224b493a0cacbd83398aa4e50b1de5</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8967b408415294ca26f84e8d3e23ae9d</anchor>
      <arglist>(QueryType flags)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga98bf90010687689497f5fbb936723edb</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab331e97293c8032911b5ef50d580ba3</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaeb48cd82ed3734ad3eecf22e244b1cc</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafbd87e3d1f371b9c4fe634440cefc21d</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga617f1c8a5ba893798ecff11c881bd55c</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa537708c4bbf7953a0121f0acf397269</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga43a0d4c786633b74e7397fd5393f4e8e</anchor>
      <arglist>(QueryTypeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad9349ec0c5863377132713181a0b720a</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga55b37b1befc90e8c6365b1833a5c5418</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga175210252f7a6f89c1e23c35b6fdfe14</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga269c686276bdec2927dc540e2b17713b</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacdbe96ff738ca6243d66e7cfad340623</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad74f608b28b19e9434a59544ba07f79d</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c20ba3e5ad30eca05631af8e86ad914</anchor>
      <arglist>(SchedulingFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaedd325f089f3d372446aeb4d13f2e43b</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9f83fcb9a2495b385a3ea9153884aa4e</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga62479854fdb5238659c2149268c57cc1</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2e4e7b921d60a98b42f2c3f3cd263ea7</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee0e505a42a8f6ba5dac3e22cdb0a08</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f596e584b34eeae4f63fb4dd1e29a91</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga165cbd427910aac8cf3a205588fa7c7c</anchor>
      <arglist>(SeekFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaae46a2ff6263eb4b545417d478af74e4</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabaab6ebd815cff521bac3152cc843d2b</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f8429dff34f06c45a15fa0dded11083</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a3b65958a9b7cfaeeb328c84afca3f942</anchor>
      <arglist>(std::ostream &amp;stream, Tag tag)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2a0bf492c36256b11c36e4dea5b678a0</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaabc48342e3966b22b9bfc5b1bddfcd88</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8917c0d503c71fa99f2fe710504759e7</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga30f0e227659e01ccb8eee154257259e9</anchor>
      <arglist>(VideoChromaSite flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga446da2073482a3608d50d31530b7f90e</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2ed0c3bba89832d792dde0d6f20c41b</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga672c4ac319bf175fc6e8429059a08aed</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga17ae246814f0bb88b693f5821c52f2b5</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga945ab38ad06e8997264ef7f26187dbf8</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga86294c30ee3092341f4970d97de2caf3</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7f9020a447ab36c4ab5647dd131dccaf</anchor>
      <arglist>(VideoChromaFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac374124fb10dab3a4fc60cfccd859abb</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee9b460f33efe6c1d5266dc9059eb80</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9ebc7da908283bbcf7d60f28cdac0104</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga78604cc537b66c61b4e352aeedab2223</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1af22abdebfda4ce2a178e8ca89877dc</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8b5a7263f78170496bbaeca991309803</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d03ea5f7db2714a3d4a481415c8924c</anchor>
      <arglist>(VideoFormatFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga082a47a9ed94b63e89ee677bdff454d5</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1c64e37be754ea3a4b9df97e8a9a984d</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacf9cd6bcea1224e2a5c8140334f7ae8d</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga15e19808a68a71705fda81830781051b</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaee89d3d6f2f60de30371b62eca474871</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafae4f22c9b1f9a61fddbe0b87b9ba18f</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa447c42b4a087a37deb762b7c083c55e</anchor>
      <arglist>(VideoPackFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7a30ef2112ba4046a486cc60b346e988</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaabbafecebea3cc61d500a5444b649ba7</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf6adf5505d5b5c2e3c6717ecd1c899f2</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad8838f20725b6ae1e34ad404b3043358</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab1b96caf6deac4238ccd07f9fc9a6880</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ac9c6217d85b9dc6449d2c19c0cdb8b</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab12e11beb408234fd472d42a1ed0893f</anchor>
      <arglist>(VideoFrameFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga091085c31d24ad2d1eb543bdfbab45a9</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4e847009e4d63a5c4f8df780b36d8b59</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabf20f763daa2d49b151e8b2f94b4fd1b</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2a8608632ccd92e7a9dd33e77f9a97f</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaef99dd116dd664a6db1a7e35b38d5d1d</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4ff757abbda966f536ffe1cc15779f77</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga76b7350190de4dbdb6b9ad16d10f56bf</anchor>
      <arglist>(VideoBufferFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga396fc5bce3f2afbddbabcfa172bfc244</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga839fffe00db937aa9f4cc82c660a75e8</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1c55fc337d3fe27b18e633b55b82baa0</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga300d07627830edc4d63b1bee34ab2a07</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga56ee1f93dcead716950736356dc08abd</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga30989b85e1703f81430722a07d8b0a43</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga597d1703395efeb64a174fdce5df54c5</anchor>
      <arglist>(VideoFrameMapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2217b2d4ce90a13ee526dde7975de8fe</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga45a35a9bd1595d2354f511dfc9e9fbee</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8d1577b8e11baf013baf457afc609f22</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaeee917d6b3ebe82254b41455e0bfbd55</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ea3d8bc2495a9c108687142f6d5392c</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga65e90ce06fb7ba63338300f4404d8260</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5b384709651a65abe58d0aa39915dbfb</anchor>
      <arglist>(VideoMultiviewFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae55faf8133d52d275e1e8e14bb861b2b</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb6ebcb847161fa674b05f685e7e9e32</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga71bd9230c70c5320c0072ba2ff364753</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa8a1d5e5ee6c9b0befd3acc27a2789d2</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga879f2b203fb4831c111645f95a8e3802</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6803be6fe1721463680ba9d07f8dc340</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae612c461119e3d566dfadf2cec9eba44</anchor>
      <arglist>(VideoFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab7f1d51454e285ed70c26df77fd05ee3</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9d82ad362076f1446d6fe800c86b4f82</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab61276a2e52735af1a4b625516f3200f</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a4368f0336db20f7dae336c97ebce0ef1</anchor>
      <arglist>(int &amp;argc, char **&amp;argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a8332a1727c5340228c7bfcbcdb32bc88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_check</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ac5270048b2a8fd292cc1f79829c628a8</anchor>
      <arglist>(int &amp;argc, char **&amp;argv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init_check</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ab07e03aba8e93dc39f98a31e8736af85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_initialized</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ac369dd8908b211f0d4af9a78c1926095</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinit</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a9d11e5b7f8595c6a0dbd076bce6c5487</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::OptionGroup</type>
      <name>get_option_group</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aff7db258517df2bcca32e41893607435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>version</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a1e757d30f1384d26ebeaee382adaf029</anchor>
      <arglist>(guint &amp;major, guint &amp;minor, guint &amp;micro, guint &amp;nano)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>version_string</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ab8743a107ce56679e4eca594d43d2ea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>segtrap_is_enabled</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ae583e9494d65888f69c2ab467ea54930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>segtrap_set_enabled</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aec412b8fd368e444827507dc4f8225c7</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registry_fork_is_enabled</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a8d2a53cb8f6c6c4c762d38e96d3cc742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registry_fork_set_enabled</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>afe9e89fc1742cb56e5bc2cefe0623703</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_registry</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a8a735da19aa7ac6589aa2c24c5febb0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>version</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa2db2076f0b121732aaed6ea00eab84a</anchor>
      <arglist>(guint &amp;major, guint &amp;minor, guint &amp;micro)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wrap_init</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a962c8abd540b04152ea3ca89d22b86a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const ClockTime</type>
      <name>CLOCK_TIME_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a07ca62fa6d891070ab6d46c45cd388f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ClockTime</type>
      <name>SECOND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a4bde1acd8d4b2473abaa40db00c72606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ClockTime</type>
      <name>MILLI_SECOND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a289b4d50803b7679347a0a8e036be3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ClockTime</type>
      <name>MICRO_SECOND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>aa9044c3a318e2765d83844521b7ca436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ClockTime</type>
      <name>NANO_SECOND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>a3675d1350079886a8d49878f0e927d51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gst::Enums</name>
    <filename>namespaceGst_1_1Enums.html</filename>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a0378724782d11e29da8cfb6e708f66c9</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a2937cd7b807daee22235150529a17bc6</anchor>
      <arglist>(StateChangeReturn state_ret)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a8310181ed41b3212275d4fb41c38451f</anchor>
      <arglist>(EventType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_quark</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a88df7a135dda7b1a3285fa8978d434b4</anchor>
      <arglist>(EventType type)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>get_flags</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>ac17c1b64f57191a1a56bbe6f0a0989fc</anchor>
      <arglist>(EventType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a896fe043ac078adb50019dc1e8f0cd46</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_quark</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a670d472fc7a2e1682999432b0c95ae25</anchor>
      <arglist>(Format format)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>acb88e782c26c4c441d0f1303ef8874c9</anchor>
      <arglist>(MessageType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_quark</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a83f7e34de470411727a25254b581c6e5</anchor>
      <arglist>(MessageType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a8182e1666b3705971fa2d49a2672d13a</anchor>
      <arglist>(QueryType type)</arglist>
    </member>
    <member kind="function">
      <type>Gst::QueryTypeFlags</type>
      <name>get_flags</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a5f5676567a19d03cadccba147b5c3cd1</anchor>
      <arglist>(QueryType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::QueryQuark</type>
      <name>get_quark</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a0a4f37b6f3e7ceb7208488c60ddc7973</anchor>
      <arglist>(QueryType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>a36796ce5f2e605f2d90a0df3e95ea9a8</anchor>
      <arglist>(VideoChromaSite site)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>video_chroma_site_from_string</name>
      <anchorfile>namespaceGst_1_1Enums.html</anchorfile>
      <anchor>ad5a8e8af76920e870d2e8ef49045fe1b</anchor>
      <arglist>(const Glib::ustring &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gst::SDP</name>
    <filename>namespaceGst_1_1SDP.html</filename>
    <class kind="class">Gst::SDP::Key</class>
    <class kind="class">Gst::SDP::Media</class>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDP_OK</name>
      <anchorfile>namespaceGst_1_1SDP.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665ac1b523129890430f35e07f3969ce4cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDP_EINVAL</name>
      <anchorfile>namespaceGst_1_1SDP.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665afeec8c2161446726aaf1c8c2d1f5f1f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GstBaseClasses</name>
    <title>gstreamermm Base Classes</title>
    <filename>group__GstBaseClasses.html</filename>
    <class kind="class">Gst::AudioBaseSink</class>
    <class kind="class">Gst::AudioBaseSrc</class>
    <class kind="class">Gst::AudioCdSrc</class>
    <class kind="class">Gst::AudioFilter</class>
    <class kind="class">Gst::AudioRingBuffer</class>
    <class kind="class">Gst::AudioSink</class>
    <class kind="class">Gst::AudioSrc</class>
    <class kind="class">Gst::BaseSink</class>
    <class kind="class">Gst::BaseSrc</class>
    <class kind="class">Gst::BaseTransform</class>
    <class kind="class">Gst::Bin</class>
    <class kind="class">Gst::Element</class>
    <class kind="class">Gst::Object</class>
    <class kind="class">Gst::Pipeline</class>
    <class kind="class">Gst::PushSrc</class>
    <class kind="class">Gst::VideoSink</class>
  </compound>
  <compound kind="group">
    <name>gstreamermmEnums</name>
    <title>gstreamermm Enums and Flags</title>
    <filename>group__gstreamermmEnums.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AutoplugSelectResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab663c59d3c19f60bf959462234a9664e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_TRY</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea72228236ba4d9a20e336c60e82a3c0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_EXPOSE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea701f3d182e8995604f14a3453a54a776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOPLUG_SELECT_SKIP</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggab663c59d3c19f60bf959462234a9664ea2e5998f93fe706617794ed81f0011686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultiHandleSinkClientStatus</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga27bd75beeb2f1ff9bb61e4861b9fdb00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_OK</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00aecee85e54e805adad7e2dbd8f07512fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_CLOSED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a9ab18e1dc8116046412f131d3ad6b970</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_REMOVED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00aac958d195dedce6ce0f86d50dbe2c164</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_SLOW</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a095f49605a6434d87ba6257edd71fc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_ERROR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00afb809ad799895c86b6713506dc3ec204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_DUPLICATE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00ad86c932bc24b0ddacb06fca96d538ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_STATUS_FLUSHING</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga27bd75beeb2f1ff9bb61e4861b9fdb00a8016f375f9996ab40d1f466bfbc6780d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MultiHandleSinkSyncMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga335823ee72f5d5347d686bf0b598a8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_LATEST</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1af35e17d9705ee68f7a678f62f34de794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_NEXT_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1a5a898bf16c6ee8339bbe2cd42ebdfe58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_LATEST_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1afcf4e3522e05e0c9e0b9d71bcda7fc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1a23d5e6901bf850264ad08352837e3287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1ae6c03fe40db4e91726e19def804d01df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNC_METHOD_BURST_WITH_KEYFRAME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga335823ee72f5d5347d686bf0b598a8c1af512477872af344e8bd3445a90698d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlayFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafd4e6f9ed57a34893b6118c02f95cd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_VIDEO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a0228d7f1b9f28bf8d544d10a9b012085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_AUDIO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a0937f223a9f86660c6d6f9e9b94bbb88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_TEXT</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a3cf0ca30126af6faa1d88f402c7ca455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_VIS</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a023331cf03e6de8eb228876432e8ee9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_SOFT_VOLUME</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ad8e7ad76487e1ff8328d2ad019431d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_NATIVE_AUDIO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a4e75afb02d1bac3ddf484e89a2b31edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_NATIVE_VIDEO</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a92cf43d776f130b14635627e87fa322d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_DOWNLOAD</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a5d71f434adaea49a677b67d7a5806b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_BUFFERING</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a3c5797986cdde2d75375c6a306496242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_DEINTERLACE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ad2ec2b54b1d78678568fda1a2231bc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_SOFT_COLORBALANCE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15ae9d42110d199155c58456d914e3f6bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLAY_FLAG_FORCE_FILTERS</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ggafd4e6f9ed57a34893b6118c02f95cd15a770d4b71e44676285c2e5fedf2769995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga00d83dfdb1f2beeb9b2f8033e0aba1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UNKNOWN</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a638eb65d00e6ad00d91f28199eb1458c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ENCODED</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac9964c36c4211772b104e3d0e6bdf0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a697201dd2a9335d429596724b43ceec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YV12</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ae3ec9fbe55c27fea2b748018a46d75a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YUY2</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a0b4cc54e730ad0f4b5d87e7df601ad94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UYVY</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a9e72b3ee39bd55850a18673add36ba22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_AYUV</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8e21198f756d65efceabbcb6241cbb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGBx</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a07d6a4bb7081f99c28dd29c3dce20d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGRx</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4abfaf4e21e68486f7e4206bdfd75a259e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_xRGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4aa0cc1877221eb51fa93da5cdf031626f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_xBGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a83e7792867a162cacb75485fbe2f7d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGBA</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a075f98a35666cfb36f579f217988327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGRA</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a070a1005709f08be26aa0a73522ef1a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ARGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a27f079cbec34e2c36b94dc9c1eee07c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ABGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a87ffc660150f42f9712a85a219368e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a11eff2d976f18008424ed904d80bb156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4adfc0f926eafe717858459a841dd86981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y41B</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2c48a036f1b175463cebeddaa68f3f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y42B</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a009d443c72ded7a0b23f40a4da01611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YVYU</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8ad585eb02647b980f2d277595a5d77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2b739c5accf1ac0247bd789685640e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v210</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4af7ab5f9a8919669394bc43f9e352f6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v216</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a36206748f4f2b5503ca0fc03dc06cf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV12</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a101e67fddb19227bbe8b110be49117e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV21</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a8e248983bfe5dc4d4cd42db726a2b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY8</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab8548f8536c2168f1802933f159f99e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY16_BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7f48f61d70470197f62d2207aaee19e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GRAY16_LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a46a1ba5157183081630854254db4f9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_v308</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a02a7a19b55f848aa7ce4d13e30f40fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a565d9510630f4ab0980b9face265f906</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac34aa773a41a555249c8e581ff2ea318</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB15</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a47708b30799c5ababb145f4c008385de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_BGR15</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a49fbf065a561a01e3126919252b026f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_UYVP</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ad69c335572df1a679068379d418f85d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac6378f709df8b61b88160ed310f1456b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_RGB8P</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab34399b8b219177d81b74e1ef9d4ffab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YUV9</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ac227bbc1dab14cf30690f304e2c6679e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_YVU9</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a915038431d487f1dac0a07b7acdb81d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_IYU1</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a94c33652366dc83a34de4755f73f5bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_ARGB64</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a090d249912fd919cc43ac0b6c17e82e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_AYUV64</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a81e7111ad9de6e3463b26ee66745e35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_r210</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab202587bc337e1908f713d3b2dc9569e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a345d3e3e98f0cd198321a521cdd6b2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I420_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a308a318b531dd7c228aa4ec0f5c2412f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I422_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a1baa7a582c25bf558cb1392cc041294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_I422_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2ab0a11c044150819b81f60a4bd5099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7e988f860b2802aa2078d093c3e0f75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_Y444_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a2b7b8a56945dfa45a02f3077cb2be387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a6c9a25da403e0a9f9085d9c1a973e96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab9d22eb5d9e62c92d28baac03e7faeb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_GBR_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4aca691b1ff9f5984894abd99ac2a1205a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV16</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a55020beff3930f349ce626a95c34011c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV24</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a047f119c2bd228d9996dc91da7f597ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV12_64Z32</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a413a16c082dd8c10cf457d8b22fc51aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a923210f950bdcf73c4c61495dcbde0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A420_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a3f75e10081a7d8fe8015ed9f5552e6a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A422_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a7681f4139153e96bb37b664dab9fa10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A422_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4ab9d2d1b4d67a8da865c07ab477f38d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A444_10BE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a0bc9343ff763023cbb641183433aef1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_A444_10LE</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a45018bfc9327a72a38d09281afe3c6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_NV61</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gga00d83dfdb1f2beeb9b2f8033e0aba1d4a89ecfffe637f851d22faeeb5dea78d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSinkSlaveMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_RESAMPLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157ba03e157162e8ee942b2cb99bc539a6744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_SKEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157ba45cdbf405ec23681840bceb58592b829</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157baa2bf40ea049d932d7cb901f32a74d404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_SLAVE_CUSTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0693b6b997dce03580581200c5cb157baa46c3bd5e647d5a8c158656884e3a6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSinkDiscontReason</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_NO_DISCONT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8acb3e678cf5c82a16c35f4b494f70cb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_NEW_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a3bdff3e0d260aa78766897d8066f3ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8acf07cd894ce8e1ce23da85956772f900</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_SYNC_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8ab996821e1453ed79970c3871f063c1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_ALIGNMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a49f77f951ef5201cb6256cc313088480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SINK_DISCONT_REASON_DEVICE_FAILURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga55c42539538c13337f1340676c1fefb8a8eb46d2d47d998f364bae5f16fbd101f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioBaseSrcSlaveMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_RESAMPLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a3fabb552a353744d2db5a7ea4a6d50ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_RETIMESTAMP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a6a8faea7c736143bf2fcd179b3354380</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_SKEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8ad05ce16891c153546bffe723ac4f4753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_BASE_SRC_SLAVE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c14e35227f737caca44f08c1e77b1e8a816b6445a385479be8b78bb6ec30d0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioCdSrcMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CD_SRC_MODE_NORMAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9a0bf41ca87b935f45aa8e57932678bffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CD_SRC_MODE_CONTINUOUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga220a9e9c174a8aa8eb4a606a5fab69d9a99b849a9c05fc9ee6388e37e26f4fe95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac34ed94192174a0a696d18c769228df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_ENCODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a3094936bd41e237078afc9058201003c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S8</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ab8f10ffa12139a8e98d4e85c927deaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U8</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ab56dce8a94f52fa0d75295f3afa1ab19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a513280409354adc5348b3fc6e56a2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a10e92410a150f5bed8ed0af0fdc94196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a5aa2fa03598e71dfc61c0129982c12ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad697db132b49504c568d652f70f85d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a150eaece239a5ec6bc8c8a6ffb5949d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af2bbac951bf5e6d0501ea458239fd81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af0bd3dbebbbf515fd94ab2303caeaed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a766610fec28c7a821f7bf2fa3c541400</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aad9d3c71b2b6281676aa3e57b04afda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6af6d1dac505b3b26153738f56c10f322b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a2cc45b4344b647147ea730a048936790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6abe3497be3fc579251770a50e2b82ed8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aab7f39614748afd4973ba3599307e119</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad435195a72a043b1eae32af6ead5a469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aa6ce93e5f0bff06065f6c9d93d09c98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac94a094e239b7bebbedc7873845e8ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac791898c390adfa7db95c9f014c3d941</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a3083c7dc916a25f75e3a2b55e3690e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a977674a388dc9cce29725dca336e6fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6adf8e0d72e48d0b11903888f15a947f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6afa09a1d22a302e4013bfc026690d11a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6abe24b6d0e44f64a6e180fdb79d334fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a61539a8e14817ac0239a8d8db553596d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ae9f697c4c144655a877c0a38a575a4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aed2f19b8202b7b39b7d2a8aae2f06023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ae0e68875039fbff89b5dc1229c5ada8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a6379ddd48043a66a9abda5c259d9df9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64BE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a7f92eb20148442eaf19e89a161859556</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S16</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac67218f6cb6550d6cc893e7716543d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U16</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0759c4f33eb386c49a44252b78bf8e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24_32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0ec3dfa52ac73609c8a429be9e0c12a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24_32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a9ef46edf321e7a26f2ba599c28267c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ad2b106d20764330b7231a4f0062b75da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6afd3f23f878f030f98b446bb920641645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S24</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6aba190865bc72b59474a52e0eaf28a3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U24</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a81b4b3aefa9143a1b1862d81737e2940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S20</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a39e7b683dcd1a75fd9adbdebfbe791ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U20</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a0245e3690eb7a61b733e399b173c2aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_S18</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a198597074204a882ba7738cb70f66e85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_U18</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a7c1771c5da285b772be724bf790b5bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F32</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6ac3b96193e43abb19aaddfcf9574aea5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_F64</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6b91ad3cbec5aefbab162bec0bc87ce6a8c426c23e04c7c00a1d35b5543554dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFormatFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_INTEGER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1aae1103b852b23af879e6c131126fce93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_FLOAT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a60f6a10c080582ddbb2a9d40294d6985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_SIGNED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a439ed8a9211c024535fff6a2eb18f451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_COMPLEX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a15fde8b6cfbf94198dbc85107aef887d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FORMAT_FLAG_UNPACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga78874aa969142e151dfcdb89c3d16fa1a9da1a47f3105506dd2fab6119c359195</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioPackFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_PACK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8a16055516645117c872722343636f946a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_PACK_FLAG_TRUNCATE_RANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5bde445c263808c7f1932b395a8545e8ac2b3793f2e2f1b0a99cb4a65f7769d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5a337d863acee38752b85853939128406d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_FLAG_UNPOSITIONED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga400c8ab36d55ec4c05e5f759f6735bb5ab58db1d22536292189c9b2aa99d97a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioLayout</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_LAYOUT_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1ca4df7596e4973a5b7a9c0c36720be555b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_LAYOUT_NON_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab8e54ab7e8d3e72a447b14700ef6df1ca1416fc7990fbc10a45b5f16e27605f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioChannelPosition</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aa9751f60829530e2b2dc66f2b524aa0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8af74ad466c869de7f9a7dee07d487430d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a4f12035e1122fccc66c3996280432317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aecaf318780ffe448d44e5ee66e16e5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a1cab9c194733e8e6cdd63522e1c1161a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ac55c3a496beaec6ab179967317e32c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_LFE1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a7b1e07c0063772101a1ad8f804f8d26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8abf824af8768e795ce6402aa528c3e391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ae430385367d3d068e3df04761e3c3c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a3633666231537bc3dc9136e4bc8086c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a22e8f07a542d37f760a8f3f7f16e13a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_REAR_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a19335c793853df15c6995e3cf1f98c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_LFE2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9ad2e5a69dbe1f6428be9226e61d167e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a82bc75aee6e55c2562bb6a59f08aba5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9f3928b868425226ff5e9e2758cee9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a8c39290ffd13590bd40b097279af4019</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad6c019771d870b0435ffbb49d18e742a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a3e53d7b905cd89bfa3cf52d6cafbcd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aaf2d7f92e272fa88484e2aca0d094eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a9f9c54abe7984ba54101e8d3db92b365</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a2718b0c92a360e4820147e3797c63df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_SIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a24e3513e95c966d85872dda713ed9afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_SIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8adbb13f77362ed3e99a0275cffde6cf5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_TOP_REAR_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a5a14de8a40249c40c888e2961f914696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_CENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad8e52e73d94920f6871c03284b58e024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8aba866322333ce51a6fd9bfcd4032a305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_BOTTOM_FRONT_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a0981f25835ff8955eca7758300410361</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_WIDE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ad2b1d212d6d1110ec52a22a9caa0843e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_WIDE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8acb521c7a248842d8ce409e64842fc818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SURROUND_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8ab413c4dcfda28fb3beff70102cd633d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_CHANNEL_POSITION_SURROUND_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga44c021a2b43d884b26fcb279085267e8a2e054b44c6b5d38ffbec8f364c88674a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioRingBufferState</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_STOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7ab14d52e9652a2678cb06180c4b5bdf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7aaa637285c8994ce7ca5585a2e27804fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7ad681402cdc8482f51e8f4fe724c17c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_STATE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga489cb44c459f2078c7ce7ef5766313c7a94e8f7ade84fef2fc131e472e5fca817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AudioRingBufferFormatType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_RAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a6dd23cc4327c3d0fc03e0e6e72b9864d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MU_LAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a771d1486d2e842bf94f2692e4373e75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_A_LAW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a7f6b35b06c4a5e6a656b08f1c1beae84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_IMA_ADPCM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a28b4dc9ecde4dbb46ba3efe66066004c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a0e563b1a8cdec693e00dcd170ca6a5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_GSM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a78b16df4f32700d4f6f6615ff8556f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_IEC958</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a15f4e02a5c95ff53734971ae409fb950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_AC3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a7318056ef25bdbb8f76f22e82c8d0e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_EAC3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a624f53ff70f81e72b003b2b42877dde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_DTS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95af02882ce548c8648d84d800ffedba18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG2_AAC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a0868860e31595c2a3cb41d8b354fcb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUDIO_RING_BUFFER_FORMAT_TYPE_MPEG4_AAC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9807f64132662fa928bcfa54fa94bb95a9e4b8e08e5d52f0b9cd1c23b46c53b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaseSrcFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_STARTING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625fa5f8e74922785ac024845a185569ac036</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625faf201ca21166a14a4d777a18ec9a9c849</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_SRC_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1e4bea092029f36ab0365f411d17625fa11177019c0658aaf742a6eb5aa741e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BinFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIN_FLAG_NO_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405a4f6056f181ad3ea90e4bc9a5e9abd4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIN_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga73bf00532f6b9ab89b5ac148c78be405a8b99416e4304d393b4d7fc1a2f14e609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_LIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1aaaaab8b684607c64f057f14078653106</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DECODE_ONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a4154e192f7c0671f6cc237a45d7f3d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DISCONT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1abf6442189660cc9d620bb6d3b82f93bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1aec2e36f77703820d17a1600737c8be9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_CORRUPTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ad1daa4e5d4e04da602415b1ee278b297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_MARKER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a3dbec7a41020f24f16373700a670cfa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_HEADER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ae99a8ecdf42daafc11ac3753aef3da0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_GAP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ab368764a5318bc850b8fb6c7ec4ec054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DROPPABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a3122d6bf5c34d1b0141ccd92c4ea78bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_DELTA_UNIT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ad7ffef2a1284369edf0fe593b68e761b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_TAG_MEMORY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1a56937de0014f86fa07ce1747ce6bc407</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_SYNC_AFTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ac9e684c0668bb9d388e5a835b44b7914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga1f4f429bfcae5c71a0f60d9e91131dc1ae4e6d0dee1c78d6cbb9f75fc64106214</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferCopyFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508adef56c1b61514e99ee42fa96dbe1667a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_FLAGS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508ab522e06d60a443a0512bf68b288a8395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_TIMESTAMPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508ad5bc3ce57c6e795b4519f88fea8c6536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_META</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508a835ea31dcd0737934eb12d806005fd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_MEMORY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508aa9c8bfbce2f90513a6d4e03d1bf8257c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_MERGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508abdb0224be516504d0b77eed470de9518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_COPY_DEEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga19a54890aefe6e8c41cb16f2bcb30508a2c8c2c1ea2c67358de0e304ee0403fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BusFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277a3035dce23c7c8bbc2a065f6725a37cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga656aaff9f5778a57f9e019f478079277a5ca8ee3ba263ebda0b73aa2edf8b5628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BusSyncReply</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_DROP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fcadd443e34439ad969f5072ba33ea278ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fca8631f713ab9512b6fc7313648a68ecf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUS_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cfc417dc700f0f36e524a98b5ffa6fca58a1df40bdb9c9534a11c98dbb3b613b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CapsIntersectMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_INTERSECT_ZIG_ZAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baaabff8f64a6939ed25f9071c7c6a7db07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_INTERSECT_FIRST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4ae8812f645040fb8489634698380baaa9244d9cdd110b5024a484b8efdb74e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CapsFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga11170996386060383fba2d540f98e4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAPS_FLAG_ANY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga11170996386060383fba2d540f98e4d4a66854f1d35d606d91c7d94d2f338b70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockEntryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ENTRY_SINGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2ba1d2b893f522054801127353ec4d7206c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ENTRY_PERIODIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga82935ffc3bf9a6fa28b20aa0a54e6f2ba09279ed94cc8f8a1da416fc8a0e29415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392af7e7d265c0ebd2eb477b15acbb6cbd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_EARLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a7995148bcfdd0e31cb6601416a191d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_UNSCHEDULED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a839aedd452083679a18cbde705761564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_BUSY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392abf98feb9c90a7b11f373fb1df46c17a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_BADTIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a6ba790193c4c69c97271ca8c20c57194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392ad2c682cd285ecd63fb5f3fb7f51d4d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_UNSUPPORTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a9d9d8bf8743fdcfdbf4c8f82cacb8d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa501f23d690de389e755e652093d9392a40c17ee7a1487958e4e592c58839c359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClockFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_SINGLE_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080add2ad77a78de9bb2903e66b62f682181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_SINGLE_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a5c1fbf9203922b0e59052e0fd3cb8529</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_PERIODIC_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080aaa80159a2475416269330dae5ec69c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080aa335a06b0ecf5193bfd01d9da0665357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_SET_RESOLUTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080ae494b270a816065047a03827f41f8449</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_CAN_SET_MASTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080ae305a77c17a6fc0d404e4c8fcbea27c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_NEEDS_STARTUP_SYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a69cc4b69a5d601f3a23141fc0e9ac323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae4cd01977bbec7f009fb9725d8cfa080a65edebbef0b7328be4862eec739de31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorBalanceType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BALANCE_HARDWARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0a44670115fbee0946f0cadad2900e8077</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLOR_BALANCE_SOFTWARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga28a6bd50554fbae722adec29e3810df0a95e081681cfad3662857817f985dea77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DiscovererResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a8dcdef929b310950aec733bf9ced24ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_URI_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a875a7f86cdee8ec1c1668ecf79852715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a1f5a3dd4c4d77298b71d146aed4c534e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_TIMEOUT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9aa42b099cbe630c659229c0902e6fdf9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_BUSY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a9786c0062476a3a3ff065a3c8251c926</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_MISSING_PLUGINS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7e1081b734df474b5f0bb11ef2ab63d9a11089b5dd6d7bdba3bdc0f12eaf81ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DiscovererSerializeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_BASIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaac0ee33630a3e51617e9bf6db47a4664f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaa864a54109abcc823c796ee4196197f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_TAGS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaa9a226374f2aa231279f96a4e1bbeca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_MISC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaabba6c3a695d8027d8c7564b907abd58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVERER_SERIALIZE_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab49ff8ce17253ba02099015d0c02dbaaae4f6e955c09d1efb07d28f7e32b4c90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ElementFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_LOCKED_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea751fb9ba28c3c9fd57d41e53b0f23479</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea3acc31da3c2d229c6227f31e4771024f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_SOURCE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ead176a5753453e26242ef8ba1ebe1889a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_PROVIDE_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea4e832e5c5feb19f2782b7f6fd15d7870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_REQUIRE_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea71b2f5b81e8e11efc1750ba5804011c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_INDEXABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea8f61971d5176fd44056aa0d6ef425c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELEMENT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf326d5b7f7963a4b2dbe8cc1121adc9ea76e0e2d769ad2cab146d03cb54cb3ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateChange</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_NULL_TO_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a31e86d35e03a1967255186d943a3206d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_READY_TO_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a0464c49fe679add6d141af63fd3dae0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PAUSED_TO_PLAYING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a4273f4164280454e48f9691b31c099af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PLAYING_TO_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5ab2899c4d88e7370ee6e098aeeaebb3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_PAUSED_TO_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5a64f04accf66057a5294c9d35e3a3d2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_READY_TO_NULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga430f25337ed3cd75da2a088ce56bb3d5aa57215c5872c6bd68426b6815363c70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateChangeReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_FAILURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a993fcd0f933a3becee44c78b36fd2b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_SUCCESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025aeeee00a453937b848aac52c8a58e3281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_ASYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a77e50c46cf3919c152686b71cd419c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CHANGE_NO_PREROLL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gacaa5e30b631a84cf95a0f8918e96f025a954686a18685dd44685a2ddd5e66f15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_VOID_PENDING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa55663ff9e6a1f1ce63972e1031804151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_NULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa07cf1506b030700024ecf1654c3796c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_READY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fae477937b92150d7f989ca9d1fa3a0da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa702f01b465f78938c8d8467a6c6892d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_PLAYING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb043e1d41659fd842f10949f91e7a7fa396ac09161e15f45f8dc574a91bfef2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a46547663056cd676f4d77a4fc6cbabf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_FLUSH_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a0f8222c36d9314e5890c40ff03cf5161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_FLUSH_STOP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a6a94e208f960d7f0e98ef976712475fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_STREAM_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a071fc9072ff223411203f8d79494b3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a0d7f43c4165ac8602a2e99a370eadd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14af58df593352c6bdf57166c3fbdb4f2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14ac13e07e0b2b693f918d9d90dfa0a41bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_BUFFERSIZE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14afa310ae71afeede667fa49ba75bc921e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SINK_MESSAGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14ac030aa1c392a2be9b21279de469b42a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a51c619cf16fcc47144100d365e3cab84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TOC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a8f37f45421be5a33c5191ec315e85cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_PROTECTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a4c867b90e9b95a7da1483b3bd060cf6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEGMENT_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a07a1ef734323123345c047fca1864b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_GAP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a04eaa73055e590be53400dc90b755509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_QOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a5318cd7c4517fa1e29a52d285e0f910a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEEK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a95ce98f76f4c406ede32943eb785cc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_NAVIGATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14af91067406adc6ca7e2e3394ad022a8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a162fe0454f193ecf6197c21f5a850ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_STEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14afb3dd54a3b499b39c8eb120631585dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_RECONFIGURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a8a5b417e4d76ed1b1e43375f271eb8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TOC_SELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a50104a15fa02d66e4b42454c1e580b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a2b3d761479d0f9f2589d0c194dd2110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a169ed59d6433ec19f38ccc5a1c906b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM_OOB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a1176ef0fcd2b29115bad31ac214cb1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_DOWNSTREAM_STICKY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a2f57755c69556db515e9d6fd8ff58e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a58ccd17956882c4dbab66c3aa4dff7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_CUSTOM_BOTH_OOB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5773acc367d849c3ab5baa65e156ab14a3c28173e49d776b5a93ac20acfbb8f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventTypeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca61126bbded9591f9333e7535c1adf085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca178a5213fb72e0c656180f5793c1179c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_SERIALIZED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150cafce6378f9dd8024f35a6c0e3a934510c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_STICKY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150cae174ab3b288df78892e2e9c01e693115</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TYPE_STICKY_MULTI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gabb72226af2c4466ac046c5aa0528150ca353ddcbc4517fb5fd85fd71df5456d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QOSType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_OVERFLOW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fadf2734556dc5049c25ff96aa43c54d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_UNDERFLOW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fa44928c34290bcd30ddc1a89d475eb980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QOS_TYPE_THROTTLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5b341ba0915502eeb96052307ef0780fa115a81728f245a3888afe6273d97f3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12ad3b5abbb5cfbab819a3c5ed401ace251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_SPARSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12a2b0706799bbdd6d0bf9dc209eb7e9173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_SELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12ac008001b0757fb08a83f3110f7c66d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_FLAG_UNSELECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf45282ec5583a696a5d24066e2937e12a0ac138adb2ce12138316a98a3b550b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Format</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa2f2ade3e8bff135d6c47d1f2257179ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_DEFAULT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa5ad92a0589b9e47cc4d6fd382c6c17cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_BYTES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa13eac90c59a4f1ff5d0a9271b449c43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_TIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa3ce5ad3e79ef738bd4e7a6308db1c70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_BUFFERS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa69087ca29e66534752be632cccd59047</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FORMAT_PERCENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aeb4c7c49680888ff819ac95fb13cffa3e64e41c14d550a8354497e1846e3431</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IteratorItem</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_SKIP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94facaae3ccfa0b16452f0ec55e5e579674e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94faca897f3ad50a6883f444fd7f021e503672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ITEM_END</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8057df859e41482b1a74ab33f5b94faca57bc319e0a7c227b773b23e61e2a873f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IteratorResult</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a1b2093f5fa38e5740fe882a52e1d9fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158ac7d459a1cb58a79d4363e23acf3fab70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_RESYNC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a9c8d056bc0e1eca076edf6272a540034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ITERATOR_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae04c173b1b86a4c2491b9852f68d6158a8d7a200c2dcb809c8b3997841c59b8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MapFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_READ</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa7012749f9e4b10c5ad412fd2227b5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_WRITE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa0ec99dffa85f25b74a182c93e16f8dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaee5716e12b88f74c183e50de377d624aa48e93b076a914d8330a9c62215dbe30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a49e662ad9f9eb7210dce74a3ce17be5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86abeac2aa69521997263a705f48468cc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a758493cee50de74b68fa2fe29ba4bad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_WARNING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a10897339e9a539206a3063366a001fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_INFO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a966198aa626095b0a0237e8e726be298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_TAG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a0f756424693345c9eb20a4c70a8aedef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_BUFFERING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a6eebed6cbd74cd0b34911f9bbf0f9385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STATE_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a5e5e2670b33ceaf72a35dadbdb72bfe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STATE_DIRTY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aa13f5031476623d6b5d72bbcf3d77b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STEP_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86afa4c9c504baef3437b9b508f646971ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_CLOCK_PROVIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a317d67386935097938815b1f9f51b83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_CLOCK_LOST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aee517638d625bb8ec642be6d032e7c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_NEW_CLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a58d74d9a5e6b915b5722e7d1ac24c48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STRUCTURE_CHANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a6a97087c4cb4eb8403b57011926e2f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STREAM_STATUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1ef177be0bff08e3c451193a144b4f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_APPLICATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a795070715154105b427b4bef01e4a6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ELEMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1446541b67def22116801ffd77ec3f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_SEGMENT_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a99fb61ffd5e40264e1ac9b57f551e825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_SEGMENT_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a5f2365c735efcb8835db4b98424d7fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_DURATION_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a8aecba7508f55e7d8cc7182582dc6ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a8997449a838b8429de6e97512b3b1d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ASYNC_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86ac028f67c605d391d047d7dbbf598e386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ASYNC_DONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a724a5ea02125c3c562688fea62c565f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_REQUEST_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a3f2154a8bbce17495da4f4ebf54d52e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STEP_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a9f74843b644509b8d64ee42646959b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_QOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a2a1551f51418c028a523ce196ee04a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_PROGRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a09358af92a622e235330aec4f0473f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_TOC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86ac288dd42976b77bcdbf2d101c4063220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_RESET_TIME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a457013c7dba239c9f1a1c024a3fd65ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_STREAM_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aede44ceb021c4e6345af7a11553ec7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_NEED_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a1c12abecd74731502865ececde721b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_HAVE_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86a47b1bd5d5e1021dab773d5a87897847c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_EXTENDED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga704e8de3c3f9698d3c3ca15d61190a86aeeca3ac88409cb2face93c025dd046bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProgressType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a411c7e7bc9319585c82e6423a46b9255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_CONTINUE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a15ae04b7df9d4b8af1f1abeb9511c212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_COMPLETE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7abc0045fd03eaf793274d6e071c54b6e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_CANCELED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7a18c6bc9ff9362a74ab1d0a93a95ff2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROGRESS_TYPE_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae394349977efddd1380c875b00d6a2e7ac27b39e41019c9e6c4e8bd864c11d78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StructureChangeType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_CHANGE_TYPE_PAD_LINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19a9781464e09c5e1df316a9b97fd71d1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_CHANGE_TYPE_PAD_UNLINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga45bf4b0ca80f47d6d01674a8a3d8dc19af09dd32098ad1d1a28ae217cdb00fa5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamStatusType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_CREATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa3d2092d2d508df35997173fc698fc1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_ENTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aae208380d207577a60a9c1d03ec8d05c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_LEAVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa70caa0594a140c9cf2614e4a603c591a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_DESTROY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa02598ab9a72a48fa7429d651168afbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_START</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa74da15e2572fa4fea0d291e6e6005cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_PAUSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aa47a55729ac5e1b0d29ea44dbd8f1b668</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_STATUS_TYPE_STOP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad70f2cc8c3a75bebcc6ffecf7032766aafe003ab87833103c499aa196e5ce343f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MemoryFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_READONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aaa5acd6e9250f06e82e193b6a73f4809</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_NO_SHARE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0ae4f0b0eb7b156e4e91a0351e5865886f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_ZERO_PREFIXED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aa442b5ce6a238e43901ddab8a368d5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_ZERO_PADDED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a21000df16b8097f2ee0e6e2a0f1743ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_PHYSICALLY_CONTIGUOUS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a8694026c2eb36a6536b520e22a031fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_NOT_MAPPABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0a4bbbc10e8ff5d7fbb3dceb90e485c311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEMORY_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga379501aad01c0bafe371d9a3bb5eeac0aac15449a378b24ea4b0b35d4c433666d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MiniObjectFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LOCKABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6ca18f7d2bbccfa8667e2a91c56dc3e7bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LOCK_READONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6cadf92500aa649bc0753b4447a598f05ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINI_OBJECT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2dc8ffda7b55433f1eee71564c2bbb6cae3630fcc787e07d3f2d7f701b31d4914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_READ</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a77ea46e3696058096739556f223cd33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_WRITE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861aa300c7c07e0d82075295f3174e8210d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_EXCLUSIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a1a51be6ab32bcd0f3ea6177a564077ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2b9102a456ce11974b6b9f8547a38861a3d73378c37cb6c28e69371a977938937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationCommand</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a8c665e69a7f8ec3f9e4193f6ae7fe255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a62e6c771ee3a0b51cbf27b1127594644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ab3635357f3ca5aca33a3413014177d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU3</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ac5340ee312ad36d2608d7c3212329f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU4</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a1cbde243107ab15ff8a1bf0e49a28830</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU5</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a2bc5b77f336b2946ec0dce807217ab5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU6</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a0ed655165757d3037b5d159f04a1e77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_MENU7</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ac2e13dc545ea2483d856c89fba6026ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a832dd44e387824cb384f326f54ef54a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a59e32fe3cf01bd85cf7115029a05379e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_UP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a5ebfe718fceb842b67eb69a2ff77d69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_DOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5af59ce8286409ceabc82ccb52c86316c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_ACTIVATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5a97f7a745a75917fc637f00f030d5d405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_PREV_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5abd0c1676c0b404120f20ab316d39fa51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_COMMAND_NEXT_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga413477e37a69fc3af5f1261c842bd0a5ab2e8fd30001923fdafa7fc12c1327c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationEventType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acaf2d6a444eab57998173007fe23e536cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_KEY_PRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acab8b27c694bebb791ff0984408a92a558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_KEY_RELEASE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca9bad8637dbf1be21d1bea6fb675a7f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_BUTTON_PRESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca53cda3175c03e24e9513c9e01890b717</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_BUTTON_RELEASE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca881286a640b97fa2e1d52a15a42decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_MOUSE_MOVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646aca1d1d24d83ef05b9a8b8e87240fcfc8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_EVENT_COMMAND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf82f91f97fb5b3b9d2589c4cadf646acaf387bca6c7e7055fc752077e45ca7a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationMessageType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7aac228135767464550dda48418acc3a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_MOUSE_OVER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a78ff4aef5cf753672f8604d23344c8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_COMMANDS_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a61b33c66b124e2fed2320612ae6d4b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_ANGLES_CHANGED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a150bde436725fefb6fbb588ff00ac857</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_MESSAGE_EVENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae815a33669a13ef70e3850ef16b791e7a7ad2eaa484efd730b14b1b4b50233abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NavigationQueryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa23341c21b68d8c1c05f6015e4900ba41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_COMMANDS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa84a66fd880b459a59b2dfd5099dc9c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAVIGATION_QUERY_ANGLES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga36a1a6e991ee5d40e7aeb7890dcf814fa3f2eb1c9c04dd3f4f67144c80e3e154a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ObjectFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad1fb5de93e9d4addc02e0a30fa64928d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad1fb5de93e9d4addc02e0a30fa64928dac7e7b83d02d9233eee2a248e24585a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8a00470cea280c130dc70f54edba9cf351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_PUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8ab21082b648a7662c4c6119c65648d2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_MODE_PULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab4a5b1ab716a618ee04aa02eabb89ef8aacd5a526acb5f0e627f86c64d011287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FlowReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS_2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cac895be4797e5fdf93edec87ea937929c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS_1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca1a755b296460bd3216e04294354065a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_SUCCESS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cab6e263d9325f771625d450599577c982</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca3bb3697196e724ddb5fcc0937d38363c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_LINKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca09e39061cd2801dee3017ff8b6102035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca9ff5b39d4498225090a807f542a34e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cabd11645ed685dfef5c59dedca1888e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_NEGOTIATED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caa606288f801d9c842be65fb6f1558366</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3cafbbb41dd25af7f9ecf4f27eb333fce95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_NOT_SUPPORTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caeeabc41db0c9d008ad3bfca78facd979</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca7c2ec016ee03f1baa66414186e0fbcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR_1</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3ca548983adc59be55ba07ee4c3ea0fa21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW_CUSTOM_ERROR_2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga58bea5c93704596e6ef9e576fcccab3caffcf1aa2b708e1a49e19ce1a6c1d995a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadDirection</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a91ff4e123153e501d5e5d90bd5ca4af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a68c5b437c5b7e60c085642d19dd9a65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga06f428adf8058c0d1c01984a1ce191e2a8aa71a095eab38017baf32b1e391a7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_BLOCKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca82919946efa8b3bade4916d6341225a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_FLUSHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caabf77fd2db2d699f409ee533043faf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_EOS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca67698e61400d5a213a4eba8ad421d96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_BLOCKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca9d661d5f317d41f0db554f5d71726863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_NEED_PARENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9cad4093aef3a3e8f871a06fb782b546826</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_NEED_RECONFIGURE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caf7366e1a9061163002dfbb53450ba24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PENDING_EVENTS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca246cf1832bfb15fd8407ca36ea7aea61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_FIXED_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caac1bff8b18346870dedb2d1ee836a2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca0768b8744e574399e0e758a6e5f7aa3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_ALLOCATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca0f07aa42eb670a801546307ab804dbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_PROXY_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9ca22ddcb8c273deac3c8bd0a28b754f0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_ACCEPT_INTERSECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9cad4e615ec8e7a98ed8395158fbc60217e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_ACCEPT_TEMPLATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caafec2022e2014d2d2be131c7db681c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab3cb4ad333babf137a17e8cb0f88db9caa1114d926b274385a8c12213f3dc356a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadLinkReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a892e0cc3606cad7972322a896b093f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WRONG_HIERARCHY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ab0b72d34ea5f601ed824ca92f6ae607b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WAS_LINKED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ac556f42c8a1061d5655ef743948c59fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_WRONG_DIRECTION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a35921a1b219e86fdb17b3e1824f858e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_NOFORMAT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05acad39036e44b2966494ef42128068605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_NOSCHED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05ab79d1524af340a0263262aa975c63b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_REFUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gadcf0c9fa45112e2b7b6c549de4b28b05a3c55a510c48760d700add0b7b839d14f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadLinkCheck</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_NOTHING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa6284d9940a6b3970be40feb717a6ad3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_HIERARCHY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa1ede858a4d5c8ec059d58b49bce835d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_TEMPLATE_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fadeeb8b61656eea8141dc45a117d9c952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa1970d01f927c4733ccd8772578c61871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_LINK_CHECK_DEFAULT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga75cf82fd50d8978c04ce1a111ca9015fa6df00fb6181238c2cecac3000a1489b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadProbeType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaa05020bd3e232bfd9f557b91c02d99ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_IDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deae3a8b2fd54e8d1bfbb646d0918014bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deae28673c5974abcb9f8e9f1803717a585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BUFFER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab439c90e020ef20098471c422f1af707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BUFFER_LIST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deabb8d58bc0c90a19412d6a8757318c47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaed81d66108029eb9e0e61bcf7eaf0d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea985f8396757e1cd9bbd71350086a755a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea1cd08890c27b5fdd6d2794df040c2c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea42bf5c4e3fbd9daa299e82790a5ee794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea14dc3ba589c386ba7b880a9f2b91f55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_PUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea0ab73293c74d16dc3ea68576c75d0224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_PULL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea44b5ed1d0f9d15bf98e6fc05e07b388f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea7be2437f081fda47648261c115e6f611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea8efc23221b417a43d1e7298d316eebe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea34b57b1794288b23e9244104e05fc7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_DATA_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea8f1e24b7f938ed38bd6f83b547da02b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab27b0eed6aeeee972df2517284dd9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_BLOCK_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea5fec9594a0218cd4219b465394989175</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_EVENT_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deab52f2ccd28e4eaf1178c783587b75ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_QUERY_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea72d92300813f64f0b3a35efcb11665b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_ALL_BOTH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06dea121389e10f0670088102d1ca01d66fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_TYPE_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga264d17e444805a09d4c17d61686d06deaea34e33ec5c026f90fdba96c72a80d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadProbeReturn</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_DROP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730ad0bcf49fdcfbb252e5528dc9e8025dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_OK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a46a2764cb4bef1b4e555fa456faf8f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_REMOVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a4181c9c53af99a682771f599cc55b37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_PASS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a990b4ba8ed77d8f47fa697efc4ace200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_PROBE_HANDLED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga2bcea68d658bf31e063baa5a3989b730a867805faac52476f410497a11904ecd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadTemplateFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga83bf97a1d27dc040da32dbf3ab9838a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_TEMPLATE_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga83bf97a1d27dc040da32dbf3ab9838a8a4a9b5f090b880e477c11aa9722e57de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PadPresence</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_ALWAYS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0ac926a8f67c32380d27c1a7c64a89229d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_SOMETIMES</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0afbf82c110b0d2387bfdc3fb0fe8ca70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_REQUEST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab7edc44a9e16b5225d727442846bca0a34e254590ef2d5120cb1a3c4f82d9581</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Rank</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a33b8af70160a3db783a81de148f1115f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_MARGINAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95af8560f1a1a351109395902e39fa8cfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_SECONDARY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a0ce75666eb30f756d59043b95cf84cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANK_PRIMARY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf75e7dc2cfeb47b94f218c7a032c5a95a3e97c553312904df2f3d6c80309e42b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PluginDependencyFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501eae30df566b407eee76bb49aea06de54f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_RECURSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea77252793ef841f1b4a1b04e0538f3600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea05ba270d0d0ff501dc91a7a6e3812f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea99e2bec53e9b36f594a1efec042947ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_PREFIX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gac32b6837eced2dadffcafb0e6629501ea575afa48f646254903ec127077c652aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PluginFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_FLAG_CACHED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248a9a8a2c7d02ae3e997ab3718ee019c702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUGIN_FLAG_BLACKLISTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaf0a39ab63d1dd476a2a0989cadc4c248a1c7a24e47ec585ca9acb368e0f4e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BufferingMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_STREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a3b14fb1bd4278f3d3de9b24d549dd4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_DOWNLOAD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1aa60fe1246bd666499c66c3fa8277063b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_TIMESHIFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a0de624bfe743b1c25beb2f0f423ce6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFERING_LIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0990a7304a086492e56ef88b7b0b6eb1a91ab944d0f96c4080783063e16d04b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QueryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a8b5c7bfd462a65613c1053095fd46706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_POSITION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7acf2ea99b4a5637c0b1654bc32582e288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_DURATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a8e5851a9ed9e8894008958c7bbabe842</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_LATENCY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a79d1519134a0faafa8433fd862bb85fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_JITTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a02b6b18cf35e3135172b388f865a806c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_RATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a144fbd3309141c8e9493b57111bb0d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SEEKING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a2642ee3d50d45a1044e9b2cef5d8c7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a9eb6463c6e409afc131ebbaa29e0314a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CONVERT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a49781ff2d90ce4419dc39776dfe4761a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_FORMATS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a107116d956186e3f6daec7ae15ed6bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_BUFFERING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ac535678cba50ef01a4d8e247dd825228</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CUSTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a3d71d2cc1eed2cdb30f16847773cebc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a51cbc0491beb0bc379f0aefc7c4d8066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_ALLOCATION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ade7a31b58d73194168b575b079e3225e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_SCHEDULING</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a53fb225ba3d8715f981e0af14d5ab478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_ACCEPT_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7ac0ba7dafde92d9720ee2ae28687608b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CAPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a4f54cd1921d4a3afbf8774bbe51dce40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_DRAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7afb57ab02766c1b2291bede48708b599a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_CONTEXT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga4f1a3aebb6bc7d8271761147c11542d7a53e9d2bb6290d374846a085b5bc8e151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QueryTypeFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_UPSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540baaf4cff92f865640c6aed02111039d870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_DOWNSTREAM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540ba0314ac62776a0a3eb3391494185b050f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUERY_TYPE_SERIALIZED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga96ad42cb36552d5a786c81cdde13540baef1b8831f19b44f378abb937c7be11e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchedulingFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_SEEKABLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa8533ec001fcb3137c06777725ceb94d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_SEQUENTIAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa258a89085c3ffa7b0436cf6fd67deccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCHEDULING_FLAG_BANDWIDTH_LIMITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga0e1de4b65ea093c1a4b0dfe06339ee8aa9a579c8d7ebf38263fb1184a47553297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDP_OK</name>
      <anchorfile>namespaceGst_1_1SDP.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665ac1b523129890430f35e07f3969ce4cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SDP_EINVAL</name>
      <anchorfile>namespaceGst_1_1SDP.html</anchorfile>
      <anchor>ga2bb38c62ae5f0e058e56cd2aad541665afeec8c2161446726aaf1c8c2d1f5f1f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8a9f32d3f9eede49765cb9a0880b9d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_FLUSH</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ad8ea6fec4daeb781ada4329abe99e358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_ACCURATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a1d141e81e4d342f4a4267b0cdae29caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_KEY_UNIT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a63fee1fe94b66b4ba6b2162871672589</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SEGMENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8f27853c24b9f9ae90c34f7d5663de2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a7ced07f049db45d400cdffd63d5a17d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SKIP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ac60ee6ba7d78a4486e70ef5bf04b7529</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_BEFORE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3af18666d9dc5d5fed48efef3538fda551</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_AFTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a3f751fd7d461e87a5b01bda9917a71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_SNAP_NEAREST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a0ba88130234862f1b45a4e55abee8c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE_KEY_UNITS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3a8f62c9cf1733409f9767a2323b65e1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_FLAG_TRICKMODE_NO_AUDIO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga511d96d2c1136202d0d4b90de2485cf3ac8d8f0a7fc742cd9bdb98ec721d77a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a34ccaeda5d3ef34e2aff08357fb98a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_SET</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a6ddd18bcc6661427916f0133c54ea297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEEK_TYPE_END</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaa7c6407bbc8040f51718d1be753422c0a78bdd672702cf123e206f0406841e29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StreamVolumeFormat</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_LINEAR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca2838425c085cf1d795d8d1f93841c685</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_CUBIC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca4d6f4fe1835ba1ce2a27ef3062077fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STREAM_VOLUME_FORMAT_DB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga3444181c44333404940ae8b26553d9bca7595a2e02ad22e7802001cc73fa73c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TagMergeMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001addda7a49d8965b1198e2462fa397cd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_REPLACE_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001accab35cf03dbf0e289444cd927178e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_REPLACE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a5944d5d4a6210d9f9c1c187af937adde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_APPEND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a59d2fcc65521f783dcf326f363d5c2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_PREPEND</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a7cc8273fd962393adfb7236421e514cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_KEEP</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a92596de8125610a8759a6149acc79b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_KEEP_ALL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001ab54eaa3a250057d0d9055dd8949a21db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MERGE_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga9aa93bd2355fe92fea7746d1cb00d001a51aeaceb444c9a27588c37ed715db2d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TagFlag</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_UNDEFINED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4aa85f3a6deadffba942483657e663e454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_META</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4a4938a5e78f114f3c9a514b149953fc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_ENCODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4abfe6dac1b6ffc56e4bfc2b562e380784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_DECODED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4ae0aa624b7b3fd86a622fb6505794e37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAG_COUNT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaab46184600274518499a854d3e0916c4af31aa40c69cb74f4db1efdba4424e703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TaskState</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_STARTED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1a2c089ddf4e3e7371f8db4e1fbadbb08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_STOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1a7faf1e3289973931745c739bdbbf0375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TASK_PAUSED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad7d70307615b8be6f759c34cbf019ea1af6e46e256a2f36a484cb5c3ce4c65e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocScope</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_SCOPE_GLOBAL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26a5accc5b94e19c48ceed8a7841150853f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_SCOPE_CURRENT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga68fab8593dbeccefaad0ace598fe8c26a3462da49e237d56fdffa1545387a3a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocEntryType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_ANGLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1a28a2b687731544c6edc250c1b99fb87c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_VERSION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1acabab63f396b620f4abd0ed8a2d2401e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_EDITION</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1aabe79baa7a0b290bba90f8e36ca10c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_INVALID</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1ab284421740a22edb5d3e7727d9a6612b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_TITLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1aa6bdd2e74f2dd22d1f712f8e62c4bcbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_TRACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1ad174e5375fcb7bfb2c82b7018f260378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_ENTRY_TYPE_CHAPTER</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga6e0e978f94c7406f1c37c87a13d5f6d1abe4dc3b7b2fc2b0eb98112700803bebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TocLoopType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea799fe1fe0a6d7a26847931041cc29431</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_FORWARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea4347c3302fe56ea18d5e383a5ca2ab19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_REVERSE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ea21104d2c912922938393a20ef4d58e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOC_LOOP_PING_PONG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7349ee2f58f2dca0194521b82806571ead17e1e5f50021d0d9f35c167be053a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TypeFindProbability</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a4105584746b5c3f85f7a723fc0e51494</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_MINIMUM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87acc63423eff1a91c7028e50555886cf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_POSSIBLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a937a358b6bcdae3c1dded7d9a43e64c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_LIKELY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a2f8012638009795fee0a929936121351</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_NEARLY_CERTAIN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87ad5b7639c47a71effe3005e2cd5017579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_FIND_MAXIMUM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gafc973586a77aae5b805a0166f4b83f87a026b6ed2e5afe42ec75c0366dc6373ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>URIType</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2ba1949bf6a3ca27bf112f14c4bf88e7c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_SINK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2ba9914ddcba7a40353391a7edaee628afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_SRC</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga50f007fe40e3fb7497cc8d65e6619c2bacaa09218de316669a4ed61b965c6f7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>URIError</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_UNSUPPORTED_PROTOCOL</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a94de4c1f8f74c59d1fed765f4a45e2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_URI</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441ad2cda236854a60bb8e17b3f0e43fb609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_STATE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a8b5c4162df0821e4d5f7e9d46d550e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>URI_ERROR_BAD_REFERENCE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga7cae4f17ed906c93a038251fbce33441a2c1dc63d52244a51f9f4407be726b319</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaSite</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_UNKNOWN</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ae46967562aca0067c8b1db49b954d372</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ac5db01304cf99773aa3017895341c28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_H_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a7a1fe12d26a5f78c75e5ab26a77a76bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_V_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a9bbe9e2110c4da500edb242ada5166ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_ALT_LINE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a352f1a03d3af994af03d18fd5647a6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_COSITED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ac983d875c8ab294e4c51c6bbab61742f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_JPEG</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100a7997dcdf6ed5814dcc250324f2c4216b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_MPEG2</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100ae1ddea0685b6d8638fdf243ede257aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_SITE_DV</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga8c6022cea71743e443dbfe855581a100aa2a7e04bbed2fb7dbf229b8adebdb0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaMethod</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_METHOD_NEAREST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753ae9db12a7229f8191c5a94a1874535cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_METHOD_LINEAR</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga66af7f4c94b2fbf44355d2be2fc94753a4c3b4bdc730deefb0407ef967cb201d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoChromaFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7a46666d8f8ae4e7d6259e4b2123d9b4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_CHROMA_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga31a484d9ac9dacb64507985e321947e7ae556af70e3f42108802bc969d96f0cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFormatFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_YUV</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54aec4cd27e0d02f08f126ec314f7513815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_RGB</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a9f247d5ddd669df39487696f9760a4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_GRAY</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a25edf8e0e9acdbe9531f36b2a92c019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_ALPHA</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54acb99cbe5370868ba529273eb361be618</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_LE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a612f5b6efaee77fe9841fc9c06cfe45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_PALETTE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a7796ba8bb2b1f7f3aab143062979ebad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_COMPLEX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54ab30ad1858cff94530f48ae30b42192e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_UNPACK</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54a82a749d2b3c3aecf684f42c4e5645347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FORMAT_FLAG_TILED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae49ff9d68a43c05b129be635e1d1cb54ade7bdaff07b68ff247fe175ec6de655e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoPackFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4ae969ee12be92fcee96c3234cc133270f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_TRUNCATE_RANGE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4ab376205715241fd297e1ee776b503364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_PACK_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga18bcec60c7c29a535b2ef917fe4a53d4a025a95864d6b1af2fa8c2d7e278ac334</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFrameFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69aecb63a95a6b80d206617601aa84659de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a7503c1f812745f4e95c9202380ec6dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_TFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69ae04440313d9eb1eff7a5c778a6eb3baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_RFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a7d463e723ecdd3e883b91cfd710124c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_ONEFIELD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69abb2e3804e254918adaf3d661d895832d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_MULTIPLE_VIEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69afe6ea66a61a5f19570b96bed320bbaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_FLAG_FIRST_IN_BUNDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga5aa12f05da8c93d064ed5a0a2661ca69a12c663b18dd76c4b20ea7eeb59fb5553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoBufferFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_INTERLACED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a4a864cfab3cb9dc122d8e5bfcbaf3df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_TFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a47b534519f2914532ef1af6964d5dccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_RFF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30aac5b5851d4ccad320134c569527f8acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_ONEFIELD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a20881482561a0ce29534eafc227dd895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_MULTIPLE_VIEW</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a7e3ab04a83a77064ce69af8e5c185c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_FIRST_IN_BUNDLE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30ae9aaf3b198673a57cad01217cba64871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_BUFFER_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga04fcd40ac54d3d33b6a3c99f90610c30a7bea23e92ee7781aae5453518c07af8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFrameMapFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_MAP_FLAG_NO_REF</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5ab06fd278bf2ca47ace0d66ad62596368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FRAME_MAP_FLAG_LAST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gaeab1529c68a989aca12032b3c6f055d5ae0b57f7c553850db11a2e835e10ca04c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoInterlaceMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_PROGRESSIVE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a4b479900790553b5ba63740617fd808f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a6659b1afe1d6c5c8cad3c4c9910e817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_MIXED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a03e7b23e88ddb8ab2294a412490a7792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_INTERLACE_MODE_FIELDS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga967fad3dbadc173f9a255daa44ee9562a483d28d358078d7d3b1981658d6747de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewMode</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a76c06ba19b29d37fa33679983e422643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980adf040c71d706a916a4169c42acfd639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a6cb47aa910d1a57374cb61e22072f7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a16e1a73ee08f89dfa4ea6f73b21845f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980aa705c6c026c939eee34eb0844ec2d610</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE_QUINCUNX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a5f9414629173773405734051d9acd6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_COLUMN_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a30f4a2cb696d3b61b1a9cce73cad912f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_ROW_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a45b977a07c3d5e8c28dde24175d3ba00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_TOP_BOTTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a6cc60c5744f1d1476b02ff1090cab3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_CHECKERBOARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a0c13706f489060093d6645e13585296e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_FRAME_BY_FRAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a27436db9c1c63eedd16145bb27ffd446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_MULTIVIEW_FRAME_BY_FRAME</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a45fd28b1521c71c38869210e9f67d517</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_MODE_SEPARATED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gad2491a6c67fe3156f17a912280671980a20acaf87b066b5379f4647e8bd52411a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewFramePacking</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba648cc4be91c52636946317d3110a3fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba8f6c877d2bb54a7e8e474483c9dfe3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_LEFT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba6aa7a9d6cc9a6b4651ec61a0efae7cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_RIGHT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740bac8c02ce95545be50f32577531dc17be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_SIDE_BY_SIDE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba9617cfa8dd862fc31afc02ab45f9d6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_SIDE_BY_SIDE_QUINCUNX</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba679ad34999fee2ba93bca38eee420054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_COLUMN_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740bac7b1a58084fdce71c5e774fd87657c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_ROW_INTERLEAVED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba85bdae40364e801c573d9729ef4a7bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_TOP_BOTTOM</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba5e5aa0ef0ab56d668dd00d832a747f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FRAME_PACKING_CHECKERBOARD</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>ga41c3dfce0fb2322404be54bf6069740ba821fd0de7bef79a8e9aa9466db325ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoMultiviewFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacafa4382ea82b3a48b9da389e6ec5992e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_VIEW_FIRST</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca19b1d30e7bab1a3e45207290c6168ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_LEFT_FLIPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca10945086bd690f9d273b5fb88533c6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_LEFT_FLOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca6310e48780af9db568ae6ec36a3f97dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_FLIPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacac91e8a62097ae6fa442e12d0543fc88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_RIGHT_FLOPPED</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacaa2debaf9de64d6105083d3a8f947b087</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_HALF_ASPECT</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043daca2d8129fa5f824ed58212f2e5c12ba11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_MULTIVIEW_FLAGS_MIXED_MONO</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gae8aabf9fb5024f405c061e1368043dacabfd6d4e3ca963f5e2d7eadef23bd5eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VideoFlags</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_NONE</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871a0d066002cce687ea336b880892be327f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_VARIABLE_FPS</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871adcc6aff29ea5696b19a615ca59eb2e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEO_FLAG_PREMULTIPLIED_ALPHA</name>
      <anchorfile>namespaceGst.html</anchorfile>
      <anchor>gab120120f9eeb5109173e36632262f871a1cae68d9d6cfa3e7251b6bfa71fb8d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad77c98abb91c8676e2263acfa3fc0a90</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ba3c3fab99993c4b2520299931ee245</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadd9b2c1cc7819b4c2d492eee3b64ab61</anchor>
      <arglist>(AudioFormatFlags lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac2745aaaa4c872293fa55b1379bd19f6</anchor>
      <arglist>(AudioFormatFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga509f7f014e55377a9bb9f822e2b436ed</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga61afb516fec76f0fa5341d62d213adaa</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFormatFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga150d36f12e74396254eac04c16d61666</anchor>
      <arglist>(AudioFormatFlags &amp;lhs, AudioFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa19c27dd394cc960223bef25c22bdcd7</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gadb6d9b084e615651b2fad0d4e36f5d71</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf58797309ab409d721ef0bd93f2db5ce</anchor>
      <arglist>(AudioPackFlags lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0236b8d65cd368eb3bdda3be972b1397</anchor>
      <arglist>(AudioPackFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga407d4d1be7e1db8b1811b5f300e077c3</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf95ae941e154cd1e4d8b937f853dbd26</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioPackFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga237ff672131d130343d62051effe4b8b</anchor>
      <arglist>(AudioPackFlags &amp;lhs, AudioPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga62d149a14bac3e996ac0e83e2df135bd</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d6c66bfa63a3fe67be1868f82b8f45f</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga129966105d3ce53046b01e9744896f2e</anchor>
      <arglist>(AudioFlags lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga37b4507d99fe6d25c04ac542c501d735</anchor>
      <arglist>(AudioFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga88806050cb46c5e0b30cabb11b6ec090</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44d57718cbb3aa94b46644de280b252b</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AudioFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc31b64fd4c74ac4690699d6d7f07cda</anchor>
      <arglist>(AudioFlags &amp;lhs, AudioFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5ed3c707857121da3787025b28876556</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga04a6f762ead3a2a106fd0be389c2f9db</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga990c1b633de2d3dbae10774ee51dd9ff</anchor>
      <arglist>(BaseSrcFlags lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabfcb2577a2ef3a89d64590449618d4c3</anchor>
      <arglist>(BaseSrcFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga270185d8c64048341aa7278e6dfd0623</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga676554e0704a81bf9069dbfc16d617b4</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BaseSrcFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa5812f3ab332f647e1517927e09bc38a</anchor>
      <arglist>(BaseSrcFlags &amp;lhs, BaseSrcFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga85d877dd216c939ecbe5a8003d63519a</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e8dd0c85c690cbf627aa42909188f39</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga61b3e5ed29efcac4915af0faaf17841d</anchor>
      <arglist>(BinFlags lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga25f723332c25105c2d96c22f85c72a04</anchor>
      <arglist>(BinFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga31b8c8178b9f1140e054c7ac78f7f5d0</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga524102404015621fdb967e79085fae55</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BinFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ddd33d33140ca8a2e93246dcae869cc</anchor>
      <arglist>(BinFlags &amp;lhs, BinFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa060d249ee8406a0214b87cfe7e5f541</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7a9500a4d4a7c99026e0739c93a94877</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga41ca56f730ba76bd5ac46e30950bf944</anchor>
      <arglist>(BufferFlags lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ca4ed9b330f75643c8c4c7380cec34a</anchor>
      <arglist>(BufferFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga80a5229ef26958adc5067f87f827a6c0</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga850ae42e96db02db8f5fb626527a65ce</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0c583867ee9d8b64d5c5b14c172a911f</anchor>
      <arglist>(BufferFlags &amp;lhs, BufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9842d19cba5c6e34bdf3780f95372ed</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2d856b6dd2a3a25cb5ae4f6a0f2445e</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad41ae3a0ccf84e91359a289875f9d027</anchor>
      <arglist>(BufferCopyFlags lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0a3c62698b7e6e2049fbfbb225b562da</anchor>
      <arglist>(BufferCopyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ad09d9f124e6136cd1a658b5a156d88</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad0dab5691f7c1dfa1d1e7109d4ce702f</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BufferCopyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaad685bf49cd727bb9dd3471303c1fce8</anchor>
      <arglist>(BufferCopyFlags &amp;lhs, BufferCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga22195dfcd596c76a07c08f43bb33833f</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1da485c4f03cce5ec0590cdd8500b061</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab31b05964faad7f4ac92bdf30fea1eb7</anchor>
      <arglist>(BusFlags lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9cdf096ce4048b5edba8e21fd246c38b</anchor>
      <arglist>(BusFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga58f9ee983318f56e6a3b5a1e0b420a52</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0d237ba31f4cc8feb7aea24a0e7161bc</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BusFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac3d4e819ebe4a5d2aa0783ff47af3b73</anchor>
      <arglist>(BusFlags &amp;lhs, BusFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab780e6d1798c0a7134b58bbc4a62cf4a</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab0c1961c86b68fae34df5d90504a883d</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaa680d7f2327a523bdc1cc07c48166db</anchor>
      <arglist>(CapsFlags lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga962d4deb7ecfc59fc037865ab3e8238d</anchor>
      <arglist>(CapsFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0696f0b2e3ffbf5cc528b5aa9a4f6f27</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5f3a169bcb7b28b6c6ccf0108962f86c</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CapsFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga21e4593bf85ce0f611387353b0585021</anchor>
      <arglist>(CapsFlags &amp;lhs, CapsFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga028c2e27ff3b6b11a57363dffd4fd5c4</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0fe327ec9b55c19d9ad4a72b90c7bb51</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac0324ed1d3d22baf6d10eccac8faf3e6</anchor>
      <arglist>(ClockFlags lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gace3a51d19df648737d001b1e5fdf29e1</anchor>
      <arglist>(ClockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacffa1261d29212ac83f136e81a2dc72f</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga411ebd674176d54d0d761058ef21673f</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ClockFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac2ce6eb95baeb97e4410b20e4865ea87</anchor>
      <arglist>(ClockFlags &amp;lhs, ClockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9185a3abcfdc7e7f4139e3aac0106e2e</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac81b17e94491b30708a29a5da1d31d12</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafc8becc52e6da2a792fbe9807f3720a5</anchor>
      <arglist>(DiscovererSerializeFlags lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0bfd435191506d9b6994939cc29714ed</anchor>
      <arglist>(DiscovererSerializeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6f3ff00352bba9cc2412e00fe6087c42</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaea5d925e7ab2c0bd1236784640c0c495</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DiscovererSerializeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7c11083d5d92e17dff862875bac8c33a</anchor>
      <arglist>(DiscovererSerializeFlags &amp;lhs, DiscovererSerializeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacc7950d3486ca61af60cc0711be2ff1a</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab632d18b0a1c11652d0984acf10cc3d7</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga87cdc7ad534344dec49bfa553d096e1e</anchor>
      <arglist>(ElementFlags lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa9bdcdda642017e9da4cb1f5e9049505</anchor>
      <arglist>(ElementFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacd42461c29d3a4ce16b1497d7434d8b2</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae05ecb845d1bfafe1c05cfaba0c2f6e9</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ElementFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae2ffb12092628a2634a198190eb966ce</anchor>
      <arglist>(ElementFlags &amp;lhs, ElementFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7e543690b2f23fb712a37fd65e93098e</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga11ad5034c8250c928c9aa02b17ba68d7</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab5365d754008ec00ec77f2a0b3e82394</anchor>
      <arglist>(StateChange lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gade03aee523a7989577997f0f2b0de958</anchor>
      <arglist>(StateChange flags)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac323780340f3d79f336e7f178aa0d574</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga68fdc7c9132033d7fb7a2dfe82c6d0b0</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateChange &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga112ad69c4332cc5be2db44e6bae7304e</anchor>
      <arglist>(StateChange &amp;lhs, StateChange rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa6cd0a010b1f54e9088f47bba71af44c</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5de54148912424addc71f07cf239eae3</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8109b1060d7808e07d68718b1815dc1a</anchor>
      <arglist>(PlayFlags lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac9467efd4bbc0b5f39d42496a628df91</anchor>
      <arglist>(PlayFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1d434e8ec6f9b290bbe87f74b5daf5bb</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab35e10585026c01b0cd5f226ce3f8e9c</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlayFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabcc90325e90bbc6d819c6d910a2a834d</anchor>
      <arglist>(PlayFlags &amp;lhs, PlayFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga32ebe48ccbc0b3299a4ff446b6f2ece7</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabc117dedc77055248064e2f17f3c805e</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad35a36e4fd0ef29b3e2651bcdd576935</anchor>
      <arglist>(EventType lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8d14f9ee8f4bb7472687b155c0885f72</anchor>
      <arglist>(EventType flags)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee1ba73b2aa7a702f23155904f708a3</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7b2562a9909816248afabccbdd62fee1</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaadcfc6abf37e71f9421e5f053a1336e9</anchor>
      <arglist>(EventType &amp;lhs, EventType rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga72049eab6a652385e53496eadc783021</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae4e62529846bf885cf93342b0e17a7b4</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6cb8668ef2383eaf8d9d43ea4d7f83ca</anchor>
      <arglist>(EventTypeFlags lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3335f396e7bc7412785749e72033c88</anchor>
      <arglist>(EventTypeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6fcb482fb471256245775d1fe4c414b1</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga97b6ef8ab2e5ea87c349f4b8b9eef432</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventTypeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf6a8dc4968ce0256409c88f3d810510a</anchor>
      <arglist>(EventTypeFlags &amp;lhs, EventTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae0849def4974e3bcea49a53b3d05021b</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5ee809eb3e6de484bd7f30dbac39ce3a</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga81925e5ec1acc785e4eab4e293a6ec9b</anchor>
      <arglist>(StreamFlags lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf4f6d58a4306f22711a75e70ab8e57dc</anchor>
      <arglist>(StreamFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga596dc48fce9a7998c5b43cc6252442e2</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaea47c95b536725f91817f7b0e9edf9f1</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StreamFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf15ddb539ba44557ec14216bab51c490</anchor>
      <arglist>(StreamFlags &amp;lhs, StreamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga057119e54ee22aae5dea83661e051aea</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9980eb45011c1bcc50122c71087d7f59</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gada9a67ee84cc12fb2e875c366bc97ae4</anchor>
      <arglist>(MapFlags lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac7d749f90d7f04044a06460c2f57a8e7</anchor>
      <arglist>(MapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaffac56d0d13bc01486a38f0ca590cdf</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafbb49587efd532aa2d9a02251d668f3b</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MapFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4e4fcf70dbc4e643cc225fa2cc723f76</anchor>
      <arglist>(MapFlags &amp;lhs, MapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0299ae7970ff8b4f010a970a36525a17</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga915a6286d265d5e1563175e49b6a2626</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2060dd64457929089c3e0eebabbf732</anchor>
      <arglist>(MessageType lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9bf750a9a085746ac8b7c5505370adce</anchor>
      <arglist>(MessageType flags)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac40853dd3ad5bd7b172fd7e5c1ac980d</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2805bb118d95d110750368980a7b16d2</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MessageType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ae7865214b8f3960c4061a615d9c2c2</anchor>
      <arglist>(MessageType &amp;lhs, MessageType rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga35b542f3606a5596df819eea17f7219f</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ccaede325ba3d7d34a5332d71f688f8</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab06de140b31b70d4e601fa8c176492b3</anchor>
      <arglist>(MemoryFlags lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae378293aaef002e3ae78c58d1ee1017b</anchor>
      <arglist>(MemoryFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga835b4f2837f776a269db8e550671fe07</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gada4463bfc140fddd699b5f5a0869105e</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MemoryFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ca259834f7ca38cf27d015110ca3532</anchor>
      <arglist>(MemoryFlags &amp;lhs, MemoryFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga006a71975f26a1fcd8222e4ab93d4430</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7c7f4a72ccd96dfed8d7f4e6674c9d52</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga72a412f01eb7f472a95aea296413a962</anchor>
      <arglist>(MiniObjectFlags lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga63501860e4162863ee8cf53a0236c594</anchor>
      <arglist>(MiniObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga26ae40a7762dd01c0cae9427c9da9f75</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga89731d16ba89bad09f4d9389bf8b6992</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MiniObjectFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaec7d79a048274fdf1a6f2f27ccdefa32</anchor>
      <arglist>(MiniObjectFlags &amp;lhs, MiniObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga54526cd74230318f684d79c7d9e88537</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga79a80218536d335aa8de1f7634d61436</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad58c1d0a698e8405ef7859e57d763904</anchor>
      <arglist>(LockFlags lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7bf3a9b28fb6b2b2d4e69c95cf5e2eda</anchor>
      <arglist>(LockFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4884bfa3bfbe426e9315ec959cc0e703</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9c4a656d3e54e49eaee3ba775d52260</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>LockFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga05b77e78dec1ec5f434fce2b379e8c51</anchor>
      <arglist>(LockFlags &amp;lhs, LockFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0a8398e057f2253ba276b22a3b07bd4a</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1434f7ea4bda9539c412c01629eb464b</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0e00c1e8f9495b8ece1cf3aee7e759f8</anchor>
      <arglist>(ObjectFlags lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa129ac478c4aa00c409ff0d6e48b1829</anchor>
      <arglist>(ObjectFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1d0b926f7f284c95dc342ee7b06e19be</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga79da700e48c2b6aa814325db4abd6f40</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ObjectFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4c58f3de6bbc8985184d6325d2d773f0</anchor>
      <arglist>(ObjectFlags &amp;lhs, ObjectFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2850c532e43c17b0619c194afbbe596</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8027553b41f1d6edc7e212e6b1a74859</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacefd8d325016e7ef882d03aa23f5a57e</anchor>
      <arglist>(PadFlags lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga98434cefc0d07c1fc4967a31c2485e66</anchor>
      <arglist>(PadFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga57edf98a6560f60b077f802b5e34cbf6</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac1703fc84a9500c1ec7cbffe0cff02e8</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7219a430c75a6c15f92bb62c9d3e982c</anchor>
      <arglist>(PadFlags &amp;lhs, PadFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5d494f6b24267553ff9589b2fb3f3f3e</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab78a65d0149907c92757448615cbee10</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gace0d5c35303fb366fc823f75cc8dca51</anchor>
      <arglist>(PadLinkCheck lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaf0d6fc7dd582ed8a95437dea8ad4f8a</anchor>
      <arglist>(PadLinkCheck flags)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6a7954e09f380ecb866cad1bdad60f14</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gade59999eb23dd89cfbab62440dda6395</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadLinkCheck &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7924ce34ec3ee88f53adcd2fb231e070</anchor>
      <arglist>(PadLinkCheck &amp;lhs, PadLinkCheck rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga844fa9494f829bc620cef94990c13de3</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1e6c5da2fe87304f3768a517b686e62e</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad4357b722f49d378789b15cb3471c98f</anchor>
      <arglist>(PadProbeType lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafda85329579fff8fd670ac6ca227ed6a</anchor>
      <arglist>(PadProbeType flags)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa4879a96cc8e02dfcb83716efa223af6</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf9843bbd8209fb70bfc8d0d90ea3ec66</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadProbeType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga32ce8e5ad6c8f9146d77c75064b7f706</anchor>
      <arglist>(PadProbeType &amp;lhs, PadProbeType rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga96758b37c015380404784817042fd496</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga06c85352524614956ab87d8a6371fc81</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3d2c67adced3128e54a4bfa27931905</anchor>
      <arglist>(PadTemplateFlags lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf3b138af75dd830551b7937469e3e950</anchor>
      <arglist>(PadTemplateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9b693b27b7d4f8632244bb4076bba63d</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0d694543acd08b8dc4db6d936bfe10ce</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PadTemplateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9aa71b6a5cd5fbf111946dd2fc86c64c</anchor>
      <arglist>(PadTemplateFlags &amp;lhs, PadTemplateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2d45b674e9bfd34cb0a84395b05b9f86</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6d6f850b5cafcf8769e1a3d82b758d83</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga29f0b3f7818601eb5a1b83dfbfff6d64</anchor>
      <arglist>(PluginDependencyFlags lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f631078cd65c28dd5fc921f19528a79</anchor>
      <arglist>(PluginDependencyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ce86d3355b5beb4132e2a38c8ee7039</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ffd3a7db2f961d842e88f62d4276068</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginDependencyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad1a088e736b81db92d330fe3d8894474</anchor>
      <arglist>(PluginDependencyFlags &amp;lhs, PluginDependencyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6bd0d38b90257f70595dbb1942edb30e</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga83365a08b07a6d783710d5eca0c2395f</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga27a636268771df7b3bf2f0ffd57db3ee</anchor>
      <arglist>(PluginFlags lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab75afc7b19015b11a5599dab6a5ea71c</anchor>
      <arglist>(PluginFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2a5815a76a35f7f577ed9a67a5e49422</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga44e9b6fb92539d2952ab50b1e83f4eca</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PluginFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac7e39b1c6b7be86ccbd51ffbb82e1744</anchor>
      <arglist>(PluginFlags &amp;lhs, PluginFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga035e2814dfb59fe568865c92ed4924af</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d9484516539eed92502920d7d4a432e</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf5224b493a0cacbd83398aa4e50b1de5</anchor>
      <arglist>(QueryType lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8967b408415294ca26f84e8d3e23ae9d</anchor>
      <arglist>(QueryType flags)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga98bf90010687689497f5fbb936723edb</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaab331e97293c8032911b5ef50d580ba3</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaaeb48cd82ed3734ad3eecf22e244b1cc</anchor>
      <arglist>(QueryType &amp;lhs, QueryType rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafbd87e3d1f371b9c4fe634440cefc21d</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga617f1c8a5ba893798ecff11c881bd55c</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa537708c4bbf7953a0121f0acf397269</anchor>
      <arglist>(QueryTypeFlags lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga43a0d4c786633b74e7397fd5393f4e8e</anchor>
      <arglist>(QueryTypeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad9349ec0c5863377132713181a0b720a</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga55b37b1befc90e8c6365b1833a5c5418</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>QueryTypeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga175210252f7a6f89c1e23c35b6fdfe14</anchor>
      <arglist>(QueryTypeFlags &amp;lhs, QueryTypeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga269c686276bdec2927dc540e2b17713b</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacdbe96ff738ca6243d66e7cfad340623</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad74f608b28b19e9434a59544ba07f79d</anchor>
      <arglist>(SchedulingFlags lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8c20ba3e5ad30eca05631af8e86ad914</anchor>
      <arglist>(SchedulingFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaedd325f089f3d372446aeb4d13f2e43b</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9f83fcb9a2495b385a3ea9153884aa4e</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SchedulingFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga62479854fdb5238659c2149268c57cc1</anchor>
      <arglist>(SchedulingFlags &amp;lhs, SchedulingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2e4e7b921d60a98b42f2c3f3cd263ea7</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee0e505a42a8f6ba5dac3e22cdb0a08</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f596e584b34eeae4f63fb4dd1e29a91</anchor>
      <arglist>(SeekFlags lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga165cbd427910aac8cf3a205588fa7c7c</anchor>
      <arglist>(SeekFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaae46a2ff6263eb4b545417d478af74e4</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabaab6ebd815cff521bac3152cc843d2b</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeekFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8f8429dff34f06c45a15fa0dded11083</anchor>
      <arglist>(SeekFlags &amp;lhs, SeekFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2a0bf492c36256b11c36e4dea5b678a0</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaabc48342e3966b22b9bfc5b1bddfcd88</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8917c0d503c71fa99f2fe710504759e7</anchor>
      <arglist>(VideoChromaSite lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga30f0e227659e01ccb8eee154257259e9</anchor>
      <arglist>(VideoChromaSite flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga446da2073482a3608d50d31530b7f90e</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab2ed0c3bba89832d792dde0d6f20c41b</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaSite &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga672c4ac319bf175fc6e8429059a08aed</anchor>
      <arglist>(VideoChromaSite &amp;lhs, VideoChromaSite rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga17ae246814f0bb88b693f5821c52f2b5</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga945ab38ad06e8997264ef7f26187dbf8</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga86294c30ee3092341f4970d97de2caf3</anchor>
      <arglist>(VideoChromaFlags lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7f9020a447ab36c4ab5647dd131dccaf</anchor>
      <arglist>(VideoChromaFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gac374124fb10dab3a4fc60cfccd859abb</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga3ee9b460f33efe6c1d5266dc9059eb80</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoChromaFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9ebc7da908283bbcf7d60f28cdac0104</anchor>
      <arglist>(VideoChromaFlags &amp;lhs, VideoChromaFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga78604cc537b66c61b4e352aeedab2223</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1af22abdebfda4ce2a178e8ca89877dc</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8b5a7263f78170496bbaeca991309803</anchor>
      <arglist>(VideoFormatFlags lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7d03ea5f7db2714a3d4a481415c8924c</anchor>
      <arglist>(VideoFormatFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga082a47a9ed94b63e89ee677bdff454d5</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1c64e37be754ea3a4b9df97e8a9a984d</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFormatFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gacf9cd6bcea1224e2a5c8140334f7ae8d</anchor>
      <arglist>(VideoFormatFlags &amp;lhs, VideoFormatFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga15e19808a68a71705fda81830781051b</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaee89d3d6f2f60de30371b62eca474871</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gafae4f22c9b1f9a61fddbe0b87b9ba18f</anchor>
      <arglist>(VideoPackFlags lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa447c42b4a087a37deb762b7c083c55e</anchor>
      <arglist>(VideoPackFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga7a30ef2112ba4046a486cc60b346e988</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaabbafecebea3cc61d500a5444b649ba7</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoPackFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaf6adf5505d5b5c2e3c6717ecd1c899f2</anchor>
      <arglist>(VideoPackFlags &amp;lhs, VideoPackFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad8838f20725b6ae1e34ad404b3043358</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab1b96caf6deac4238ccd07f9fc9a6880</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2ac9c6217d85b9dc6449d2c19c0cdb8b</anchor>
      <arglist>(VideoFrameFlags lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab12e11beb408234fd472d42a1ed0893f</anchor>
      <arglist>(VideoFrameFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga091085c31d24ad2d1eb543bdfbab45a9</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4e847009e4d63a5c4f8df780b36d8b59</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabf20f763daa2d49b151e8b2f94b4fd1b</anchor>
      <arglist>(VideoFrameFlags &amp;lhs, VideoFrameFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gad2a8608632ccd92e7a9dd33e77f9a97f</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaef99dd116dd664a6db1a7e35b38d5d1d</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga4ff757abbda966f536ffe1cc15779f77</anchor>
      <arglist>(VideoBufferFlags lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga76b7350190de4dbdb6b9ad16d10f56bf</anchor>
      <arglist>(VideoBufferFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga396fc5bce3f2afbddbabcfa172bfc244</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga839fffe00db937aa9f4cc82c660a75e8</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoBufferFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga1c55fc337d3fe27b18e633b55b82baa0</anchor>
      <arglist>(VideoBufferFlags &amp;lhs, VideoBufferFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga300d07627830edc4d63b1bee34ab2a07</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga56ee1f93dcead716950736356dc08abd</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga30989b85e1703f81430722a07d8b0a43</anchor>
      <arglist>(VideoFrameMapFlags lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga597d1703395efeb64a174fdce5df54c5</anchor>
      <arglist>(VideoFrameMapFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga2217b2d4ce90a13ee526dde7975de8fe</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga45a35a9bd1595d2354f511dfc9e9fbee</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFrameMapFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga8d1577b8e11baf013baf457afc609f22</anchor>
      <arglist>(VideoFrameMapFlags &amp;lhs, VideoFrameMapFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaeee917d6b3ebe82254b41455e0bfbd55</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga0ea3d8bc2495a9c108687142f6d5392c</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga65e90ce06fb7ba63338300f4404d8260</anchor>
      <arglist>(VideoMultiviewFlags lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga5b384709651a65abe58d0aa39915dbfb</anchor>
      <arglist>(VideoMultiviewFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae55faf8133d52d275e1e8e14bb861b2b</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gabb6ebcb847161fa674b05f685e7e9e32</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoMultiviewFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga71bd9230c70c5320c0072ba2ff364753</anchor>
      <arglist>(VideoMultiviewFlags &amp;lhs, VideoMultiviewFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator|</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gaa8a1d5e5ee6c9b0befd3acc27a2789d2</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator &amp;</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga879f2b203fb4831c111645f95a8e3802</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator^</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga6803be6fe1721463680ba9d07f8dc340</anchor>
      <arglist>(VideoFlags lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags</type>
      <name>operator~</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gae612c461119e3d566dfadf2cec9eba44</anchor>
      <arglist>(VideoFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab7f1d51454e285ed70c26df77fd05ee3</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator &amp;=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>ga9d82ad362076f1446d6fe800c86b4f82</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>VideoFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gstreamermmEnums.html</anchorfile>
      <anchor>gab61276a2e52735af1a4b625516f3200f</anchor>
      <arglist>(VideoFlags &amp;lhs, VideoFlags rhs)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GstHelperClasses</name>
    <title>gstreamermm Helper Classes</title>
    <filename>group__GstHelperClasses.html</filename>
    <class kind="class">Gst::Fourcc</class>
    <class kind="class">Gst::Fraction</class>
    <class kind="class">Gst::Range</class>
  </compound>
  <compound kind="group">
    <name>GstInterfaces</name>
    <title>gstreamermm Interfaces</title>
    <filename>group__GstInterfaces.html</filename>
    <class kind="class">Gst::ChildProxy</class>
    <class kind="class">Gst::ColorBalance</class>
    <class kind="class">Gst::ColorBalanceChannel</class>
    <class kind="class">Gst::Navigation</class>
    <class kind="class">Gst::Preset</class>
    <class kind="class">Gst::StreamVolume</class>
    <class kind="class">Gst::TagSetter</class>
    <class kind="class">Gst::TocSetter</class>
    <class kind="class">Gst::URIHandler</class>
    <class kind="class">Gst::VideoOrientation</class>
    <class kind="class">Gst::VideoOverlay</class>
  </compound>
  <compound kind="group">
    <name>GstPlugins</name>
    <title>gstreamermm Plugins</title>
    <filename>group__GstPlugins.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>gstreamermm Reference Manual</title>
    <filename>index</filename>
    <docanchor file="index" title="Description">Description</docanchor>
    <docanchor file="index" title="Features">Features</docanchor>
    <docanchor file="index" title="Basic Usage">Basics</docanchor>
    <docanchor file="index" title="Compiling">Compiling</docanchor>
  </compound>
</tagfile>
